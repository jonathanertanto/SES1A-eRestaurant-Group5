{"ast":null,"code":"import { userSchema, newUser } from './user.js';\nimport { bookingSchema } from './booking.js';\n\nconst mongoose = require('mongoose');\n\nconst customerSchema = new mongoose.Schema({\n  personalInformation: userSchema,\n  listOfBooking: [bookingSchema]\n});\nconst Customer = mongoose.model(\"Customer\", customerSchema);\nexport function signUp(un, pass, em, fn, ln, dob, cn) {\n  mongoose.connect(\"mongodb://localhost:27017/LeBistrotdAndreDB\", {\n    useNewUrlParser: true\n  });\n  const user = newUser(un, pass, em, fn, ln, dob, cn, \"C\");\n  const customer = new Customer({\n    _id: user._id\n  });\n  customer.save();\n  return customer._id;\n}","map":{"version":3,"sources":["/Users/jonathan/Documents/WebDevProject/SES1A-eRestaurant-Group5/src/model/customer.js"],"names":["userSchema","newUser","bookingSchema","mongoose","require","customerSchema","Schema","personalInformation","listOfBooking","Customer","model","signUp","un","pass","em","fn","ln","dob","cn","connect","useNewUrlParser","user","customer","_id","save"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,OAApB,QAAkC,WAAlC;AACA,SAAQC,aAAR,QAA4B,cAA5B;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,cAAc,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACvCC,EAAAA,mBAAmB,EAAEP,UADkB;AAEvCQ,EAAAA,aAAa,EAAE,CAACN,aAAD;AAFwB,CAApB,CAAvB;AAKA,MAAMO,QAAQ,GAAGN,QAAQ,CAACO,KAAT,CAAe,UAAf,EAA2BL,cAA3B,CAAjB;AAEA,OAAO,SAASM,MAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,GAAtC,EAA2CC,EAA3C,EAA8C;AACjDf,EAAAA,QAAQ,CAACgB,OAAT,CAAiB,6CAAjB,EAAgE;AAACC,IAAAA,eAAe,EAAE;AAAlB,GAAhE;AACA,QAAMC,IAAI,GAAGpB,OAAO,CAACW,EAAD,EAAKC,IAAL,EAAWC,EAAX,EAAeC,EAAf,EAAmBC,EAAnB,EAAuBC,GAAvB,EAA4BC,EAA5B,EAAgC,GAAhC,CAApB;AACA,QAAMI,QAAQ,GAAG,IAAIb,QAAJ,CAAa;AAAEc,IAAAA,GAAG,EAAEF,IAAI,CAACE;AAAZ,GAAb,CAAjB;AACAD,EAAAA,QAAQ,CAACE,IAAT;AACA,SAAOF,QAAQ,CAACC,GAAhB;AACH","sourcesContent":["import {userSchema, newUser} from './user.js';\nimport {bookingSchema} from './booking.js';\n\nconst mongoose = require('mongoose');\n\nconst customerSchema = new mongoose.Schema({\n    personalInformation: userSchema,\n    listOfBooking: [bookingSchema]\n});\n\nconst Customer = mongoose.model(\"Customer\", customerSchema);\n\nexport function signUp(un, pass, em, fn, ln, dob, cn){\n    mongoose.connect(\"mongodb://localhost:27017/LeBistrotdAndreDB\", {useNewUrlParser: true});\n    const user = newUser(un, pass, em, fn, ln, dob, cn, \"C\");\n    const customer = new Customer({ _id: user._id });\n    customer.save();\n    return customer._id;\n}"]},"metadata":{},"sourceType":"module"}