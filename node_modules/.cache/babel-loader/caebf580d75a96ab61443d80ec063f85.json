{"ast":null,"code":"const mongoose = require('mongoose');\n\nconst userSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: [true, \"Username cannot be empty!\"]\n  },\n  password: {\n    type: String,\n    required: [true, \"Password must be at least 8 characters!\"],\n    minLength: 8\n  },\n  email: {\n    type: String,\n    required: [true, \"Email address cannot be empty!\"]\n  },\n  firstName: {\n    type: String,\n    required: [true, \"First name cannot be empty!\"]\n  },\n  lastName: String,\n  dateOfBirth: {\n    type: Date,\n    required: [true, \"Date of Birth cannot be empty!\"]\n  },\n  contactNumber: {\n    type: String,\n    required: [true, \"Contact Number cannot be empty!\"]\n  },\n  userType: {\n    type: String,\n    required: [true, \"User type must be defined!\"]\n  }\n});\nvar User = mongoose.model(\"UserSchema\", userSchema);\nexport { userSchema };\nexport function newUser(un, pass, em, fn, ln, dob, cn, ut) {\n  const user = new User({\n    username: un,\n    password: pass,\n    email: em,\n    firstName: fn,\n    lastName: ln,\n    dateOfBirth: dob,\n    contactNumber: cn,\n    userType: ut\n  });\n  user.save();\n  return user;\n}\n;","map":{"version":3,"sources":["/Users/jonathan/Documents/WebDevProject/SES1A-eRestaurant-Group5/src/model/user.js"],"names":["mongoose","require","userSchema","Schema","username","type","String","required","password","minLength","email","firstName","lastName","dateOfBirth","Date","contactNumber","userType","User","model","newUser","un","pass","em","fn","ln","dob","cn","ut","user","save"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACnCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,2BAAP;AAFL,GAD0B;AAKnCC,EAAAA,QAAQ,EAAC;AACLH,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,yCAAP,CAFL;AAGLE,IAAAA,SAAS,EAAE;AAHN,GAL0B;AAUnCC,EAAAA,KAAK,EAAC;AACFL,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gCAAP;AAFR,GAV6B;AAcnCI,EAAAA,SAAS,EAAC;AACNN,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,6BAAP;AAFJ,GAdyB;AAkBnCK,EAAAA,QAAQ,EAAEN,MAlByB;AAmBnCO,EAAAA,WAAW,EAAC;AACRR,IAAAA,IAAI,EAAES,IADE;AAERP,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gCAAP;AAFF,GAnBuB;AAuBnCQ,EAAAA,aAAa,EAAC;AACVV,IAAAA,IAAI,EAAEC,MADI;AAEVC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,iCAAP;AAFA,GAvBqB;AA2BnCS,EAAAA,QAAQ,EAAC;AACLX,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,4BAAP;AAFL;AA3B0B,CAApB,CAAnB;AAgCA,IAAIU,IAAI,GAAGjB,QAAQ,CAACkB,KAAT,CAAe,YAAf,EAA6BhB,UAA7B,CAAX;AAEA,SAAQA,UAAR;AAEA,OAAO,SAASiB,OAAT,CAAiBC,EAAjB,EAAqBC,IAArB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,GAAvC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAmD;AACtD,QAAMC,IAAI,GAAG,IAAIX,IAAJ,CAAS;AAClBb,IAAAA,QAAQ,EAAEgB,EADQ;AAElBZ,IAAAA,QAAQ,EAAEa,IAFQ;AAGlBX,IAAAA,KAAK,EAAEY,EAHW;AAIlBX,IAAAA,SAAS,EAAEY,EAJO;AAKlBX,IAAAA,QAAQ,EAAEY,EALQ;AAMlBX,IAAAA,WAAW,EAAEY,GANK;AAOlBV,IAAAA,aAAa,EAAEW,EAPG;AAQlBV,IAAAA,QAAQ,EAAEW;AARQ,GAAT,CAAb;AAUAC,EAAAA,IAAI,CAACC,IAAL;AACA,SAAOD,IAAP;AACH;AAAA","sourcesContent":["const mongoose = require('mongoose');\n\nconst userSchema = new mongoose.Schema({\n    username:{\n        type: String,\n        required: [true, \"Username cannot be empty!\"]\n    },\n    password:{\n        type: String,\n        required: [true, \"Password must be at least 8 characters!\"],\n        minLength: 8\n    },\n    email:{\n        type: String,\n        required: [true, \"Email address cannot be empty!\"]\n    },\n    firstName:{\n        type: String,\n        required: [true, \"First name cannot be empty!\"]\n    },\n    lastName: String,\n    dateOfBirth:{\n        type: Date,\n        required: [true, \"Date of Birth cannot be empty!\"]\n    },\n    contactNumber:{\n        type: String,\n        required: [true, \"Contact Number cannot be empty!\"]\n    },\n    userType:{\n        type: String,\n        required: [true, \"User type must be defined!\"]\n    }\n});\nvar User = mongoose.model(\"UserSchema\", userSchema);\n\nexport {userSchema};\n\nexport function newUser(un, pass, em, fn, ln, dob, cn, ut){\n    const user = new User({\n        username: un,\n        password: pass,\n        email: em,\n        firstName: fn,\n        lastName: ln,\n        dateOfBirth: dob,\n        contactNumber: cn,\n        userType: ut\n    });\n    user.save();\n    return user;\n};"]},"metadata":{},"sourceType":"module"}