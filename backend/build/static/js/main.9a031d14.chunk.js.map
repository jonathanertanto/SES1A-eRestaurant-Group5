{"version":3,"sources":["navbar/component/Navbar.js","component/Homepage.js","component/Title.js","menu/component/Meal.js","menu/component/Order.js","menu/component/Menu.js","reservation/component/customer_access/Table.js","reservation/component/customer_access/Discount.js","reservation/component/customer_access/Invoice.js","reservation/component/TextField.js","reservation/component/customer_access/Reservation.js","reservation/component/customer_access/Confirmation.js","reservation/component/staff_access/Invoice.js","reservation/component/staff_access/CustomerDetail.js","reservation/component/staff_access/ReservationTable.js","reservation/component/staff_access/ReservationList.js","reservation/component/Book.js","discount/component/Item.js","discount/component/Discount.js","profile/component/Confirmation.js","profile/component/NormalField.js","profile/component/Profile.js","profile/component/PasswordField.js","profile/component/DateField.js","account/component/Login.js","account/component/SignUp.js","financial_figure/component/LineChart.js","financial_figure/component/FinancialFigure.js","account/component/staff_access/AccountTable.js","account/component/staff_access/CreateAccount.js","account/component/staff_access/AccountList.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","useState","userType","setUserType","getWindowDimensions","windowDimensions","setWindowDimensions","useEffect","getData","_","a","getUserID","fetch","res","json","data","status","createAdmin","console","log","handleResize","window","addEventListener","removeEventListener","maxWidth","className","page","width","style","fontSize","href","Home","isManager","isEmployee","ListAlt","Event","LocalOffer","ShowChart","ExitToApp","accountMenu","HowToReg","homepageHeader","AccountCircle","PlaylistAdd","onClick","logOut","MeetingRoom","String","toUpperCase","innerWidth","height","innerHeight","restaurantName","bookingBtn","paddingLeft","bookingUrl","Homepage","restaurantInfo","aboutInfo","contactInfo","restaurantTime","menuHyperLink","src","alt","Title","title","Meal","meals","addOrder","map","meal","index","image","name","type","AddShoppingCart","description","price","Order","selection","setSelection","closeForm","orderMeal","id","margin","value","quantity","placeholder","required","onChange","event","newSel","target","for","notes","Menu","menuType","mealType","reservation","setReservation","table","setTable","method","headers","body","JSON","stringify","userID","newSelection","Date","date","getHours","foods","setFoods","drinks","setDrinks","response","items","menuItem","filter","item","toLowerCase","food","drink","alert","openForm","location","document","getElementById","display","Number","isFinite","_id","selectionDropdown","Row","noGutters","menuTypeSelection","mealTypeSelection","menuTypes","Col","xs","sm","UncontrolledDropdown","DropdownToggle","color","caret","DropdownMenu","newType","forEach","push","DropdownItem","getMenuType","getMealType","Table","empty","selectTable","chairs","i","Math","ceil","getRow1","chairs2","floor","getRow2","Discount","totalPayment","discountList","list","length","scope","discount","hasMeal","hasMealType","nominal","min_transaction","end_date","toString","reservationID","discountID","mealID","then","message","reload","error","Invoice","subTotalPayment","discountDetail","orders","oldOrders","invoiceInformation","componentRef","invoiceItems","mealItem","ref","discountItem","subTotal","discountOffer","total","content","trigger","marginLeft","order","removeItem","validateDiscMinTrans","confirm","orderID","findOrderIndex","qty","err","defaultValue","e","TextField","textAlign","readOnly","Reservation","getCurrentDate","tableInformation","reservationInformation","capacity","number_of_people","Confirmation","ReservationInformation","getDate","size","setNote","reserve","setStaffSelection","customer","CustomerDetail","dateOfBirth","displayDOB","getMonth","getFullYear","textField","username","email","firstName","lastName","contactNumber","customerData","ReservationTable","reservations","staffSelection","reservationList","reservationItem","defaultChecked","completeness","checked","filterDropdown","setFilter","locationfilter","reservationTypefilter","completenessFilter","locations","newLocation","getLocation","types","getType","newStatus","getStatus","Book","totalTables","setTotalTables","reservationsList","setReservationsList","time","note","setOrders","setMeals","setSubtotalPayment","setDiscount","setDiscountDetail","setOldOrders","setDiscountList","times","setTimes","transaction","discounts","getTime","year","month","day","getMinutes","isSelectedDateValid","getEmptyTables","tables","isAvailable","datetime","sort","b","table_name","table_id","table_chairs","bookTable","customerView","marginBottom","overflow","ReservationList","getTables","createNewBooking","bookReservation","reservationInfoSelection","tablesSelection","dateSelection","timeSelection","locationSelection","partySizeSelection","isNaN","newTimes","getTimes","newLocations","loc","getLocations","newSizes","getSizes","availableTablesSelection","Item","menu","formatDate","applyNow","applyDiscount","findMeal","padding","start_date","setDiscounts","setSubTotalPayment","setMenu","setOldPass","accountModification","NormalField","setData","Profile","setUsername","setEmail","password","setPassword","setFirstName","setLastName","setDateOfBirth","setContactNumber","oldPass","DateField","substring","buttonClicked","setButtonClicked","editPersonalInformation","validationPass","deleteAccount","profilePicture","userData","class","openEditValidation","openDeleteValidation","Login","rememberMe","localStorage","setItem","sessionStorage","signupLink","Signup","loginLink","LineChart","result","labels","period","datasets","label","revenue","fill","borderColor","profit","FinancialFigure","timeInterval","startPeriod","endPeriod","startDate","endDate","temp","periods","startPeriodFilter","endPeriodFilter","timeIntervalFilter","locationFilter","timeIntervals","newTimeIntervals","getTimeInterval","AccountTable","users","tableItem","user","dob","lassName","CreateAccount","accountType","AccountList","setUsers","accountTypeFilter","accountTypes","newAccountType","getAccountType","getItem","App","path","element","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sWAMaA,EAAS,SAACC,GACnB,MAAgCC,mBAAS,KAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgDF,mBAASG,KAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACRC,KADQ,yCAEDR,EAAY,KAFX,uBAIMS,MAAM,uBAAD,OAAwBD,OAJnC,cAINE,EAJM,gBAKOA,EAAIC,OALX,QAKNC,EALM,QAMJC,OACJb,EAAYY,EAAKb,UAEjBC,EAAY,IATJ,2CAAH,sDAWbK,MACD,IAEHD,qBAAU,WACN,IAAMU,EAAW,uCAAG,WAAMR,GAAN,SAAAC,EAAA,mEAETC,KAFS,iEAKNC,MAAM,oBALA,uDAOZM,QAAQC,IAAR,MAPY,yDAAH,sDAUjBF,MACD,IAEHV,qBAAU,WACN,IAAMa,EAAe,SAAAX,GACnBH,EAAoBF,MAGtB,OADAiB,OAAOC,iBAAiB,SAAUF,GAC3B,kBAAMC,OAAOE,oBAAoB,SAAUH,MACnD,IAEH,IAAMI,EAAW,IACjB,OACI,iCACI,yBAAQC,UAAwB,aAAbzB,EAAM0B,KAAmB,GAAK,iBAAjD,UACI,qBAAKD,UAAwB,aAAbzB,EAAM0B,KAAmB,kBAAkB,SAA3D,SACI,sBAAKD,UAAWpB,EAAiBsB,MAAQH,GAAY,kBAArD,UACKnB,EAAiBsB,MAAQH,GAAY,wBAAQC,UAAU,iBAAlB,SAAmC,mBAAGA,UAAU,aAAaG,MAAO,CAACC,SAAU,QACvG,MAAb3B,GACG,sBAAKuB,UAAWpB,EAAiBsB,MAAQH,GAAY,0BAArD,UACI,oBAAGC,UAAwB,aAAbzB,EAAM0B,KAAmB,SAAS,GAAII,KAAK,IAAzD,UAA6D,cAACC,EAAA,EAAD,IAA7D,WACIC,EAAU9B,KAAc+B,EAAW/B,IAAc,oBAAGuB,UAAwB,SAAbzB,EAAM0B,KAAe,SAAS,GAAII,KAAK,QAArD,UAA6D,cAACI,EAAA,EAAD,IAA7D,UACpDvB,MAAe,oBAAGc,UAAwB,gBAAbzB,EAAM0B,KAAsB,SAAS,GAAII,KAAK,eAA5D,UAA2E,cAACK,EAAA,EAAD,IAA3E,kBACbH,EAAU9B,KAAc+B,EAAW/B,IAAc,oBAAGuB,UAAwB,aAAbzB,EAAM0B,KAAmB,SAAS,GAAII,KAAK,YAAzD,UAAqE,cAACM,EAAA,EAAD,IAArE,cACnDJ,EAAU9B,IAAa,oBAAGuB,UAAwB,oBAAbzB,EAAM0B,KAA0B,SAAS,GAAII,KAAK,mBAAhE,UAAmF,cAACO,EAAA,EAAD,IAAnF,wBACtB1B,MAAe,oBAAGc,UAAwB,UAAbzB,EAAM0B,KAAgB,SAAS,GAAII,KAAK,SAAtD,UAA+D,cAACQ,EAAA,EAAD,IAA/D,YAChB3B,KAAa4B,EAAYlC,EAAkBmB,EAAUxB,EAAM0B,KAAMxB,GAAY,oBAAGuB,UAAwB,WAAbzB,EAAM0B,KAAiB,SAAS,GAAII,KAAK,UAAvD,UAAiE,cAACU,EAAA,EAAD,IAAjE,qBAKhF,aAAbxC,EAAM0B,MAAqBe,OAEhC,cAAC,IAAD,QAKNF,EAAc,SAAClC,EAAkBmB,EAAUE,EAAMxB,GACnD,OACI,sBAAKuB,UAAWpB,EAAiBsB,OAASH,GAAY,kBAAtD,UACKnB,EAAiBsB,OAASH,GAAY,yBAAQC,UAAmB,YAAPC,GAA6B,gBAATA,EAA0B,uCAAuC,iBAAzG,UAA4H,cAACgB,EAAA,EAAD,IAA5H,aACvC,sBAAKjB,UAAWpB,EAAiBsB,OAASH,GAAY,0BAAtD,UACI,oBAAGC,UAAkB,YAAPC,EAAiB,SAAS,GAAII,KAAK,WAAjD,UAA4D,cAACY,EAAA,EAAD,IAA5D,aACCV,EAAU9B,IAAa,oBAAGuB,UAAkB,gBAAPC,EAAqB,SAAS,GAAII,KAAK,eAArD,UAAoE,cAACa,EAAA,EAAD,IAApE,kBACxB,oBAAGb,KAAK,IAAIc,QAASC,GAArB,UAA6B,cAACC,EAAA,EAAD,IAA7B,oBAMVd,EAAY,SAAC9B,GACf,MAA0C,MAAnC6C,OAAO7C,GAAU8C,eAEtBf,EAAa,SAAC/B,GAChB,MAA0C,MAAnC6C,OAAO7C,GAAU8C,eAGtB5C,EAAsB,SAAAK,GACxB,MAAmDY,OACnD,MAAO,CACLM,MAFF,EAAQsB,WAGNC,OAHF,EAA2BC,cAOzBV,EAAiB,SAAAhC,GACnB,OACI,gCACK2C,IACAC,QAIPD,EAAiB,SAAA3C,GACnB,OACI,qBAAKgB,UAAU,QAAf,SACI,oBAAIA,UAAU,kBAAd,SACI,uBAAMA,UAAU,eAAhB,UACI,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,uBAAhB,wBACA,sBAAMA,UAAU,sBAChB,sBAAMA,UAAU,wBAAwBG,MAAO,CAAC0B,YAAa,IAA7D,sBACA,sBAAM7B,UAAU,uBAM9B4B,EAAa,SAAA5C,GACf,IAAI8C,EAAa,SAGjB,OAFG5C,OACC4C,EAAa,gBAEb,qBAAK9B,UAAU,wBAAf,SACI,mBAAGK,KAAMyB,EAAT,6BChIRA,EAAa,SAEJC,EAAW,SAAA/C,GAIpB,OAHGE,OACC4C,EAAa,gBAGb,oCACKE,IACAC,IACAC,QAIPF,EAAiB,SAAAhD,GACnB,OACI,0BAASgB,UAAU,iBAAnB,UACKmC,IACAC,QAIPD,EAAiB,SAAAnD,GACnB,OACI,sBAAKgB,UAAU,gBAAf,UACI,mBAAGK,KAAMyB,EAAT,SAAqB,qBAAK9B,UAAU,WAAWqC,IAAI,2IAA2IC,IAAI,kCAClM,sBAAKtC,UAAU,uBAAf,UACI,mBAAGK,KAAMyB,EAAT,mCADJ,IACmD,uBAC/C,mBAAGzB,KAAMyB,EAAT,2CAKVM,EAAgB,SAAApD,GAClB,OACI,sBAAKgB,UAAU,iBAAf,UACI,mBAAGK,KAAK,QAAR,SAAgB,qBAAKL,UAAU,WAAWqC,IAAI,0EAA0EC,IAAI,+BAC5H,qBAAKtC,UAAU,uBAAf,SACI,mBAAGK,KAAK,QAAR,2BAKV4B,EAAY,SAAAjD,GACd,OACI,0BAASgB,UAAU,kBAAnB,UACI,uCACA,oDACA,iTAONkC,EAAc,SAAAlD,GAChB,OACI,iCACI,qBAAKgB,UAAU,qB,qEC3DduC,EAAQ,SAACC,GAClB,OACI,qBAAKxC,UAAU,SAAf,SACI,oBAAIA,UAAU,sBAAd,SACI,uBAAMA,UAAU,eAAhB,UACI,sBAAMA,UAAU,eAChB,+BAAOsB,OAAOkB,GAAOjB,gBACrB,sBAAMvB,UAAU,uB,SCLvByC,EAAO,SAACD,EAAOE,EAAOC,GAC/B,OACI,oCACI,6BAAKH,IACL,qBAAKxC,UAAU,kBAAf,SACK0C,EAAME,KAAI,SAACC,EAAMC,GAAP,OACP,sBAAiB9C,UAAU,YAA3B,UACI,sBAAKA,UAAU,2BAAf,UACI,qBAAKqC,IAAKQ,EAAKE,MAAO/C,UAAU,gBAAgBsC,IAAKO,EAAKG,OAC1D,qBAAKhD,UAAU,iBAAf,SACI,yBAAQmB,QAAS,SAAAnC,GAAI2D,EAASE,IAAQI,KAAK,SAA3C,UAAqD,cAACC,EAAA,EAAD,IAArD,gBAGR,qBAAKlD,UAAU,OAAf,SAAuB6C,EAAKG,OAC5B,qBAAKhD,UAAU,cAAf,SAA8B6C,EAAKM,cACnC,sBAAKnD,UAAU,QAAf,cAAyB6C,EAAKO,WATxBN,YCPjBO,EAAQ,SAACC,EAAWC,EAAcC,EAAWC,GACtD,OACI,qBAAKzD,UAAU,oBAAoB0D,GAAG,SAAtC,SACI,uBAAM1D,UAAU,iBAAhB,UACI,oBAAIG,MAAO,CAACwD,OAAQ,GAApB,iFACA,sBAAK3D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe4D,MAAON,EAAUO,SAAUC,YAAY,WAAWC,UAAQ,EAClGC,SAAU,SAAAC,GACN,IAAIC,EAAM,2BACHZ,GADG,IAENO,SAAUI,EAAME,OAAOP,QAE3BL,EAAaW,MAGrB,uBAAOE,IAAI,gBAAX,yBAEJ,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe4D,MAAON,EAAUe,MAAOP,YAAY,QAC5EE,SAAU,SAAAC,GACN,IAAIC,EAAM,2BACHZ,GADG,IAENe,MAAOJ,EAAME,OAAOP,QAExBL,EAAaW,MAGrB,uBAAOE,IAAI,gBAAX,iCAEJ,sBAAKpE,UAAU,oBAAf,UACI,wBAAQiD,KAAK,SAAS9B,QAASsC,EAA/B,mBACA,wBAAQR,KAAK,SAAS9B,QAASqC,EAA/B,6BCnBPc,EAAO,SAAAtF,GAkBhB,MAAkCR,mBAAS,CACvC+F,SAAU,GACVC,SAAU,oBACV3B,KAAM,KACNgB,SAAU,EACVQ,MAAO,KALX,mBAAOf,EAAP,KAAkBC,EAAlB,KASA,EAAsC/E,mBAAS,IAA/C,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAA0BlG,mBAAS,IAAnC,mBAAOmG,EAAP,KAAcC,EAAd,KACA9F,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,sEACME,MAAM,sBAAuB,CAC3C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQhG,SAPJ,cACNE,EADM,gBAUOA,EAAIC,OAVX,UAUNC,EAVM,OAWZoF,EAAepF,EAAKmF,aACpBG,EAAStF,EAAKqF,OACI,KAAfrF,EAAKqF,MAbI,mDAgBRQ,EAAe,CACfZ,SAAW,IAAIa,KAAK9D,OAAOhC,EAAKqF,MAAMU,OAAOC,YAAc,GAAI,SAAS,QACxEd,SAAU,oBACV3B,KAAM,KACNgB,SAAU,EACVQ,MAAO,IAEXd,EAAa4B,GAvBD,4CAAH,sDAyBVjG,MACCH,MACL,IAEHD,qBAAU,WACN,GAAW,KAAR6F,EACC,OAAOrB,EAAUiB,SAAW,oBAE7B,IAAIa,KAAK9D,OAAOqD,EAAMU,OAAOC,YAAc,GAC1ChC,EAAUiB,SAAW,SAErBjB,EAAUiB,SAAW,UAG1B,CAACI,IAGJ,MAA0BnG,mBAAS,MAAnC,mBAAO+G,EAAP,KAAcC,EAAd,KACA,EAA4BhH,mBAAS,MAArC,mBAAOiH,EAAP,KAAeC,EAAf,KAEA5G,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,+EAGeE,MAAM,sBAAuB,CAChD0F,OAAQ,OACRC,QAAS,CACL,eAAgB,sBANhB,cAGFa,EAHE,gBAWWA,EAAStG,OAXpB,OAWFC,EAXE,OAYJsG,EAAQtG,EAAKuG,SACS,sBAAvBvC,EAAUiB,WACTqB,EAAQtG,EAAKuG,SAASC,QAClB,SAAAC,GAAI,MAAsB,QAAlBA,EAAKxB,UAA2BjB,EAAUiB,SAASyB,gBAAkBD,EAAKxB,aAGpFgB,EAAQK,EAAME,QAChB,SAAAG,GAAI,MAAkB,MAAdA,EAAKhD,QAEXwC,EAASG,EAAME,QACjB,SAAAI,GAAK,MAAmB,MAAfA,EAAMjD,QAEnBuC,EAASD,GACTG,EAAUD,GAzBF,kDA2BRhG,QAAQC,IAAR,MA3BQ,0DAAH,sDA8BbX,MACD,CAACuE,EAAUiB,WAEd,IAKM5B,EAAW,SAACE,GACd,OAAI3D,KAIe,KAAhBuF,EACQ0B,MAAM,oGAVV,IAAIf,KAAK9D,OAAOqD,EAAMU,OAAOC,YAAc,GAAM,SAAW,SAYrCU,gBAAkBnD,EAAK0B,UAA8B,QAAlB1B,EAAK0B,SAC3D4B,MAAM,oEAEjB7C,EAAUT,KAAOA,OACjBuD,MAVID,MAAM,iEACCvG,OAAOyG,SAAShG,KAAK,WAW9B+F,EAAW,SAAApH,GACbsH,SAASC,eAAe,UAAUpG,MAAMqG,QAAU,SAEhD/C,EAAS,uCAAG,WAAMzE,GAAN,eAAAC,EAAA,yDACVwH,OAAOC,SAASD,OAAOnD,EAAUO,YAAc4C,OAAOnD,EAAUO,UAAU,IAAM,KAAK4C,OAAOnD,EAAUO,WAAa,GADzG,yCAEHsC,MAAM,yEAFH,uBAIIhH,MAAM,iBAAkB,CACtC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBpB,SAAUP,EAAUO,SACpBQ,MAAOf,EAAUe,MACjBxB,KAAMS,EAAUT,KAAK8D,IACrBlC,YAAaA,EAAYkC,QAbnB,cAIRvH,EAJQ,gBAgBKA,EAAIC,OAhBT,cAiBLE,QAGL4G,MAAM,kCACN3C,KAHA2C,MAAM,yBAlBI,2CAAH,sDAwBT3C,EAAY,SAAAxE,GACdsH,SAASC,eAAe,UAAUpG,MAAMqG,QAAU,OAClD,IAAItC,EAAM,2BACHZ,GADG,IAENO,SAAU,EACVQ,MAAO,KAEXd,EAAaW,IAGjB,OACI,0BAASlE,UAAU,OAAnB,UACKqD,EAAMC,EAAWC,EAAcC,EAAWC,GAC1ClB,EAAM,QACNqE,EAAkBtD,EAAWC,IAC7BgC,GAAiC,UAAvBjC,EAAUkB,UAA+C,sBAAvBlB,EAAUkB,SAEnD,wBADA/B,EAAK,QAAS8C,EAAO5C,IAExB8C,GAAkC,WAAvBnC,EAAUkB,UAAgD,sBAAvBlB,EAAUkB,SAErD,wBADA/B,EAAK,SAAUgD,EAAQ9C,OAMjCiE,EAAoB,SAACtD,EAAWC,GAClC,OACI,eAACsD,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,gBAAzB,UACK+G,EAAkBzD,EAAWC,GAC7ByD,EAAkB1D,EAAWC,OAIpCwD,EAAoB,SAACzD,EAAWC,GAClC,IAAM0D,EAAY,CAAC,oBAAqB,QAAS,UAqBjD,OACI,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,cAAkEsD,EAAUiB,SAA5E,OACA,eAACkD,EAAA,EAAD,CAAczH,UAAU,wBAAxB,cAvBQ,SAAAhB,GAChB,IAAI0I,EAAU,GAgBd,OAfAT,EAAUU,SAAQ,SAAA1E,GACdyE,EAAQE,KACJ,cAACC,EAAA,EAAD,CAAyB7H,UAAU,wBAC3BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACHZ,GADG,IAENiB,SAAUtB,IAEdM,EAAaW,IANzB,SASKjB,GATcA,OAapByE,EAMmDI,GAAlD,aAKVd,EAAoB,SAAC1D,EAAWC,GAClC,IAAMgB,EAAW,CAAC,oBAAqB,QAAS,UAqBhD,OACI,cAAC2C,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,cAAkEsD,EAAUkB,SAA5E,OACA,eAACiD,EAAA,EAAD,CAAczH,UAAU,wBAAxB,cAvBQ,SAAAhB,GAChB,IAAI0I,EAAU,GAgBd,OAfAnD,EAASoD,SAAQ,SAAA1E,GACbyE,EAAQE,KACJ,cAACC,EAAA,EAAD,CAAyB7H,UAAU,wBAC3BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACHZ,GADG,IAENkB,SAAUvB,IAEdM,EAAaW,IANzB,SASKjB,GATcA,OAapByE,EAMmDK,GAAlD,aCjQHC,G,MAAQ,SAACzJ,GA0BpB,OACE,qBAAKyB,UAAU,kBAAf,SACE,eAACkH,EAAA,EAAD,CACElH,UAAWzB,EAAM0J,MAAQ,yBAA2B,QACpD9G,QAAS,SAAAnC,GACPT,EAAM0J,MACF1J,EAAM2J,YAAY3J,EAAMyE,KAAMzE,EAAMmF,GAAInF,EAAM4J,QAC9C1I,QAAQC,IAAI,iCALpB,UAQE,cAACmH,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,YAAzB,SACE,cAACkH,EAAA,EAAD,CAAKlH,UAAU,cAAf,SApCQ,SAAAhB,GAEd,IADA,IAAImJ,EAAS,GACJC,EAAI,EAAGA,EAAIC,KAAKC,KAAK/J,EAAM4J,OAAS,GAAIC,IAC/CD,EAAOP,KACL,sBAEE5H,UAAWzB,EAAM0J,MAAQ,cAAgB,cADpCG,IAKX,OAAOD,EA0B6BI,OAEhC,cAAC1B,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,YAAzB,SACE,cAACkH,EAAA,EAAD,CAAKlH,UAAU,cAAf,SA3BQ,SAAAhB,GAEd,IADA,IAAIwJ,EAAU,GACLJ,EAAI,EAAGA,EAAIC,KAAKI,MAAMlK,EAAM4J,OAAS,GAAIC,IAChDI,EAAQZ,KACN,sBAEE5H,UAAWzB,EAAM0J,MAAQ,cAAgB,cADpCG,IAKX,OAAOI,EAiB6BE,OAGhC,mBAAG1I,UAAU,yBAAb,SAAuCzB,EAAMyE,c,kBC3CxC2F,GAAW,SAAClE,EAAamE,EAAclG,EAAOmG,GAKvD,OACI,sBAAKnF,GAAG,eAAe1D,UAAU,mCAAjC,UACK8I,GAAKD,EAAcpE,EAAamE,EAAclG,GAC/C,qBAAK1C,UAAU,oBAAf,SACI,wBAAQiD,KAAK,SAAS9B,QARR,SAAAnC,GACtBsH,SAASC,eAAe,gBAAgBpG,MAAMqG,QAAU,QAOhD,0BAMVsC,GAAO,SAACD,EAAcpE,EAAamE,EAAclG,GAEnD,IADA,IAAMkD,EAAQ,GACNwC,EAAE,EAAGA,EAAES,EAAaE,SAAUX,EAClCxC,EAAMgC,KAAK7B,GAAK8C,EAAaT,GAAI3D,EAAamE,EAAclG,IAGhE,OACI,kCACI,sBAAK1C,UAAU,iBAAf,UACI,iDACA,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,kBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,yBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,uBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,qBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,8BACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,yBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,QAA1B,oBAGR,gCACC4F,eASnBG,GAAO,SAACkD,EAAUxE,EAAamE,EAAclG,GAC/C,IA6CMwG,EAAU,SAAAlK,GACZ,IAAI,IAAIoJ,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3B,GAAG9G,OAAOoB,EAAM0F,GAAGzB,OAASrF,OAAO2H,EAASpG,MACxC,OAAO,EAGf,OAAO,GAELsG,EAAc,SAAAnK,GAChB,IAAI,IAAIoJ,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3B,GAAG9G,OAAOoB,EAAM0F,GAAGnF,MAAM1B,gBAAkBD,OAAO2H,EAASzE,UAAUjD,cACjE,OAAO,EAGf,OAAO,GAGX,OACI,+BACI,6BAAK0H,EAASjG,OACd,6BAAKiG,EAAS9F,cACd,6BAAiD,MAA5C7B,OAAO2H,EAASzE,UAAUjD,cAAwB,MAAoD,MAA5CD,OAAO2H,EAASzE,UAAUjD,cAAuB,OAAS,UACzH,8BAA8B,MAAxBD,OAAO2H,EAAShG,OAAa,KAAKgG,EAASG,SAAiC,MAAxB9H,OAAO2H,EAAShG,MAAY,IAAI,MAC1F,mCAAMgG,EAASI,mBACf,6BAAK,IAAIjE,KAAK9D,OAAO2H,EAASK,WAAWC,aACzC,qBAAIvJ,UAAU,aAAd,UAA2B,wBAAQmB,QAtErB,SAAAnC,GAClB,IAEI,GAAmB,MAAhByF,GAAuC,KAAhBA,IAAuBwE,IAAaxC,OAAOC,SAASkC,GAC1E,OAIJ,GAAW,KAARlG,GAAsC,KAAxBpB,OAAO2H,EAASpG,OAA0C,MAA5BvB,OAAO2H,EAASzE,UAC3D,OAAO2B,MAAM,+BAIjB,GAA2B,KAAxB7E,OAAO2H,EAASpG,OAA0C,MAA5BvB,OAAO2H,EAASzE,YAAoB2E,IACjE,OAAOhD,MAAM,kBAAD,OAAgE,MAA5C7E,OAAO2H,EAASzE,UAAUjD,cAAwB,OAAS,QAA/E,uCAIhB,GAAGkF,OAAOmC,GAAgBnC,OAAOwC,EAASI,iBACtC,OAAOlD,MAAM,gIAGjBhH,MAAM,qBAAsB,CACxB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuE,cAAe/E,EAAYkC,IAC3B8C,WAAYR,EAAStC,IACrB+C,OAAQT,EAASpG,KACjBtD,QAAS2J,QAGZS,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,YAG/B,MAAMC,GACH3D,MAAM2D,KA4BqB,mBAA3B,WCrHCC,GAAU,SAACC,EAAiBf,EAAUgB,EAAgBxF,EAAayF,EAAQxH,EAAOmG,EAAcsB,GACzG,OACI,qBAAKnK,UAAU,gBAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,oDAAf,SACKoK,GAAmB3F,EAAayF,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GAAW,GAAM,YAQrIC,GAAqB,SAAC3F,EAAayF,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GAIpH,IAHA,IAAIE,EAEAzB,EADE0B,EAAe,GAEblC,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3BkC,EAAa1C,KAAK2C,GAASN,EAAgBC,EAAO9B,GAAI1F,EAAM0F,GAAI+B,EAAWzH,IAE/EkG,EAAeoB,EAAkBf,EAajC,OACI,0BAASjJ,UAAU,UAAnB,UACK2I,GAASlE,EAAamE,EAAclG,EAAOmG,GAC5C,sBAAK7I,UAAU,iBAAf,UACI,qBAAK0D,GAAG,cAAc8G,IAAK,SAAC7E,GAAD,OAAe0E,EAAe1E,GAAW3F,UAAU,mBAA9E,SACI,wBAAOA,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,uBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,sBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,mBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,mBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,mBACA,oBAAIA,UAAU,QAAd,eACA,oBAAIA,UAAU,QAAd,oBAGR,kCACKsK,EACiB,KAAjBL,EAAqB,GAAKQ,GAAahG,EAAawF,EAAgBhB,GACpEyB,GAASV,GACTW,GAAc1B,GACd2B,GAAMhC,WAInB,gCACI,cAAC,KAAD,CACIiC,QAAS,kBAAMR,GACfS,QAAS,kBAAM,qDAEnB,wBAAQ3K,MAAO,CAAC4K,WAAW,IAAK5J,QAtCvB,SAAAnC,GACrB,GAJ2B,KAAnBiL,EAKJ,OAAO9D,MAAM,wDAEjBG,SAASC,eAAe,gBAAgBpG,MAAMqG,QAAU,SAkC5C,sCAOdkE,GAAW,SAACV,GACd,OACI,+BACI,uBACA,uBACA,uBACA,uBACA,uBACA,6BAAI,iDACJ,oBAAIhK,UAAU,aAAd,SAA2B,uCAAUyG,OAAOC,SAASsD,GAAiBA,EAAgB,WAI5FW,GAAgB,SAAC1B,GACnB,OACI,+BACI,uBACA,uBACA,uBACA,uBACA,uBACA,6BAAI,gDACJ,oBAAIjJ,UAAU,aAAd,SAA2B,uCAAUyG,OAAOC,SAASuC,GAAUA,EAAS,WAI9E2B,GAAQ,SAAChC,GACX,OACI,+BACI,uBACA,uBACA,uBACA,uBACA,uBACA,6BAAI,6CACJ,oBAAI5I,UAAU,aAAd,SAA2B,uCAAUyG,OAAOC,SAASkC,GAAcA,EAAa,WAKtF2B,GAAW,SAACN,EAAgBe,EAAOnI,EAAMqH,EAAQxH,GACnD,IA6CMuI,EAAa,SAAAjM,GACf,GAAIgM,GAAmB,KAAVtI,GAAiBG,EAI9B,OAAI4D,OAAOC,SAASD,OAAOuE,EAAMnH,YAAc4C,OAAOuE,EAAMnH,UAAU,IAAM,GAAK4C,OAAOuE,EAAMnH,WAAa,EAChGsC,MAAM,wEAGK,KAAnB8D,GAA2BiB,EAAqB,YAAgE,MAAlD5J,OAAO2I,EAAezF,UAAUjD,eAA0B4H,EAAY,YAC1HvJ,OAAOuL,QAAQ,yFAI5BhM,MAAM,mBAAoB,CACtB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBmG,QAAS9J,OAAO0J,EAAMrE,KACtB9C,SAAU4C,OAAOuE,EAAMnH,UACvB4F,WAAgC,KAAnBQ,EAAwB,GAAK3I,OAAO2I,EAAetD,KAChE0C,gBAAiB6B,EAAqB,UACtC/B,YAAaA,EAAY,cAG5BQ,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,YApBjBjK,OAAOyG,SAASwD,UAwBzBqB,EAAuB,SAACjI,GAC1B,IACI,GAAsB,KAAnBgH,EACC,OAAO,EAGX,IADA,IAAIrG,EAAQ,EACJwE,EAAI,EAAGA,EAAI8B,EAAOnB,SAAUX,EAC7B9G,OAAO4I,EAAO9B,GAAGzB,OAASrF,OAAO0J,EAAMrE,KACJ,WAA/BrF,OAAO2B,GAAM1B,cACZqC,GAAW6C,OAAOuE,EAAMnH,UAAY4C,OAAO/D,EAAM0F,GAAGhF,OAEpDQ,IAAY6C,OAAOyD,EAAO9B,GAAGvE,UAAY4C,OAAOuE,EAAMnH,WAAa4C,OAAO/D,EAAM0F,GAAGhF,OAGvFQ,GAAU6C,OAAOyD,EAAO9B,GAAGvE,UAAY4C,OAAO/D,EAAM0F,GAAGhF,OAG/D,OAAQQ,GAAS6C,OAAOwD,EAAeZ,iBAC1C,MAAMS,GACH3D,MAAM2D,KAGRuB,EAAiB,SAAArM,GACnB,IACI,IAAI,IAAIoJ,EAAI,EAAGA,EAAI8B,EAAOnB,SAAUX,EAChC,GAAG9G,OAAO4I,EAAO9B,GAAGzB,OAASrF,OAAO0J,EAAMrE,KACtC,OAAOyB,EAGf,OAAQ,EACX,MAAM0B,GACH3D,MAAM2D,KAGRX,EAAc,SAAClG,GACjB,IACI,GAAsB,KAAnBgH,EACC,OAAO,EAEX,IAAI,IAAI7B,EAAI,EAAGA,EAAI8B,EAAOnB,SAAUX,EAChC,GAAG9G,OAAO4I,EAAO9B,GAAGzB,OAASrF,OAAO0J,EAAMrE,KAAK,CAC3C,IAAI2E,OAAG,EAMP,GAJIA,EAD8B,WAA/BhK,OAAO2B,GAAM1B,cACNkF,OAAOuE,EAAMnH,UAEZ4C,OAAOyD,EAAO9B,GAAGvE,UAAY4C,OAAOuE,EAAMnH,UAElDvC,OAAOoB,EAAM0F,GAAGnF,MAAM1B,gBAAkBD,OAAO2I,EAAezF,UAAUjD,eAAiB+J,EAAM,EAC9F,OAAO,OAGX,GAAGhK,OAAOoB,EAAM0F,GAAGnF,MAAM1B,gBAAkBD,OAAO2I,EAAezF,UAAUjD,cACvE,OAAO,EAInB,OAAO,EACV,MAAMgK,GACHpF,MAAMoF,KAId,OACI,+BACI,6BAAK1I,EAAKG,OACV,6BAAI,uBAAOhD,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcR,EAAMnH,SAAUG,SAjJ1E,SAACyH,GACrBT,EAAMnH,SAAW4H,EAAEtH,OAAOP,WAiJtB,6BAAI,uBAAO5D,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcR,EAAM3G,MAAOL,SA/IrE,SAACyH,GACvBT,EAAM3G,MAAQoH,EAAEtH,OAAOP,WA+InB,mCAAMf,EAAKO,SACX,mCAAMqD,OAAOC,SAASD,OAAOuE,EAAMnH,WAAY4C,OAAO5D,EAAKO,OAASqD,OAAOuE,EAAMnH,UAAU,KAC3F,+BAAI,wBAAQ1C,QA/ID,SAAAnC,GACf,KAAGkL,EAAOnB,QAAU,IAAMiC,GAA4B,KAAnBf,GAAyBvH,EAAMqG,QAAU,IAAMlG,EAIlF,OAAI4D,OAAOC,SAASD,OAAOuE,EAAMnH,YAAc4C,OAAOuE,EAAMnH,UAAU,IAAM,GAAK4C,OAAOuE,EAAMnH,UAAY,EAC/FsC,MAAM,kEAGa,IAA3BM,OAAOuE,EAAMnH,WACZmH,EAAMnH,SAAW4C,OAAOyD,EAAOmB,KAAkBxH,UAC1CoH,KAGW,KAAnBhB,GAA0BiB,EAAqB,WAAetL,OAAOuL,QAAQ,oGAIhFhM,MAAM,mBAAoB,CACtB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBmG,QAASJ,EAAMrE,IACf9C,SAAUmH,EAAMnH,SAChBQ,MAAO2G,EAAM3G,MACboF,WAAgC,KAAnBQ,EAAwB,GAAK3I,OAAO2I,EAAetD,KAChE0C,gBAAiB6B,EAAqB,cAGzCvB,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,YApBjBjK,OAAOyG,SAASwD,UAgInB,kBAAJ,OACA,+BAAI,yBAAQ7J,UAAU,wBAAwBmB,QAAS8J,EAAnD,UAAgE,mBAAGjL,UAAU,gBAA7E,OAAJ,WAINyK,GAAe,SAAChG,EAAawE,EAAUrF,GAiCzC,OACI,+BACI,6BAAKqF,EAASjG,OACd,mCACA,6BAAKiG,EAAS9F,cACd,oCAA+B,MAAxB7B,OAAO2H,EAAShG,OAAa,KAAKgG,EAASG,SAAiC,MAAxB9H,OAAO2H,EAAShG,MAAY,IAAI,OAC3F,oCAAOW,KACP,uBACA,qBAAI5D,UAAU,aAAd,UAA2B,yBAAQA,UAAU,wBAAwBmB,QAxC1D,SAAAnC,GACf,IAEI,IAAIiK,EACA,OAIJ,IAAKrJ,OAAOuL,QAAQ,2CAChB,OAGJhM,MAAM,sBAAuB,CACzB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuE,cAAe/E,EAAYkC,QAG9BgD,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,YAG/B,MAAM0B,GACHpF,MAAMoF,KAWqB,UAAgE,mBAAGvL,UAAU,gBAA7E,OAA3B,WCtTC0L,GAAY,SAAClJ,EAAOlD,GAC7B,OACI,mCACI,sBAAKU,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAWG,MAAO,CAACwL,UAAW,QAA7C,SACI,oBAAI3L,UAAU,OAAd,SAAsBwC,MAE1B,uBAAOxC,UAAU,0BAA0BiD,KAAK,OAAOW,MAAOtE,EAAMsM,UAAQ,OAEhF,2BCNCC,GAAc,SAACpH,EAAaE,EAAOmH,EAAgB5B,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GA+BpI,OACI,0BAASnK,UAAU,cAAnB,UACKuC,EAAM,eACP,qBAAKvC,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UAEI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACK+L,GAAiBpH,GACjBqH,GAAuBvH,GACxB,qBAAKzE,UAAU,2BAAf,SAEI,wBAAQA,UAAU,SAASmB,QA5CrC,SAAAnC,GAEtB,GADa,IAAIoG,KAAK9D,OAAOqD,EAAMU,OACzB,IAAID,KAAK0G,KACf,OAAO3F,MAAM,4DAEIvG,OAAOuL,QAAQ,4CAIpChM,MAAM,yBAA0B,CAC5B0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,YAAaA,EAAYkC,IACzBhC,MAAOA,EAAMgC,IACbtB,KAAMV,EAAMU,SAGfsE,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GACCA,EAAKC,OAGLK,OAAOyG,SAASwD,SAFhB1D,MAAM,qCAqBc,yCAKf4D,GAAQC,EAAiBf,EAAUgB,EAAgBxF,EAAayF,EAAQxH,EAAOmG,EAAcsB,cAQhH4B,GAAmB,SAACpH,GACtB,IAAMiB,EAAQ,GAMd,OALAA,EAAMgC,KAAK8D,GAAU,eAAgB/G,EAAM3B,OAC3C4C,EAAMgC,KAAK8D,GAAU,iBAAkB/G,EAAMsH,WAC7CrG,EAAMgC,KAAK8D,GAAU,mBAAoB,IAAItG,KAAK9D,OAAOqD,EAAMU,OAAOC,YAAc,GAAI,SAAS,UACjGM,EAAMgC,KAAK8D,GAAU,wBAAyB,IAAItG,KAAK9D,OAAOqD,EAAMU,SACpEO,EAAMgC,KAAK8D,GAAU,uBAAwB/G,EAAM0B,WAC5CT,GAGLoG,GAAyB,SAACvH,GAC5B,IAAMmB,EAAQ,GAGd,OAFAA,EAAMgC,KAAK8D,GAAU,yBAA0BjH,EAAYyH,mBAC3DtG,EAAMgC,KAAK8D,GAAU,QAAuC,SAA9BpK,OAAOmD,EAAYJ,OAAoB,IAAMI,EAAYJ,QAChFuB,GC3EEuG,GAAe,SAAC5N,GACzB,OACI,sBAAKyB,UAAU,mCAAmC0D,GAAG,SAArD,UACI,0DACA,sBAAK1D,UAAU,mCAAf,UACKoM,GAAuB,eAAgB7N,EAAM+E,UAAUqB,MAAM3B,MAC7DoJ,GAAuB,iBAAkB7N,EAAM+E,UAAUqB,MAAMsH,aAEpE,sBAAKjM,UAAU,mCAAf,UACKoM,GAAuB,mBAAoB7N,EAAM+E,UAAUL,MAC3DmJ,GAAuB,wBAAyB,IAAIhH,KAAK7G,EAAM8N,eAEpE,sBAAKrM,UAAU,mCAAf,UACKoM,GAAuB,uBAAwB7N,EAAM+E,UAAU+C,UAC/D+F,GAAuB,yBAA0B7N,EAAM+E,UAAUgJ,SAEtE,sBAAKtM,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe8D,YAAY,QAAQE,SAAU,SAAAC,GAAK,OAAI1F,EAAMgO,QAAQtI,EAAME,OAAOP,UAC9G,wDAEJ,sBAAK5D,UAAU,oBAAf,UACI,wBAAQiD,KAAK,SAAS9B,QAAS5C,EAAMiO,QAArC,kBACA,wBAAQvJ,KAAK,SAAS9B,QAAS5C,EAAMiF,UAArC,2BAMV4I,GAAyB,SAAC5J,EAAOlD,GACnC,OACI,sBAAKU,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe4D,MAAOtE,EAAMsM,UAAY,IACrE,gCAASpJ,QC/BRuH,GAAU,SAACtF,EAAayF,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,EAAWsC,GAWpH,OACI,sBAAK/I,GAAG,cAAc1D,UAAU,8CAAhC,UACI,yCACA,qBAAKA,UAAU,oDAAf,SACKoK,GAAmB3F,EAAayF,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,KAE7G,qBAAKnK,UAAU,oBAAf,SACI,wBAAQiD,KAAK,SAAS9B,QAjBR,SAAAnC,GAMtByN,EALe,CACXC,SAAU,GACVjI,YAAa,GACbE,MAAO,KAGX2B,SAASC,eAAe,eAAepG,MAAMqG,QAAU,QAU/C,yBCnBHmG,GAAiB,SAACD,GAC3B,IAKMrH,EAAO,IAAID,KAAK9D,OAAOoL,EAASE,cAChCC,EAAaxH,EAAKgH,UAAY,IAFrB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAE7EhH,EAAKyH,YAAc,IAAMzH,EAAK0H,cACzEnH,EAAQ,GAOd,OANAA,EAAMgC,KAAKoF,GAAU,WAAYN,EAASO,WAC1CrH,EAAMgC,KAAKoF,GAAU,QAASN,EAASQ,QACvCtH,EAAMgC,KAAKoF,GAAU,OAAQN,EAASS,UAAY,IAAMT,EAASU,WACjExH,EAAMgC,KAAKoF,GAAU,gBAAiBH,IACtCjH,EAAMgC,KAAKoF,GAAU,iBAAkBN,EAASW,gBAG5C,qBAAK3J,GAAG,eAAe1D,UAAU,oBAAjC,SACK,uBAAMA,UAAU,iBAAhB,UACG,sDACCsN,GAAa1H,GACd,qBAAK5F,UAAU,oBAAf,SACI,wBAAQiD,KAAK,SAAS9B,QApBZ,SAAAnC,GACtBsH,SAASC,eAAe,gBAAgBpG,MAAMqG,QAAU,QAmB5C,2BAOd8G,GAAe,SAAC1H,GAClB,OACI,qBAAK5F,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACK4F,EACD,qBAAK5F,UAAU,qCAS7BgN,GAAY,SAACxK,EAAOlD,GACtB,OACI,sBAAKU,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe4D,MAAOtE,EAAMsM,UAAY,IACrE,gCAASpJ,QC7CR+K,GAAmB,SAACC,EAAcC,EAAgBhB,EAAmBvC,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GACtJ,OACI,oCACKwC,GAAec,EAAef,UAC9B3C,GAAQ0D,EAAehJ,YAAayF,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,EAAWsC,GACxH,wBAAOzM,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,gBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,0BACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,4BACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,uBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,wBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,mBACA,oBAAIA,UAAU,UACd,oBAAIA,UAAU,UACd,oBAAIA,UAAU,eAGtB,gCACK0N,GAAgBF,EAAcf,YAO7CiB,GAAkB,SAACF,EAAcf,GAEnC,IADA,IAAM7G,EAAQ,GACNwC,EAAE,EAAGA,EAAEoF,EAAazE,SAAUX,EAAE,CACpC,IAAMrC,EAAOyH,EAAapF,GAC1BxC,EAAMgC,KAAK+F,GAAgB5H,EAAKtB,YAAasB,EAAKpB,MAAOoB,EAAK2G,SAAUD,IAE5E,OAAO7G,GAGL+H,GAAkB,SAAClJ,EAAaE,EAAO+H,EAAUD,GAkCnD,OACI,+BACI,6BAAKhI,EAAYkC,MACjB,6BAAKhC,EAAM3B,OACX,6BAAK2B,EAAMsH,WACX,6BAAK,IAAI7G,KAAK9D,OAAOqD,EAAMU,OAAOkE,aAClC,6BAAK9E,EAAYyH,mBACjB,6BAAoC,SAA9B5K,OAAOmD,EAAYJ,OAAoB,GAAKI,EAAYJ,QAC9D,+BAAI,uBAAOpB,KAAK,WAAWS,GAAG,iBAAiBV,KAAK,iBAAiBY,MAAM,OAAOgK,eAAiBnJ,EAAYoJ,aAAe7J,SAtBlH,SAACyH,GACjBtM,MAAM,8BAA+B,CACjC0F,OAAQ,OACJC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuE,cAAelI,OAAOmD,EAAYkC,KAClCpH,OAAQkM,EAAEtH,OAAO2J,YAGxBnE,MAAK,SAACvK,GAAS,OAAOA,EAAIC,aAW3B,eACA,qBAAIW,UAAU,aAAd,UAA2B,wBAAQmB,QA1ChB,SAAAnC,GAMvByN,EALe,CACXC,SAAUA,EACVjI,YAAaA,EACbE,MAAOA,IAGX2B,SAASC,eAAe,gBAAgBpG,MAAMqG,QAAU,SAmCzB,sBAA3B,OACA,qBAAIxG,UAAU,aAAd,UAA2B,wBAAQmB,QAlCvB,SAAAnC,GAMhByN,EALe,CACXC,SAAUA,EACVjI,YAAaA,EACbE,MAAOA,IAGX2B,SAASC,eAAe,eAAepG,MAAMqG,QAAU,SA2BxB,qBAA3B,WCxDNuH,GAAiB,SAACjI,EAAQkI,GAE5B,OACI,eAACnH,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,gCAAzB,UACKiO,GAAenI,EAAQkI,EAHnB,GAIJE,GAAsBpI,EAAQkI,EAJ1B,GAKJG,GAAmBrI,EAAQkI,EALvB,OAUXC,GAAiB,SAACnI,EAAQkI,EAAW1B,GACvC,IAAM8B,EAAY,CAAC,gBAAiB,oBAAqB,+BAAgC,iCAoBzF,OACI,cAAClH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,eAACjF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAAiE8F,EAAOO,WACxE,cAACoB,EAAA,EAAD,CAAczH,UAAU,wBAAxB,SAvBQ,SAAAhB,GAChB,IAAIqP,EAAc,GAgBlB,OAfAD,EAAUzG,SAAQ,SAAAtB,GACdgI,EAAYzG,KACR,cAACC,EAAA,EAAD,CAA6B7H,UAAU,wBAC/BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACH4B,GADG,IAENO,SAAUA,IAEd2H,EAAU9J,IANtB,SASKmC,GATcA,OAapBgI,EAMkDC,WAM3DJ,GAAwB,SAACpI,EAAQkI,EAAW1B,GAC9C,IAAMiC,EAAQ,CAAC,MAAO,QAAS,UAoB/B,OACI,cAACrH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,eAACjF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAAiE8F,EAAO7C,OACxE,cAACwE,EAAA,EAAD,CAAczH,UAAU,wBAAxB,SAvBI,SAAAhB,GACZ,IAAI0I,EAAU,GAgBd,OAfA6G,EAAM5G,SAAQ,SAAA1E,GACVyE,EAAQE,KACJ,cAACC,EAAA,EAAD,CAAyB7H,UAAU,wBAC3BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACH4B,GADG,IAEN7C,KAAMA,IAEV+K,EAAU9J,IANtB,SASKjB,GATcA,OAapByE,EAMkD8G,WAM3DL,GAAqB,SAACrI,EAAQkI,EAAW1B,GAC3C,IAAM/M,EAAS,CAAC,mBAAoB,yBAA0B,4BAoB9D,OACI,cAAC2H,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,eAACjF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAAiE8F,EAAO+H,eACxE,cAACpG,EAAA,EAAD,CAAczH,UAAU,wBAAxB,SAvBM,SAAAhB,GACd,IAAIyP,EAAY,GAgBhB,OAfAlP,EAAOoI,SAAQ,SAAAkG,GACXY,EAAU7G,KACN,cAACC,EAAA,EAAD,CAAiC7H,UAAU,wBACnCmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACH4B,GADG,IAEN+H,aAAcA,IAElBG,EAAU9J,IANtB,SASK2J,GATcA,OAapBY,EAMkDC,WC9GpDC,GAAO,SAAA3P,GAChB,MAAgCR,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOoQ,EAAP,KAAoBC,EAApB,KAEA,EAA4CrQ,mBAAS,CACjDkO,SAAU,GACVjI,YAAa,GACbE,MAAO,KAHX,mBAAO8I,EAAP,KAAuBhB,EAAvB,KAKA,EAA4BjO,mBAAS,CACjC6H,SAAU,gBACVpD,MAAM,IAAImC,MAAOE,YAAc,GAAI,SAAW,QAC9CuI,aAAc,qBAHlB,mBAAO/H,EAAP,KAAekI,EAAf,KAKA,EAAgDxP,mBAAS,IAAzD,mBAAOsQ,EAAP,KAAyBC,EAAzB,KAEA,EAAkCvQ,mBAAS,CACvCyE,KAAM,QACN0B,MAAO,CACH3B,KAAM,KACNU,GAAI,MAER2B,KAAM,IAAID,KACV4J,KAAM,KACN3I,SAAU,KACViG,KAAM,IATV,mBAAOhJ,EAAP,KAAkBC,EAAlB,KAaA,EAAwB/E,mBAAS,MAAjC,mBAAOyQ,EAAP,KAAa1C,EAAb,KACA,EAAsC/N,mBAAS,KAA/C,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAA0BlG,mBAAS,KAAnC,mBAAOmG,EAAP,KAAcC,EAAd,KACA,EAA4BpG,mBAAS,IAArC,mBAAO0L,EAAP,KAAegF,EAAf,KACA,EAA0B1Q,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcyM,EAAd,KAGA,EAA8C3Q,mBAAS,GAAvD,oBAAOwL,GAAP,MAAwBoF,GAAxB,MACA,GAAgC5Q,mBAAS,GAAzC,qBAAOyK,GAAP,MAAiBoG,GAAjB,MACA,GAA4C7Q,mBAAS,IAArD,qBAAOyL,GAAP,MAAuBqF,GAAvB,MACA,GAAkC9Q,mBAAS,IAA3C,qBAAO2L,GAAP,MAAkBoF,GAAlB,MAGA,GAAwC/Q,mBAAS,IAAjD,qBAAOqK,GAAP,MAAqB2G,GAArB,MAMA,GAA0BhR,mBAAS,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,UAA1F,qBAAOiR,GAAP,MAAcC,GAAd,MAGA5Q,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACRC,KADQ,yCAEDR,EAAY,KAFX,uBAIMS,MAAM,uBAAD,OAAwBD,OAJnC,cAINE,EAJM,gBAKOA,EAAIC,OALX,QAKNC,EALM,QAMJC,OACJb,EAAYY,EAAKb,UAEjBC,EAAY,IATJ,2CAAH,sDAWbK,MACD,IAICD,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACRR,GAAyB,MAAbA,IACZiG,EAAe,KACfE,EAAS,MAHD,SAKMzF,MAAM,sBAAuB,CAC3C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQhG,SAXJ,cAKNE,EALM,gBAcOA,EAAIC,OAdX,OAcNC,EAdM,OAeZoF,EAAepF,EAAKmF,aACpBG,EAAStF,EAAKqF,OAhBF,2CAAH,sDAkBb5F,MACD,CAACN,IAGJK,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACZiQ,EAAU,IACVC,EAAS,IACH1Q,GAAyB,MAAbA,GAAiD,KAA5BgP,EAAef,SAH1C,iEAMMvN,MAAM,iBAAkB,CACtC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,YAA4B,MAAbhG,GAAmD,KAA/BgP,EAAehJ,YAAsBgJ,EAAehJ,YAAYkC,IAAMlC,EAAYkC,QAZjH,cAMNvH,EANM,gBAeOA,EAAIC,OAfX,OAeNC,EAfM,OAgBZ4P,EAAU5P,EAAK4K,QACfiF,EAAS7P,EAAKoD,OAjBF,4CAAH,sDAmBb3D,MACD,CAAC0F,EAAahG,EAAUgP,IAG3B3O,qBAAU,WAEN,IADA,IAAI8E,EAAQ,EACJwE,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3BxE,GAAS6C,OAAOyD,EAAO9B,GAAGvE,UAAY4C,OAAO/D,EAAM0F,GAAGhF,OAE1DgM,GAAmBxL,KACpB,CAACsG,EAAQxH,IAGZ5D,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACZoQ,GAAY,GACZC,GAAkB,MACkB,KAA/B7B,EAAehJ,cAAuC,MAAhBA,GAAuC,KAAhBA,GAAuD,KAAjCnD,OAAOmD,EAAYwE,YAAsD,KAA/BwE,EAAehJ,aAAwE,KAAhDnD,OAAOmM,EAAehJ,YAAYwE,WAAuBvG,EAAMqG,QAAU,GAAKmB,EAAOnB,QAAS,GAH3P,iEAMM5J,MAAM,yBAA0B,CAC9C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBwE,WAA0B,MAAbhL,EAAmBgG,EAAYwE,SAAWwE,EAAehJ,YAAYwE,SAClF0G,YAAa3F,GACbtH,MAAOA,EACPwH,OAAQA,MAfJ,cAMN9K,EANM,gBAkBOA,EAAIC,OAlBX,QAkBNC,EAlBM,QAmBJC,SACJ8P,GAAY5I,OAAOnH,EAAKsE,QACxB0L,GAAkBhQ,EAAKyG,OArBf,4CAAH,sDAwBbhH,MACD,CAACN,EAAUgG,EAAauF,GAAiBtH,EAAOwH,EAAQuD,IAG3D3O,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACZsQ,GAAa,IACO,MAAhB9K,GAAuC,KAAhBA,GAAuD,KAA/BgJ,EAAehJ,YAFtD,iEAKMtF,MAAM,iBAAkB,CACtC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,YAA2B,MAAbhG,EAAmBgG,EAAYkC,IAAM8G,EAAehJ,YAAYkC,QAX1E,cAKNvH,EALM,gBAcOA,EAAIC,OAdX,OAcNC,EAdM,OAeZiQ,GAAajQ,EAAK4K,QAfN,4CAAH,sDAiBbnL,MACD,CAACN,EAAUgG,EAAagJ,IAG3B3O,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACZuQ,GAAgB,IADJ,SAEMrQ,MAAM,oBAAqB,CACzC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAqC,KAA5BuI,EAAef,UAAsD,MAAnCpL,OAAO7C,GAAU8C,cAAyBkM,EAAef,SAAS/F,IAAMzH,SAR/G,cAENE,EAFM,gBAWOA,EAAIC,OAXX,WAWNC,EAXM,QAYHC,OAZG,yCAaDiQ,GAAgB,KAbf,OAe0B,MAAnClO,OAAO7C,GAAU8C,cAChBiO,GAAgBlQ,EAAKsQ,UAAU9J,QAAO,SAAAxG,GAAI,OACrC,IAAI8F,KAAK9D,OAAOhC,EAAKgK,WAAWuG,UAAY,IAAIzK,KAAK9D,OAAOqD,EAAMU,OAAOwK,YACjD,MAAxBvO,OAAOhC,EAAKiF,YAA0B,IAAIa,KAAK9D,OAAOqD,EAAMU,OAAOC,YAAc,GAAI,SAAS,YAAsC,MAAxBhE,OAAOhC,EAAKiF,UAAgB,QAAQ,eAGrJiL,GAAgBlQ,EAAKsQ,UAAU9J,QAAO,SAAAxG,GAAI,OACrC,IAAI8F,KAAK9D,OAAOhC,EAAKgK,WAAWuG,UAAY,IAAIzK,KAAK9D,OAAOmM,EAAe9I,MAAMU,OAAOwK,YAChE,MAAxBvO,OAAOhC,EAAKiF,YAA0B,IAAIa,KAAK9D,OAAOmM,EAAe9I,MAAMU,OAAOC,YAAc,GAAI,SAAS,YAAsC,MAAxBhE,OAAOhC,EAAKiF,UAAgB,QAAQ,eAvB5J,4CAAH,sDA2BbxF,MACD,CAAC0O,EAAgB9I,EAAOjC,EAAOjE,IAKlCK,qBAAU,WACgB,UAAnBwE,EAAUL,KACTyM,GAAS,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,UAEhEA,GAAS,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,YAE5D,CAACD,GAAOnM,EAAUL,OAGrB,IAAMoJ,GAAU,SAAArN,GACZ,IACM8Q,EAAOxM,EAAU+B,KAAK0H,cAG5B,MAJe,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEzGzJ,EAAU+B,KAAKyH,YAEtB,IADFxJ,EAAU+B,KAAKgH,UACL,IAAIyD,EAAK,IAAIxM,EAAU0L,KAAK,OAIhDlD,GAAiB,SAAA9M,GACnB,IACMqG,EAAO,IAAID,KACX0K,EAAOzK,EAAK0H,cACZgD,EAHS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGzG1K,EAAKyH,YACpBkD,EAAM3K,EAAKgH,UACX2C,EAAO3J,EAAK4K,WAAa,EAAG5K,EAAKC,WAAW,EAAKD,EAAKC,WAAa,EAEzE,OADiB0J,EAAO,GAAKe,EAAM,IAAIC,EAAI,IAAIF,EAAK,IAAId,EAAK,SAAae,EAAM,KAAKC,EAAI,GAAG,IAAIF,EAAK,KAAKd,EAAK,IAAI,UAKjHkB,GAAsB,SAAAlR,GACxB,OAAQ,IAAIoG,KAAKiH,MAAYwD,WAAc,IAAIzK,KAAK0G,MAAmB+D,WAIrEM,GAAiB,SAAAnR,GACnB,IAAIoR,EAASxB,EAAY9I,QAAO,SAAAnB,GAAK,OAAIA,EAAM0L,eAC/C,OAAOD,EAAOrH,QAElBjK,qBAAU,WAEFoR,MAAyB5M,EAAU+C,UAAY/C,EAAUgJ,MACzD,uCAAC,WAAMtN,GAAN,mBAAAC,EAAA,6DACOqR,EAAWjE,KADlB,SAEmBlN,MAAM,gBAAiB,CACnC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBI,KAAMiL,MARjB,cAEOlR,EAFP,gBAWeA,EAAIC,OAXnB,OAWGD,EAXH,OAcOgR,EAAShR,EAAIgR,OAAOG,MAAK,SAACtR,EAAEuR,GAAH,OAASvR,EAAEgN,SAAWuE,EAAEvE,SAAW,EAAKuE,EAAEvE,SAAWhN,EAAEgN,UAAa,EAAI,KAAGnG,QACxG,SAAAnB,GAAK,SACArB,EAAUgJ,KAAO,IAAI3H,EAAMsH,UAAY3I,EAAUgJ,MAAQ3H,EAAMsH,SAAS3I,EAAUgJ,MAAO,IAC1F3H,EAAM0B,WAAa/C,EAAU+C,UAAY1B,EAAM0L,eAEnDxB,EAAeuB,GAnBlB,2CAAD,0DAuBL,CAAC9M,EAAU0L,KAAM1L,EAAU+B,KAAM/B,EAAUgJ,KAAMhJ,EAAU+C,WAG9D,IAiCM6B,GAAc,SAACuI,EAAYC,EAAUC,GACvCpN,EAAa,2BACND,GADK,IAERqB,MAAO,CACH3B,KAAMyN,EACN/M,GAAIgN,EACJzE,SAAU0E,MAGlBC,MAIEpE,GAAO,uCAAG,WAAMxN,GAAN,SAAAC,EAAA,sEACNE,MAAM,WAAY,CACpB0F,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAL,2BACC3B,GADD,IAEF+B,KAAMgH,KACNhI,MAAO4K,EACP/J,OAAQhG,UARJ,OAWZsE,KACA5D,OAAOyG,SAASwD,SAZJ,2CAAH,sDAgBP+G,GAAY,SAAA5R,GACdoH,MAEEA,GAAW,SAAApH,GACbsH,SAASC,eAAe,UAAUpG,MAAMqG,QAAU,SAEhDhD,GAAY,SAAAxE,GACdsH,SAASC,eAAe,UAAUpG,MAAMqG,QAAU,QAoC1D,OA9BI1H,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,yDACZ8P,EAAoB,IAChBtQ,GAAyB,MAAbA,EAFJ,iEAKMU,MAAM,0BAA2B,CAC/C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBoB,SAAUP,EAAOO,SACjBpD,KAAM6C,EAAO7C,KACb4K,aAAc/H,EAAO+H,iBAbjB,cAKNzO,EALM,gBAgBOA,EAAIC,OAhBX,UAiBa,MADnBC,EAhBM,QAiBJkO,aAjBI,0CAkBDuB,EAAoB,KAlBnB,QAoBZA,EAAoBzP,EAAKkO,aAAa+C,MAClC,SAACtR,EAAGuR,GAAJ,OAAUvR,EAAE0F,MAAMU,KAAOmL,EAAE7L,MAAMU,KAAO,EAAKmL,EAAE7L,MAAMU,KAAOpG,EAAE0F,MAAMU,MAAS,EAAI,MArBzE,4CAAH,sDAwBbtG,MACD,CAAC+G,EAAQrH,EAAUgP,IAItBvO,KAIoB,KAArBoC,OAAO7C,GACE,4BAG0B,MAAnC6C,OAAO7C,GAAU8C,cACTsP,GAAarE,GAAShJ,GAAW+I,EAASjJ,EAAWC,EAAckM,GA1V5D,CAAC,oBAAqB,+BAAgC,iCA0VwBU,IAlH1E,SAAAnR,GAEd,GADAS,QAAQC,IAAI,kBACRyQ,KAAmB,EAAG,CACtB,IAAIC,EAAS,GAyBb,OAxBAxB,EAAYjH,SAAQ,SAAAhD,GACZA,EAAM0L,YACND,EAAOxI,KACH,cAAC,EAAD,CAEIlE,GAAIiB,EAAMgC,IACVwB,OAAQxD,EAAMsH,SACdjJ,KAAM2B,EAAM3B,KACZiF,OAAK,EACLC,YAAaA,IALRvD,EAAMgC,MASnByJ,EAAOxI,KACH,cAAC,EAAD,CAEIlE,GAAIiB,EAAMgC,IACVwB,OAAQxD,EAAMsH,SACdjJ,KAAM2B,EAAM3B,KACZkF,YAAaA,IAJRvD,EAAMgC,SASpByJ,KAsFwGF,GAAqB7D,GAAS5H,EAAaE,EAAOmH,GAAgB5B,EAAQxH,EAAOmG,GAAcmB,GAAiBf,GAAUgB,GAAgBE,ID3Y1O,SAACrE,EAAQkI,EAAWc,EAAkBrB,EAAgBhB,EAAmBvC,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GAC5K,OACI,0BAASnK,UAAU,cAAnB,UACKuC,EAAM,eACP,sBAAKvC,UAAU,YAAf,UACI,qBAAKG,MAAO,CAAC2Q,aAAc,IAA3B,SACK/C,GAAejI,EAAQkI,KAE5B,qBAAK7N,MAAO,CAAC4Q,SAAU,QAAvB,SACKxD,GAAiBuB,EAAkBrB,EAAgBhB,EAAmBvC,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,WCoYpJ6G,CAAgBlL,EAAQkI,EAAWc,EAAkBrB,EAAgBhB,EAAmBvC,EAAQxH,EAAOmG,GAAcmB,GAAiBf,GAAUgB,GAAgBE,IAVhKvK,OAAOyG,SAAShG,KAAK,UAe9BwQ,GAAe,SAACrE,EAAShJ,EAAW+I,EAASjJ,EAAWC,EAAckM,EAAOrB,EAAW+B,EAAgBc,EAAWf,EAAqB7D,EAAS5H,EAAaE,EAAOmH,EAAgB5B,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GAC/P,OACI,yBAASnK,UAAU,cAAnB,SACKyE,EACmB,MAAhBA,EACI,wBAEAoH,GAAYpH,EAAaE,EAAOmH,EAAgB5B,EAAQxH,EAAOmG,EAAcmB,EAAiBf,EAAUgB,EAAgBE,GAG5H+G,GAAiB1E,EAAShJ,EAAW+I,EAASjJ,EAAWC,EAAckM,EAAOrB,EAAW+B,EAAgBc,EAAWf,EAAqB7D,MAMnJ6E,GAAmB,SAAC1E,EAAShJ,EAAW+I,EAASjJ,EAAWC,EAAckM,EAAOrB,EAAW+B,EAAgBc,EAAWf,EAAqB7D,GAC9I,OACI,0BAASrM,UAAU,cAAnB,UACK,cAAC,GAAD,CAAcwM,QAASA,EAAShJ,UAAWA,EAAWF,UAAWA,EAAWiJ,QAASA,EAASF,QAASA,IACvG9J,EAAM,eACN4O,GAAgB7N,EAAWC,EAAckM,EAAOrB,EAAW+B,EAAgBc,EAAWf,OAK7FiB,GAAkB,SAAC7N,EAAWC,EAAckM,EAAOrB,EAAW+B,EAAgBc,EAAWf,GAC3F,OACI,sBAAKxM,GAAG,oBAAR,UACK0N,GAAyB9N,EAAWC,EAAckM,EAAOrB,GACzDiD,GAAgB/N,EAAW4M,EAAqBC,EAAgBc,OAMvEG,GAA2B,SAAC9N,EAAWC,EAAckM,EAAOrB,GAC9D,OACI,eAACvH,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,6CAAzB,UACK+G,GAAkBzD,EAAWC,GAC7B+N,GAAchO,EAAWC,GACzBgO,GAAcjO,EAAWC,EAAckM,GACvC+B,GAAkBlO,EAAWC,EAAc6K,GAC3CqD,GAAmBnO,EAAWC,OAIrCwD,GAAoB,SAACzD,EAAWC,GAClC,IAAMgB,EAAW,CAAC,QAAS,UAwB3B,OACI,cAAC2C,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,cAAkEsD,EAAUL,KAA5E,OACA,eAACwE,EAAA,EAAD,CAAczH,UAAU,wBAAxB,cA1BQ,SAAAhB,GAChB,IAAI0I,EAAU,GAmBd,OAlBAnD,EAASoD,SAAQ,SAAA1E,GACbyE,EAAQE,KACJ,cAACC,EAAA,EAAD,CAAyB7H,UAAU,wBAC3BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACHZ,GADG,IAENL,KAAMA,EACN0B,MAAM,eACCrB,EAAUqB,OAEjBqK,KAAM,OAEVzL,EAAaW,IAVzB,SAYKjB,GAZcA,OAgBpByE,EAMmDI,GAAlD,aAKVwJ,GAAgB,SAAChO,EAAWC,GAC9B,IAAMwM,GAAQ,IAAI3K,MAAO0H,WAAW,EAC9BzH,GAAO,IAAID,MAAO2H,cAAgB,KAAOgD,EAAQ,IAAM,KAAOA,EAAQ,KAAM,IAAI3K,MAAOiH,UAC7F,OACI,cAACnF,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,uBAAOnE,KAAK,OAAOc,SAAS,WAAW/D,UAAU,mBAAmBwL,aAAcnG,EAC9ErB,SAAU,SAAAyH,GACN,GAAKiG,MAAM,IAAItM,KAAK,IAAIA,KAAKqG,EAAEtH,OAAOP,SAS/B,CACHnE,QAAQC,IAAI,gBACZ,IAAIwE,EAAM,2BACHZ,GADG,IAENqB,MAAM,eACHrB,EAAUqB,OAEbU,KAAM,IAAID,OAEd7B,EAAaW,OAlB+B,CAC5C,IAAIA,EAAM,2BACHZ,GADG,IAENqB,MAAM,eACHrB,EAAUqB,OAEbU,KAAM,IAAID,KAAKqG,EAAEtH,OAAOP,SAE5BL,EAAaW,UAiB/BqN,GAAgB,SAACjO,EAAWC,EAAckM,GA0B5C,OACI,cAACvI,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SACwB,OAAnBsD,EAAU0L,KAAgB,gBAAkB1L,EAAU0L,OAE3D,eAACvH,EAAA,EAAD,CAAczH,UAAU,wBAAxB,cA9BK,SAAAhB,GACb,IAAI2S,EAAW,GAqBf,OApBAlC,EAAM9H,SAAQ,SAAAqH,GACV2C,EAAS/J,KACL,cAACC,EAAA,EAAD,CAEI7H,UAAU,wBACVmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACPZ,GADO,IAEVqB,MAAM,eACCrB,EAAUqB,OAEjBqK,KAAMA,IAENzL,EAAaW,IAXrB,SAcC8K,GAbQA,OAiBV2C,EAQmDC,GAAlD,aAKVJ,GAAoB,SAAClO,EAAWC,EAAc6K,GA2BhD,OACI,cAAClH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAC4B,OAAvBsD,EAAU+C,SAAmB,oBAAsB/C,EAAU+C,WAElE,eAACoB,EAAA,EAAD,CAAczH,UAAU,wBAAxB,cA/BS,SAAAhB,GACjB,IAAI6S,EAAe,GAqBnB,OApBAzD,EAAUzG,SAAQ,SAAAmK,GACdD,EAAajK,KACT,cAACC,EAAA,EAAD,CAEI7H,UAAU,wBACVmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACPZ,GADO,IAEVqB,MAAM,eACCrB,EAAUqB,OAEjB0B,SAAUyL,IAEVvO,EAAaW,IAXrB,SAcC4N,GAbQA,OAiBVD,EASmDE,GAAlD,aAKVN,GAAqB,SAACnO,EAAWC,GA4BnC,OACI,cAAC2D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SACwB,IAAnBsD,EAAUgJ,KAAa,sBAAwBhJ,EAAUgJ,KAAK/C,aAEnE,eAAC9B,EAAA,EAAD,CAAczH,UAAU,wBAAxB,cAhCK,SAAAhB,GAGb,IAFA,IAAIgT,EAAW,GADG,WAGT5J,GACL4J,EAASpK,KACL,cAACC,EAAA,EAAD,CAEI7H,UAAU,wBACVmB,QAAS,SAAAsK,GACL,IAAIvH,EAAM,2BACPZ,GADO,IAEVqB,MAAM,eACCrB,EAAUqB,OAEjB2H,KAAMlE,IAEN7E,EAAaW,IAXrB,SAcCkE,GAbQA,KAHRA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAoBT,OAAO4J,EASmDC,GAAlD,aAOVZ,GAAkB,SAAC/N,EAAW4M,EAAqBC,EAAgBc,GACrE,OACI,cAACpK,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,iBAAzB,SACI,cAACkH,EAAA,EAAD,UACK5D,EAAU+B,MAAQ/B,EAAU0L,MAAQ1L,EAAU+C,UAAY/C,EAAUgJ,KACjE4D,IACIgC,GAAyB/B,EAAgBc,GAEzC,mBAAGjR,UAAU,wBAAb,wFAGJ,mBAAGA,UAAU,wBAAb,+FAMdkS,GAA2B,SAAC/B,EAAgBc,GAC9C,OACId,IAAmB,EACf,gCACI,oBAAGnQ,UAAU,mBAAb,UAAiCmQ,IAAjC,yBACA,sBAAKnQ,UAAU,YAAf,UACA,sBAAMA,UAAU,gBADhB,2BAGA,sBAAMA,UAAU,eAHhB,gCAMA,cAAC6G,EAAA,EAAD,CAAKC,WAAS,EAAd,SAAgBmK,SAGpB,mBAAGjR,UAAU,wBAAb,mCC/pBCmS,I,MAAO,SAACvC,EAAWnL,EAAaE,EAAOjC,EAAOsH,EAAiBoI,GACxE,IAAMC,EAAa,SAAChN,GAChB,IACMiL,EAAW,IAAIlL,KAAK9D,OAAO+D,IAIjC,OAHYiL,EAASjE,UAGR,IALE,CAAC,MAAO,MAAO,QAAS,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAG7EiE,EAASxD,YAEH,IADdwD,EAASvD,eAGpBuF,EAAW,SAACrJ,GACd,IAAI/J,KACA,OAAOU,OAAOyG,SAAShG,KAAO,SAElCkS,EAActJ,IAEZsJ,EAAgB,SAACtJ,GACnB,IAEI,GAAmB,MAAhBxE,GAAuC,KAAhBA,GAAgC,MAAV/B,IAAkBuG,IAAaxC,OAAOC,SAASsD,GAC3F,OAIJ,GAAW,KAARtH,GAAsC,KAAxBpB,OAAO2H,EAASpG,OAA0C,MAA5BvB,OAAO2H,EAASzE,UAC3D,OAAO2B,MAAM,+BAIjB,GAAG1B,EAAYwE,SAASF,OAAS,EAE7B,OADA5C,MAAM,wDACCvG,OAAOyG,SAAShG,KAAO,eAIlC,GAA6C,MAA1CiB,OAAO2H,EAAS1E,UAAUhD,gBAA8B,IAAI6D,KAAK9D,OAAOqD,EAAMU,OAAOC,YAAc,GAAI,SAAS,YAAwD,MAA1ChE,OAAO2H,EAAS1E,UAAUhD,cAAoB,QAAQ,UACnL,OAAO4E,MAAM,8EAAD,OAA+E7E,OAA6B,MAAtB2H,EAAS1E,SAAiB,QAAQ,YAIxI,GAA2B,KAAxBjD,OAAO2H,EAASpG,OAA0C,MAA5BvB,OAAO2H,EAASzE,YAAoB2E,EAAYF,GAC7E,OAAO9C,MAAM,kBAAD,OAAgE,MAA5C7E,OAAO2H,EAASzE,UAAUjD,cAAwB,OAAS,QAA/E,uCAIhB,GAAGkF,OAAOuD,GAAmBvD,OAAOwC,EAASI,iBACzC,OAAOlD,MAAM,gIAEjB,IAAM5G,EAAmB,KAAVmD,IAAuBwG,EAAQD,GAE9C9J,MAAM,qBAAsB,CACxB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBuE,cAAelI,OAAOmD,EAAYkC,KAClC8C,WAAYnI,OAAO2H,EAAStC,KAC5B+C,OAAQpI,OAAO2H,EAASpG,MACxBtD,OAAQA,MAGXoK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAEH,GADA6G,MAAM7G,EAAKsK,SACRtK,EAAKC,OACJ,OAAOK,OAAOyG,SAAShG,KAAO,kBAG7C,MAAMkL,GACHpF,MAAMoF,KAGRrC,EAAU,SAACD,GACb,IAAI,IAAIb,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3B,GAAG9G,OAAOoB,EAAM0F,GAAGzB,OAASrF,OAAO2H,EAASpG,MACxC,OAAO,EAGf,OAAO,GAELsG,EAAc,SAACF,GACjB,IAAI,IAAIb,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3B,GAAG9G,OAAOoB,EAAM0F,GAAGnF,MAAM1B,gBAAkBD,OAAO2H,EAASzE,UAAUjD,cACjE,OAAO,EAGf,OAAO,GAELiR,EAAW,SAACvJ,GACd,IACI,IAAI,IAAIb,EAAE,EAAGA,EAAEgK,EAAKrJ,SAAUX,EAC1B,GAAG9G,OAAO8Q,EAAKhK,GAAGzB,OAASrF,OAAO2H,EAASpG,MACvC,OAAOuP,EAAKhK,GAGpB,OAAO,KACV,MAAMmD,GACHpF,MAAMoF,KAGd,OACI,kCACI,qBAAKvL,UAAU,0BAAf,SACK4P,EAAUhN,KAAI,SAACqG,EAAUnG,GAAX,OACX,sBAAiB9C,UAAU,gBAA3B,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKqC,IAAK4G,EAASlG,MAAO/C,UAAU,oBAAoBsC,IAAK2G,EAASjG,OACtE,qBAAKhD,UAAU,qBAAf,SACI,wBAAQiD,KAAK,SAAS9B,QAAS,SAAAnC,GAAIsT,EAASrJ,IAA5C,4BAGR,qBAAKjJ,UAAU,OAAf,SAAuBiJ,EAASjG,OAChC,qBAAKhD,UAAU,cAAf,SAA8BiJ,EAAS9F,cACvC,sBAAKhD,MAAO,CAACsS,QAAS,IAAtB,UACI,sBAAKzS,UAAU,SAAf,UAAwB,6CAAiE,MAA5CsB,OAAO2H,EAAS1E,UAAUhD,cAAwB,MAAmD,MAA1CD,OAAO2H,EAAS1E,UAAUhD,cAAoB,QAAQ,YAC9J,sBAAKvB,UAAU,SAAf,UAAwB,6CAAiE,MAA5CsB,OAAO2H,EAASzE,UAAUjD,cAAwB,MAAmD,MAA1CD,OAAO2H,EAASzE,UAAUjD,cAAoB,OAAO,WAC7J,sBAAKvB,UAAU,SAAf,UAAwB,6CAA+C,KAA1BsB,OAAO2H,EAASpG,MAAe2P,EAASvJ,GAAUjG,KAAO,OACtG,sBAAKhD,UAAU,SAAf,UAAwB,4CAA4C,MAAxBsB,OAAO2H,EAAShG,OAAa,KAAKgG,EAASG,SAAiC,MAAxB9H,OAAO2H,EAAShG,MAAY,IAAI,OAChI,sBAAKjD,UAAU,SAAf,UAAwB,uDAAxB,IAAwDiJ,EAASI,mBACjE,sBAAKrJ,UAAU,SAAf,UAAwB,0CAAkBqS,EAAW/Q,OAAO2H,EAASyJ,aAAe,MAAQL,EAAW/Q,OAAO2H,EAASK,iBAE3H,qBAAKtJ,UAAU,MAAf,SACI,wBAAQmB,QAAS,SAAAnC,GAAIsT,EAASrJ,IAAYhG,KAAK,SAA/C,2BAlBEH,YCtGjB6F,GAAW,SAAA3J,GACpB,MAAkCR,mBAAS,IAA3C,mBAAOoR,EAAP,KAAkB+C,EAAlB,KACA7T,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACME,MAAM,oBAAqB,CACzC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQhG,SAPJ,cACNE,EADM,gBAUOA,EAAIC,OAVX,WAUNC,EAVM,QAWHC,OAXG,yCAYDoT,EAAa,KAZZ,OAcZA,EAAarT,EAAKsQ,UAAU9J,QAAO,SAAAxG,GAAI,OACnC,IAAI8F,KAAK9D,OAAOhC,EAAKgK,WAAWuG,UAAa,IAAIzK,KAAK0G,KAAmB+D,cAfjE,2CAAH,sDAkBP/D,EAAiB,SAAA9M,GACnB,IACMqG,EAAO,IAAID,KACX0K,EAAOzK,EAAK0H,cACZgD,EAHS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGzG1K,EAAKyH,YACpBkD,EAAM3K,EAAKgH,UACX2C,EAAO3J,EAAK4K,WAAa,EAAG5K,EAAKC,WAAcD,EAAKC,WAAa,EAEvE,OADiB0J,EAAO,GAAKe,EAAM,IAAIC,EAAI,IAAIF,EAAK,IAAId,EAAK,SAAae,EAAM,KAAKC,EAAI,GAAG,IAAIF,EAAK,KAAKd,EAAK,IAAI,UAGvHjQ,MACD,IAEH,MAAsCP,mBAAS,KAA/C,mBAAOiG,EAAP,KAAoBC,EAApB,KACA,EAA0BlG,mBAAS,KAAnC,mBAAOmG,EAAP,KAAcC,EAAd,KACA9F,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACRC,MACAwF,EAAe,KAFP,SAIMvF,MAAM,sBAAuB,CAC3C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQhG,SAVJ,cAINE,EAJM,gBAaOA,EAAIC,OAbX,OAaNC,EAbM,OAcZoF,EAAepF,EAAKmF,aACpBG,EAAStF,EAAKqF,OAfF,2CAAH,sDAiBb5F,MACD,IAEH,MAA4BP,mBAAS,IAArC,mBAAO0L,EAAP,KAAegF,EAAf,KACA,EAA0B1Q,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcyM,EAAd,KACArQ,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACRC,OACAgQ,EAAU,IACVC,EAAS,KAHD,SAKMhQ,MAAM,iBAAkB,CACtC0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,YAAaA,EAAYkC,QAXrB,cAKNvH,EALM,gBAcOA,EAAIC,OAdX,OAcNC,EAdM,OAeZ4P,EAAU5P,EAAK4K,QACfiF,EAAS7P,EAAKoD,OAhBF,2CAAH,sDAkBb3D,MACD,CAAC0F,IAEJ,MAA8CjG,mBAAS,GAAvD,mBAAOwL,EAAP,KAAwB4I,EAAxB,KACA9T,qBAAU,WAEN,IADA,IAAI8E,EAAQ,EACJwE,EAAE,EAAGA,EAAE1F,EAAMqG,SAAUX,EAC3BxE,GAAS6C,OAAOyD,EAAO9B,GAAGvE,UAAY4C,OAAO/D,EAAM0F,GAAGhF,OAE1DwP,EAAmBhP,KACpB,CAACsG,EAAQxH,IAEZ,MAAwBlE,mBAAS,IAAjC,mBAAO4T,EAAP,KAAaS,EAAb,KAmBA,OAlBA/T,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,+EAEeE,MAAM,mBAAoB,CAC7C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,sBALhB,cAEFa,EAFE,gBAQWA,EAAStG,OARpB,OAQFC,EARE,OASRuT,EAAQvT,EAAKuG,UATL,kDAWRpG,QAAQC,IAAR,MAXQ,0DAAH,sDAcbX,MACD,IAGC,0BAASiB,UAAU,WAAnB,UACKuC,EAAM,kBACM,KAAZqN,GAAkBuC,GAAKvC,EAAWnL,EAAaE,EAAOjC,EAAOsH,EAAiBoI,OCnH9EjG,I,MAAe,SAAC2G,EAAYC,EAAqBvP,GAC1D,OACI,sBAAKxD,UAAU,mCAAmC0D,GAAG,SAArD,UACI,yFACA,sBAAK1D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,WAAWjD,UAAU,eAAegE,SAAU,SAAAC,GAAK,OAAI6O,EAAW7O,EAAME,OAAOP,QAAQE,YAAY,eAAeC,UAAQ,IACtI,uBAAOK,IAAI,gBAAX,6BAEJ,sBAAKpE,UAAU,oBAAf,UACI,wBAAQiD,KAAK,SAAS9B,QAAS4R,EAA/B,kBACA,wBAAQ9P,KAAK,SAAS9B,QAASqC,EAA/B,4BCVHwP,GAAc,SAACxQ,EAAOlD,EAAM2T,GACrC,OACI,mCACI,sBAAKjT,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,OAAd,SAAsBwC,MAE1B,uBAAOxC,UAAU,0BAA0BiD,KAAK,OAAOe,SAAU,SAAAC,GAAK,OAAIgP,EAAQhP,EAAME,OAAOP,QAAQA,MAAOtE,EAC1GsM,SAA0C,aAAhCtK,OAAOkB,GAAOwD,eAAgE,UAA/B1E,OAAOhC,GAAM0G,mBAG9E,2BCNCkN,GAAU,SAAAlU,GACnB,MAAgCR,mBAAS,MAAzC,mBAAOyO,EAAP,KAAiBkG,EAAjB,KACArU,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAU6T,EAAY7T,EAAK2N,eACtC,IACH,MAA0BzO,mBAAS,MAAnC,mBAAO0O,EAAP,KAAckG,EAAd,KACAtU,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAU8T,EAAS9T,EAAK4N,YACnC,IACH,MAAgC1O,mBAAS,MAAzC,mBAAO6U,EAAP,KAAiBC,EAAjB,KACAxU,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAUgU,EAAYhU,EAAK+T,eACtC,IACH,MAAkC7U,mBAAS,MAA3C,mBAAO2O,EAAP,KAAkBoG,EAAlB,KACAzU,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAUiU,EAAajU,EAAK6N,gBACvC,IACH,MAAgC3O,mBAAS,MAAzC,mBAAO4O,EAAP,KAAiBoG,EAAjB,KACA1U,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAUkU,EAAYlU,EAAK8N,eACtC,IACH,MAAsC5O,mBAAS,MAA/C,mBAAOoO,EAAP,KAAoB6G,EAApB,KACA3U,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAUmU,EAAenU,EAAKsN,kBACzC,IACH,MAA0CpO,mBAAS,MAAnD,mBAAO6O,EAAP,KAAsBqG,EAAtB,KACA5U,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAUoU,EAAiBpU,EAAK+N,oBAC3C,IACH,MAAgC7O,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACAI,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAUZ,EAAYY,EAAKb,eACtC,IACH,MAA8BD,mBAAS,MAAvC,mBAAOmV,EAAP,KAAgBb,EAAhB,KACAhU,qBAAU,cAAU,CAAC6U,IAErB,ICzD0BnR,EAAOlD,EAAM2T,EDyDjCrN,EAAQ,GACdA,EAAMgC,KAAKoL,GAAY,WAAY/F,EAAUkG,IAC7CvN,EAAMgC,KAAKoL,GAAY,QAAS9F,EAAOkG,IACvCxN,EAAMgC,MC5DoBpF,ED4DD,WC5DQlD,ED4DI+T,EC5DEJ,ED4DQK,EC1D3C,mCACI,sBAAKtT,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,OAAd,SAAsBwC,MAE1B,uBAAOxC,UAAU,0BAA0BiD,KAAK,WAAWe,SAAU,SAAAC,GAAK,OAAIgP,EAAQhP,EAAME,OAAOP,QAAQA,MAAOtE,OAEtH,4BDoDRsG,EAAMgC,KAAKoL,GAAY,aAAc7F,EAAWoG,IAChD3N,EAAMgC,KAAKoL,GAAY,YAAa5F,EAAUoG,IAC9C5N,EAAMgC,KE/De,SAACpF,EAAOlD,EAAM2T,GACnC,OACI,mCACI,sBAAKjT,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,OAAd,SAAsBwC,MAE1B,uBAAOxC,UAAU,0BAA0BiD,KAAK,OAAOe,SAAU,SAAAC,GAAK,OAAIgP,EAAQhP,EAAME,OAAOP,QAAQA,MAAOtE,OAElH,0BFsDGsU,CAAU,gBAAiBtS,OAAOsL,GAAaiH,UAAU,EAAE,IAAKJ,IAC3E7N,EAAMgC,KAAKoL,GAAY,iBAAkB3F,EAAeqG,IAExD,MAA0ClV,mBAAS,MAAnD,mBAAOsV,EAAP,KAAsBC,EAAtB,KACAjV,qBAAU,cAAU,CAACgV,IAErB,IAUM1N,EAAW,SAAApH,GACbsH,SAASC,eAAe,UAAUpG,MAAMqG,QAAU,SAEhDhD,EAAY,SAAAxE,GACdsH,SAASC,eAAe,UAAUpG,MAAMqG,QAAU,QAShDwN,EAA0B,SAAAhV,GAC5B,OAAKiO,GAAYC,GAASC,GAAaP,GAAeS,EAEnDgG,EAAStK,OAAS,EACV5C,MAAM,kDAEjBhH,MAAM,kBAAmB,CACrB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQhG,KACR+N,SAAUA,EACVoG,SAAUA,EACVY,eAAgBN,EAChBzG,MAAOA,EACPC,UAAWA,EACXC,SAAUA,EACVR,YAAaA,EACbS,cAAeA,MAGlB1D,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJiE,OAzBD2C,MAAM,iDA6Bf+N,EAAgB,SAAAlV,GAClBG,MAAM,0BAAD,OAA2BD,KAA3B,qBAAmDyU,IACnDhK,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJ6B,SAMhB,OAAIlC,KAIA,oCACKiN,GAAa2G,GAtDM,SAAA9T,GACH,SAAlB8U,EACCE,IAEAE,MAkD+C1Q,GAC/C,yBAASxD,UAAU,UAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACKmU,GAAehH,EAAWC,EAAU3O,GACpC2V,GAASxO,GA7EP,SAAA5G,GACvB+U,EAAiB,QACjB3N,OAEyB,SAAApH,GACzB+U,EAAiB,UACjB3N,mBA6DOxG,OAAOyG,SAAShG,KAAK,UAmB9B8T,GAAiB,SAAChH,EAAWC,EAAU3O,GACzC,OACI,qBAAKuB,UAAU,gBAAf,SACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,oDAAf,UACI,qBAAKqC,IAAI,0EAA0EC,IAAI,QAAQtC,UAAU,iCAAiCE,MAAM,MAAMuB,OAAO,QAC7J,sBAAKzB,UAAU,OAAf,UACI,6BAAKmN,EAAY,IAAMC,IACvB,oBAAGiH,MAAM,sBAAT,qBACsC,MAAjC/S,OAAO7C,GAAU8C,cAAqB,YACA,MAAnCD,OAAO7C,GAAU8C,cAAuB,aAAe,4BAWrF6S,GAAW,SAACxO,EAAO0O,EAAoBC,GACzC,OACI,qBAAKvU,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACK4F,EACD,sBAAK5F,UAAU,2BAAf,UACI,wBAAQqU,MAAM,SAASlT,QAASmT,EAAhC,kBACA,wBAAQD,MAAM,SAASlT,QAASoT,EAAhC,uCG1LXC,GAAQ,SAAAxV,GACjB,MAAgCR,mBAAS,MAAzC,mBAAOyO,EAAP,KAAiBkG,EAAjB,KACArU,qBAAU,cAAU,CAACmO,IAErB,MAAgCzO,mBAAS,MAAzC,mBAAO6U,EAAP,KAAiBC,EAAjB,KACAxU,qBAAU,cAAU,CAACuU,IAErB,IAAIoB,GAAa,EA2BjB,OACI,0BAASzU,UAAU,cAAnB,UACKwC,KACD,oCACI,sBAAKxC,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe0D,GAAG,gBAAgBM,SAAU,SAAAC,GAAK,OAAIkP,EAAYlP,EAAME,OAAOP,QAAQE,YAAY,aAC/H,uBAAOM,IAAI,gBAAX,uCAEJ,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,WAAWjD,UAAU,eAAe0D,GAAG,mBAAmBM,SAAU,SAAAC,GAAK,OAAIqP,EAAYrP,EAAME,OAAOP,QAAQE,YAAY,aAC1I,uBAAUM,IAAI,mBAAd,4BAGJ,qBAAKpE,UAAU,gBAAf,SACI,sCAAQ,uBAAOiD,KAAK,WAAWW,MAAM,cAAcI,SAxC1C,SAACyH,GAClBgJ,EAAahJ,EAAEtH,OAAO2J,WAuCd,qBAEJ,wBAAQ9N,UAAU,eAAemB,QAtC1B,SAAAnC,GACX,IAAKiO,IAAYoG,EACb,OAAOlN,MAAM,2CAGjBhH,MAAM,uBAAD,OAAwB8N,EAAxB,kBAA0CA,EAA1C,qBAA+DoG,IAC/D1J,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACCA,EAAKC,QAGLmV,aAAaC,QAAQ,aAAcF,GAChCA,EACCC,aAAaC,QAAQ,SAAUrV,EAAK4F,QAEpC0P,eAAeD,QAAQ,SAAUrV,EAAK4F,QAE1CtF,OAAOyG,SAAShG,KAAK,KARrB8F,MAAM,+CA6Bd,mBACC0O,SAIPrS,GAAQ,SAAAxD,GACV,OACI,oCACI,4CACA,wDAIN6V,GAAa,SAAA7V,GACf,OACI,mBAAGqB,KAAK,UAAR,iCCjEKyU,GAAS,SAAA9V,GAClB,MAAgCR,mBAAS,MAAzC,mBAAOyO,EAAP,KAAiBkG,EAAjB,KACArU,qBAAU,cAAU,CAACmO,IAErB,MAAgCzO,mBAAS,MAAzC,mBAAO6U,EAAP,KAAiBC,EAAjB,KACAxU,qBAAU,cAAU,CAACuU,IAErB,MAA0B7U,mBAAS,MAAnC,mBAAO0O,EAAP,KAAckG,EAAd,KACAtU,qBAAU,cAAU,CAACoO,IAErB,MAAkC1O,mBAAS,MAA3C,mBAAO2O,EAAP,KAAkBoG,EAAlB,KACAzU,qBAAU,cAAU,CAACqO,IAErB,MAAgC3O,mBAAS,IAAzC,mBAAO4O,EAAP,KAAiBoG,EAAjB,KACA1U,qBAAU,cAAU,CAACsO,IAErB,MAAsC5O,mBAAS,MAA/C,mBAAOoO,EAAP,KAAoB6G,EAApB,KACA3U,qBAAU,cAAU,CAAC8N,IAErB,MAA0CpO,mBAAS,MAAnD,mBAAO6O,EAAP,KAAsBqG,EAAtB,KACA5U,qBAAU,cAAU,CAACuO,IAErB,IAAIoH,GAAa,EA2BjB,OACI,0BAASzU,UAAU,cAAnB,UACKwC,KACD,oCACI,sBAAKxC,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe0D,GAAG,gBAAgBM,SAAU,SAAAC,GAAK,OAAIkP,EAAYlP,EAAME,OAAOP,QAAQE,YAAY,aAC/H,uBAAOM,IAAI,gBAAX,yBAEJ,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,QAAQjD,UAAU,eAAe0D,GAAG,QAAQM,SAAU,SAAAC,GAAK,OAAImP,EAASnP,EAAME,OAAOP,QAAQE,YAAY,qBACrH,uBAAOM,IAAI,QAAX,8BAEJ,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,WAAWjD,UAAU,eAAe0D,GAAG,mBAAmBM,SAAU,SAAAC,GAAK,OAAIqP,EAAYrP,EAAME,OAAOP,QAAQE,YAAY,aACtI,uBAAOM,IAAI,mBAAX,yBAEJ,sBAAKpE,UAAU,2BAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe0D,GAAG,aAAaM,SAAU,SAAAC,GAAK,OAAIsP,EAAatP,EAAME,OAAOP,QAAQE,YAAY,eAC7H,uBAAOM,IAAI,aAAX,2BAEJ,sBAAKpE,UAAU,4BAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe0D,GAAG,YAAYM,SAAU,SAAAC,GAAK,OAAIuP,EAAYvP,EAAME,OAAOP,QAAQE,YAAY,cAC3H,uBAAOM,IAAI,YAAX,qCAEJ,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe0D,GAAG,gBAAgBM,SAAU,SAAAC,GAAK,OAAIwP,EAAexP,EAAME,OAAOP,QAAQE,YAAY,eAClI,uBAAOM,IAAI,gBAAX,8BAEJ,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe0D,GAAG,iBAAiBM,SAAU,SAAAC,GAAK,OAAIyP,EAAiBzP,EAAME,OAAOP,QAAQE,YAAY,mBACrI,uBAAOM,IAAI,iBAAX,kCAGR,sBAAKpE,UAAU,gBAAf,UACI,uBAAOiD,KAAK,WAAWW,MAAM,cAAcI,SA5DlC,SAACyH,GAClBgJ,EAAahJ,EAAEtH,OAAO2J,WA0DlB,kBAGA,wBAAQ9N,UAAU,eAAemB,QA1DrB,SAAAnC,GAChB,OAAKiO,GAAYC,GAASC,GAAaP,GAAeS,EAEnDgG,EAAStK,OAAS,EACV5C,MAAM,kDAEjBhH,MAAM,wBAAD,OAAyB8N,EAAzB,qBAA8CoG,EAA9C,kBAAgEnG,EAAhE,sBAAmFC,EAAnF,qBAAyGC,EAAzG,wBAAiIR,EAAjI,0BAA8JS,EAA9J,mBACA1D,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACCA,EAAKC,QAGLmV,aAAaC,QAAQ,aAAcF,GAChCA,EACCC,aAAaC,QAAQ,SAAUrV,EAAK4F,QAEpC0P,eAAeD,QAAQ,SAAUrV,EAAK4F,QAE1CtF,OAAOyG,SAAShG,KAAK,KARrB8F,MAAM7G,EAAKsK,YARZzD,MAAM,iDAwDb,qBACC4O,SAIPvS,GAAQ,SAAAxD,GACV,OACI,oCACI,yCACA,sCACA,wDAIN+V,GAAY,SAAA/V,GACd,OACI,mBAAGqB,KAAK,SAAR,sC,iBClGK2U,GAAY,SAACC,GACtB,IAAM3V,EAAO,CACT4V,OAAQD,EAAOE,OACfC,SAAU,CACN,CACIC,MAAO,0CACP/V,KAAM2V,EAAOK,QACbC,MAAM,EACNC,YAAa,sBAEjB,CACIH,MAAO,+EACP/V,KAAM2V,EAAOQ,OACbF,MAAM,EACNC,YAAa,aAKzB,OACI,8BACI,cAAC,KAAD,CAAMlW,KAAMA,OCbXoW,GAAkB,SAAA1W,GAC3B,MAA4BR,mBAAS,CACjCmX,aAAc,QACdtP,SAAU,gBACVuP,aAAa,IAAIxQ,MAAO2H,cAAgB,MAAO,IAAI3H,MAAO0H,WAAa,GAAK,IAAM,KAAM,IAAI1H,MAAO0H,WAAa,MAAO,IAAI1H,MAAOiH,UAAY,GAAK,IAAM,KAAM,IAAIjH,MAAOiH,UAC1KwJ,UAAW,IAAIzQ,OAJnB,mBAAOU,EAAP,KAAekI,EAAf,KAOA,EAAwBxP,mBAAS,IAAjC,mBAAOc,EAAP,KAAa2T,EAAb,KA0CA,OAzCAnU,qBAAU,WACN,IACI,GAAGgH,EAAO8P,YAAc9P,EAAO+P,UAC3B,OAAO1P,MAAM,yJAEjB,IAAMpH,EAAO,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,sEACME,MAAM,0BAA2B,CAC/C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB0Q,aAAc7P,EAAO6P,aACrBtP,SAAUP,EAAOO,SACjByP,UAAWhQ,EAAO8P,YAClBG,QAASjQ,EAAO+P,cAVZ,cACNzW,EADM,gBAaOA,EAAIC,OAbX,QAaNC,EAbM,QAcJC,QACEyW,EAAO,CACTb,OAAQ7V,EAAK2W,QACbX,QAAShW,EAAKgW,QACdG,OAAQnW,EAAKmW,QAEjBxC,EAAQ+C,IAOR/C,EALa,CACTkC,OAAQ,GACRG,QAAS,CAAC,GACVG,OAAQ,CAAC,KAzBL,2CAAH,sDA8Bb1W,IACH,MAAM+K,GACH3D,MAAM2D,MAEX,CAAChE,IAGA,0BAAS9F,UAAU,kBAAnB,UACKuC,EAAM,qBACP,sBAAKvC,UAAU,YAAf,UACI,qBAAKG,MAAO,CAAC2Q,aAAc,IAA3B,SACK/C,GAAejI,EAAQkI,KAE3BgH,GAAU1V,UAMrByO,GAAiB,SAACjI,EAAQkI,GAE5B,OACI,eAACnH,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,gCAAzB,UACKkW,GAAkBpQ,EAAQkI,EAHtB,GAIJmI,GAAgBrQ,EAAQkI,EAJpB,GAKJoI,GAAmBtQ,EAAQkI,EALvB,GAMJqI,GAAevQ,EAAQkI,EANnB,OAWXkI,GAAoB,SAACpQ,EAAQkI,EAAW1B,GAC1C,OACI,cAACpF,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,uBAAOrJ,KAAK,OAAOc,SAAS,WAAW/D,UAAU,mBAAmBwL,aAAgB1F,EAAO8P,YACvF5R,SAAU,SAAAyH,GACN,IAAIvH,EAAM,2BACH4B,GADG,IAEN8P,YAAa,IAAIxQ,KAAKqG,EAAEtH,OAAOP,SAEnCoK,EAAU9J,SAOxBiS,GAAkB,SAACrQ,EAAQkI,EAAW1B,GACxC,OACI,cAACpF,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,uBAAOrJ,KAAK,OAAOc,SAAS,WAAW/D,UAAU,mBAAmBwL,aAAgB1F,EAAO+P,UACvF7R,SAAU,SAAAyH,GACN,IAAIvH,EAAM,2BACH4B,GADG,IAEN+P,UAAW,IAAIzQ,KAAKqG,EAAEtH,OAAOP,SAEjCoK,EAAU9J,SAOxBkS,GAAqB,SAACtQ,EAAQkI,EAAW1B,GAC3C,IAAMgK,EAAgB,CAAC,QAAS,SAAU,UAAW,UAoBrD,OACI,cAACpP,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,eAACjF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAAiE8F,EAAO6P,eACxE,cAAClO,EAAA,EAAD,CAAczH,UAAU,wBAAxB,SAvBY,SAAAhB,GACpB,IAAIuX,EAAmB,GAgBvB,OAfAD,EAAc3O,SAAQ,SAAAgO,GAClBY,EAAiB3O,KACb,cAACC,EAAA,EAAD,CAAiC7H,UAAU,wBACnCmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACH4B,GADG,IAEN6P,aAAcA,IAElB3H,EAAU9J,IANtB,SASKyR,GATcA,OAapBY,EAMkDC,WAM3DH,GAAiB,SAACvQ,EAAQkI,EAAW1B,GACvC,IAAM8B,EAAY,CAAC,gBAAiB,oBAAqB,+BAAgC,iCAoBzF,OACI,cAAClH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,eAACjF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAAiE8F,EAAOO,WACxE,cAACoB,EAAA,EAAD,CAAczH,UAAU,wBAAxB,SAvBQ,SAAAhB,GAChB,IAAIqP,EAAc,GAgBlB,OAfAD,EAAUzG,SAAQ,SAAAtB,GACdgI,EAAYzG,KACR,cAACC,EAAA,EAAD,CAA6B7H,UAAU,wBAC/BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACH4B,GADG,IAENO,SAAUA,IAEd2H,EAAU9J,IANtB,SASKmC,GATcA,OAapBgI,EAMkDC,WC7KpDmI,I,MAAe,SAACC,EAAOzJ,GAChC,OACI,kCACI,wBAAOjN,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,kBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,sBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,mBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,wBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,uBACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,2BACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,oBAA1B,4BACA,oBAAIgJ,MAAM,MAAMhJ,UAAU,sBAC1B,oBAAIgJ,MAAM,MAAMhJ,UAAU,2BAGlC,gCACK8I,GAAK4N,EAAOzJ,YAO3BnE,GAAO,SAAC4N,EAAOzJ,GAEjB,IADA,IAAMrH,EAAQ,GACNwC,EAAE,EAAGA,EAAEsO,EAAM3N,SAAUX,EAAE,CAC7B,IAAMrC,EAAO2Q,EAAMtO,GACnBxC,EAAMgC,KAAK+O,GAAU5Q,EAAMkH,IAE/B,OAAOrH,GAGL+Q,GAAY,SAACC,EAAM3J,GACrB,IAAI4J,EAAM,IAAIzR,KAAK9D,OAAOsV,EAAKhK,cAC/BiK,EAAMA,EAAI9J,cAAgB,KAAQ8J,EAAI/J,WAAW,EAAK,GAAK,IAAM,KAAO+J,EAAI/J,WAAW,GAAK,KAAO+J,EAAIxK,UAAY,GAAK,IAAM,IAAMwK,EAAIxK,UA6DxI,OACI,+BACI,6BAA8C,MAAxC/K,OAAOsV,EAAKnY,UAAU8C,cAAwB,WAAsD,MAAxCD,OAAOsV,EAAKnY,UAAU8C,cAAwB,UAAY,aAC5H,6BAAI,uBAAOmC,GAAE,uBAAkBkT,EAAKjQ,KAAO3G,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcoL,EAAK3J,aAC/G,6BAAI,uBAAOvJ,GAAE,oBAAekT,EAAKjQ,KAAO3G,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcoL,EAAK1J,UAC5G,6BAAI,uBAAOxJ,GAAE,wBAAmBkT,EAAKjQ,KAAO3G,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcoL,EAAKzJ,cAChH,6BAAI,uBAAOzJ,GAAE,uBAAkBkT,EAAKjQ,KAAO3G,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcoL,EAAKxJ,aAC/G,6BAAI,uBAAO1J,GAAE,kBAAakT,EAAKjQ,KAAO3G,UAAU,2BAA2BiD,KAAK,OAAOuI,aAAcqL,MACrG,6BAAI,uBAAOnT,GAAE,4BAAuBkT,EAAKjQ,KAAOmQ,SAAS,2BAA2B7T,KAAK,OAAOuI,aAAcoL,EAAKvJ,kBACxE,MAAxC/L,OAAOsV,EAAKnY,UAAU8C,eAA4D,UAAnCD,OAAO2L,GAAUjH,eAAuE,UAAxC1E,OAAOsV,EAAK3J,UAAUjH,cAAsF,uBAAxD,+BAAI,wBAAQ7E,QApEvJ,SAAAnC,GACf,IACI,IAAMiO,EAAW3G,SAASC,eAAT,uBAAwCqQ,EAAKjQ,MAAO/C,MAC/DsJ,EAAQ5G,SAASC,eAAT,oBAAqCqQ,EAAKjQ,MAAO/C,MACzDuJ,EAAY7G,SAASC,eAAT,wBAAyCqQ,EAAKjQ,MAAO/C,MACjEwJ,EAAW9G,SAASC,eAAT,uBAAwCqQ,EAAKjQ,MAAO/C,MAC/DgJ,EAActG,SAASC,eAAT,kBAAmCqQ,EAAKjQ,MAAO/C,MAC7DyJ,EAAgB/G,SAASC,eAAT,4BAA6CqQ,EAAKjQ,MAAO/C,MAE/E,KAAKqJ,GAAYC,GAASC,GAAaP,GAAeS,GAClD,OAAOlH,MAAM,gDAEjBhH,MAAM,kBAAmB,CACrB0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,OAAQ0R,EAAKjQ,IACbsG,SAAUA,EACVoG,SAAUuD,EAAKvD,SACfY,eAAgB2C,EAAKvD,SACrBnG,MAAOA,EACPC,UAAWA,EACXC,SAAUA,EACVR,YAAaA,EACbS,cAAeA,MAGlB1D,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,YAG/B,MAAMC,GACH3D,MAAM2D,KA+BoJ,kBAAJ,OAC3G,MAAxCxI,OAAOsV,EAAKnY,UAAU8C,eAA4D,UAAnCD,OAAO2L,GAAUjH,eAAuE,UAAxC1E,OAAOsV,EAAK3J,UAAUjH,cAAuJ,uBAAzH,+BAAI,yBAAQhG,UAAU,wBAAwBmB,QA5BtL,SAAAnC,GAClB,IACI,IAAIY,OAAOuL,QAAP,iCAAyCyL,EAAK3J,SAA9C,MACA,OAEJ9N,MAAM,0BAAD,OAA2ByX,EAAKjQ,IAAhC,qBAAgDiQ,EAAKvD,WACzD1J,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,YAG3B,MAAMC,GACH3D,MAAM2D,KAcoJ,UAAmE,mBAAG9J,UAAU,gBAAhF,OAAJ,WC5GrJ+W,GAAgB,SAAA/X,GACzB,MAAgCR,mBAAS,MAAzC,mBAAOyO,EAAP,KAAiBkG,EAAjB,KACA,EAAgC3U,mBAAS,MAAzC,mBAAO6U,EAAP,KAAiBC,EAAjB,KACA,EAA0B9U,mBAAS,MAAnC,mBAAO0O,EAAP,KAAckG,EAAd,KACA,EAAkC5U,mBAAS,MAA3C,mBAAO2O,EAAP,KAAkBoG,EAAlB,KACA,EAAgC/U,mBAAS,IAAzC,mBAAO4O,EAAP,KAAiBoG,EAAjB,KACA,EAAsChV,mBAAS,MAA/C,mBAAOoO,EAAP,KAAoB6G,EAApB,KACA,EAA0CjV,mBAAS,MAAnD,mBAAO6O,EAAP,KAAsBqG,EAAtB,KAwBA,OACI,0BAAShQ,GAAG,oBAAoB1D,UAAU,mCAA1C,UACI,oDACA,qBAAKA,UAAU,gBAAf,SACI,wBAAQ0D,GAAG,uBAAX,SACI,2BAAU2R,MAAM,gBAAhB,UACI,wBAAQzR,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,6BAIZ,sBAAK5D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe8D,YAAY,WAAWE,SAAU,SAAAC,GAAK,OAAIkP,EAAYlP,EAAME,OAAOP,UAC/G,gDAEJ,sBAAK5D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,QAAQjD,UAAU,eAAe8D,YAAY,QAAQE,SAAU,SAAAC,GAAK,OAAImP,EAASnP,EAAME,OAAOP,UAC1G,6CAEJ,sBAAK5D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,WAAWjD,UAAU,eAAe8D,YAAY,WAAWE,SAAU,SAAAC,GAAK,OAAIqP,EAAYrP,EAAME,OAAOP,UACnH,gDAEJ,sBAAK5D,UAAU,2BAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe8D,YAAY,aAAaE,SAAU,SAAAC,GAAK,OAAIsP,EAAatP,EAAME,OAAOP,UAClH,kDAEJ,sBAAK5D,UAAU,4BAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe8D,YAAY,uBAAuBE,SAAU,SAAAC,GAAK,OAAIuP,EAAYvP,EAAME,OAAOP,UAC3H,4DAEJ,sBAAK5D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAegE,SAAU,SAAAC,GAAK,OAAIwP,EAAexP,EAAME,OAAOP,UAC3F,qDAEJ,sBAAK5D,UAAU,gBAAf,UACI,uBAAOiD,KAAK,OAAOjD,UAAU,eAAe8D,YAAY,iBAAiBE,SAAU,SAAAC,GAAK,OAAIyP,EAAiBzP,EAAME,OAAOP,UAC1H,sDAEJ,sBAAK5D,UAAU,qBAAf,UACI,wBAAQiD,KAAK,SAASjD,UAAU,SAASmB,QA3DlC,SAAAnC,GACf,KAAKiO,GAAYC,GAASC,GAAaP,GAAeS,GAClD,OAAOlH,MAAM,gDACjB,GAAGkN,EAAStK,OAAS,EACjB,OAAO5C,MAAM,6CAEjB,IAAM6Q,EAAc1Q,SAASC,eAAe,wBAAwB3C,MAEpEzE,MAAM,wBAAD,OAAyB8N,EAAzB,qBAA8CoG,EAA9C,kBAAgEnG,EAAhE,sBAAmFC,EAAnF,qBAAyGC,EAAzG,wBAAiIR,EAAjI,0BAA8JS,EAA9J,wBAA2L2J,IAC3LrN,MAAK,SAACvK,GAAU,OAAOA,EAAIC,UAC3BsK,MAAK,SAACrK,GACH6G,MAAM7G,EAAKsK,SACRtK,EAAKC,QACJK,OAAOyG,SAASwD,aA8CpB,oBACA,wBAAQ5G,KAAK,SAASjD,UAAU,SAASmB,QAhE3B,SAAAnC,GACtBsH,SAASC,eAAe,qBAAqBpG,MAAMqG,QAAU,QA+DrD,2BC5DHyQ,GAAc,SAAAjY,GACvB,MAAgCR,mBAAS,IAAzC,mBAAOyO,EAAP,KAAiBkG,EAAjB,KACA,EAA4B3U,mBAAS,CACjCwY,YAAa,sBADjB,mBAAOlR,EAAP,KAAekI,EAAf,KAGA,EAA0BxP,mBAAS,IAAnC,mBAAOkY,EAAP,KAAcQ,EAAd,KAEApY,qBAAU,WACNK,MAAM,uBAAD,OAAwBD,OACxByK,MAAK,SAACvK,GAAS,OAAOA,EAAIC,UAC1BsK,MAAK,SAACrK,GAAD,OAAU6T,EAAY7T,EAAK2N,eACtC,IAEHnO,qBAAU,WACN,IAAMC,EAAO,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACZiY,EAAS,IADG,SAEM/X,MAAM,sBAAuB,CAC3C0F,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+R,YAAalR,EAAOkR,gBARhB,cAEN5X,EAFM,gBAWOA,EAAIC,OAXX,QAWNC,EAXM,QAYHC,OAGL2X,EAAS5X,EAAKoX,OAFdQ,EAAS,IAbD,2CAAH,sDAiBbnY,MACD,CAAC+G,IAMJ,OACI,0BAAS9F,UAAU,eAAnB,UACK+W,KACAxU,EAAM,gBACP,sBAAKvC,UAAU,YAAf,UACI,qBAAKG,MAAO,CAAC2Q,aAAc,IAA3B,SACK/C,GAAejI,EAAQkI,KAE5B,qBAAK7N,MAAO,CAAC4Q,SAAU,QAAvB,SACK0F,GAAaC,EAAOzJ,KAEzB,qBAAK9M,MAAO,CAACwL,UAAW,SAAxB,SACI,wBAAQ3L,UAAU,SAASmB,QAhBb,SAAAnC,GAC1BsH,SAASC,eAAe,qBAAqBpG,MAAMqG,QAAU,SAejD,yCAOduH,GAAiB,SAACjI,EAAQkI,GAE5B,OACI,cAACnH,EAAA,EAAD,CAAKC,WAAS,EAAC9G,UAAU,gCAAzB,SACKmX,GAAkBrR,EAAQkI,EAHtB,OAQXmJ,GAAoB,SAACrR,EAAQkI,EAAW1B,GAC1C,IAAM8K,EAAe,CAAC,oBAAqB,UAAW,WAAY,YAoBlE,OACI,cAAClQ,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAIkF,EAAjB,SACI,eAACjF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAgBC,MAAM,OAAOC,OAAK,EAACxH,UAAU,mBAA7C,SAAiE8F,EAAOkR,cACxE,cAACvP,EAAA,EAAD,CAAczH,UAAU,wBAAxB,SAvBW,SAAAhB,GACnB,IAAIqY,EAAiB,GAgBrB,OAfAD,EAAazP,SAAQ,SAAA1E,GACjBoU,EAAezP,KACX,cAACC,EAAA,EAAD,CAAyB7H,UAAU,wBAC3BmB,QAAS,SAAAnC,GACL,IAAIkF,EAAM,2BACH4B,GADG,IAENkR,YAAa/T,IAEjB+K,EAAU9J,IANtB,SASKjB,GATcA,OAapBoU,EAMkDC,WC7FpDpY,GAAY,SAAAF,GAEvB,MAAkB,SADC0V,aAAa6C,QAAQ,cAE9B7C,aAAa6C,QAAQ,UAErB3C,eAAe2C,QAAQ,WAEtBnW,GAAS,SAAApC,GAEF,SADC0V,aAAa6C,QAAQ,cAEtC7C,aAAazJ,WAAW,UAExB2J,eAAe3J,WAAW,UAC5BrL,OAAOyG,SAAShG,KAAK,KAuCRmX,OApCf,WACE,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAQzX,KAAK,aAAtC,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,EAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAQzX,KAAK,SAA1C,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,EAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,CAAQzX,KAAK,UAA3C,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,CAAQzX,KAAK,WAA5C,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,CAAQzX,KAAK,gBAAjD,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,CAAQzX,KAAK,aAA9C,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,CAAQzX,KAAK,oBAArD,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,CAAQzX,KAAK,YAA7C,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,CAAQzX,KAAK,gBAAjD,SACE,cAAC,IAAD,CAAOyX,QAAS,cAAC,GAAD,QAElB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,YChDbC,QACW,cAA7B/X,OAAOyG,SAASuR,UAEa,UAA7BhY,OAAOyG,SAASuR,UAEhBhY,OAAOyG,SAASuR,SAASC,MACvB,2D,aCVJC,IAASC,OACL,cAAC,KAAD,UACI,cAAC,GAAD,MAEJzR,SAASC,eAAe,SDuHtB,kBAAmByR,WACrBA,UAAUC,cAAcC,MAAMvO,MAAK,SAAAwO,GACjCA,EAAaC,iB","file":"static/js/main.9a031d14.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Outlet} from \"react-router-dom\";\nimport {Home, ListAlt, ExitToApp, HowToReg, Event, AccountCircle, MeetingRoom, LocalOffer, ShowChart, PlaylistAdd} from '@material-ui/icons/';\nimport { getUserID, logOut } from \"../../App\";\nimport '../style/navbar.css';\n\nexport const Navbar = (props) => {\n    const [userType, setUserType] = useState(\"I\");\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                return setUserType(\"\");\n            }\n            const res = await fetch(`/api/profile?userID=${getUserID()}`);\n            const data = await res.json();\n            if(data.status)\n                setUserType(data.userType);\n            else\n                setUserType(\"\");\n        }\n        getData();\n    }, []);\n\n    useEffect(() => {\n        const createAdmin = async _ => {\n            try{\n                if(getUserID()){\n                    return;\n                }\n                await fetch(\"/api/createadmin\");\n            }catch(err){\n                console.log(err);\n            }\n        }\n        createAdmin();\n    }, [])\n\n    useEffect(() => {\n        const handleResize = _ => {\n          setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    \n    const maxWidth = 900;\n    return (\n        <main>\n            <header className={props.page===\"homepage\"? \"\" : \"content-navbar\"} >\n                <div className={props.page===\"homepage\"? \"topnav homepage\":\"topnav\"}>\n                    <div className={windowDimensions.width < maxWidth && \"topnav-dropdown\"}>\n                        {windowDimensions.width < maxWidth && <button className=\"topnav-dropbtn\"><i className=\"fa fa-bars\" style={{fontSize: 30}}></i></button>}\n                        {userType !== \"I\" && \n                            <div className={windowDimensions.width < maxWidth && \"topnav-dropdown-content\"}>\n                                <a className={props.page===\"homepage\"? \"active\":\"\"} href=\"/\"><Home />Home</a>\n                                { (!isManager(userType) && !isEmployee(userType)) && <a className={props.page===\"menu\"? \"active\":\"\"} href=\"/menu\"><ListAlt />Menu</a>}\n                                {getUserID() && <a className={props.page===\"reservation\"? \"active\":\"\"} href=\"/reservation\"><Event />Reservation</a>}\n                                {(!isManager(userType) && !isEmployee(userType)) && <a className={props.page===\"discount\"? \"active\":\"\"} href=\"/discount\"><LocalOffer />Discount</a>}\n                                {isManager(userType) && <a className={props.page===\"financialfigure\"? \"active\":\"\"} href=\"/financialfigure\"><ShowChart />Financial Figures</a>}\n                                {!getUserID() && <a className={props.page===\"login\"? \"active\":\"\"} href=\"/login\"><ExitToApp />Log In</a>}\n                                {getUserID()? accountMenu(windowDimensions, maxWidth, props.page, userType) : <a className={props.page===\"signup\"? \"active\":\"\"} href=\"/signup\"><HowToReg />Sign Up</a>}\n                            </div>\n                        }\n                    </div>\n                </div>\n                {props.page===\"homepage\" && homepageHeader()}\n            </header>\n            <Outlet />\n        </main>\n    );\n}\n\nconst accountMenu = (windowDimensions, maxWidth, page, userType) => {\n    return (\n        <div className={windowDimensions.width >= maxWidth && \"topnav-dropdown\"}>\n            {windowDimensions.width >= maxWidth && <button className={(page===\"profile\" || page === \"accountlist\") ? \"topnav-dropbtn-active topnav-dropbtn\":\"topnav-dropbtn\"} ><AccountCircle />Account</button>}\n            <div className={windowDimensions.width >= maxWidth && \"topnav-dropdown-content\"}>\n                <a className={page===\"profile\"?\"active\":\"\"} href=\"/profile\"><AccountCircle />Profile</a>\n                {isManager(userType) && <a className={page===\"accountlist\"?\"active\":\"\"} href=\"/accountlist\"><PlaylistAdd />Account List</a>}\n                <a href=\"/\" onClick={logOut}><MeetingRoom />Log Out</a>\n            </div>\n        </div>\n    )\n}\n\nconst isManager = (userType) => {\n    return String(userType).toUpperCase() === \"M\";\n}\nconst isEmployee = (userType) => {\n    return String(userType).toUpperCase() === \"E\";\n}\n\nconst getWindowDimensions = _ => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n}\n\nconst homepageHeader = _ => {\n    return (\n        <div>\n            {restaurantName()}\n            {bookingBtn()}\n        </div>\n    )\n}\nconst restaurantName = _ => {\n    return(\n        <div className=\"title\">\n            <h1 className=\"title-animation\">\n                <span className=\"text-wrapper\">\n                    <span className=\"line line1\"></span>\n                    <span className=\"letters letters-left\">Le Bistrot</span>\n                    <span className=\"letters ampersand\"></span>\n                    <span className=\"letters letters-right\" style={{paddingLeft: 10}}> d'Andre</span>\n                    <span className=\"line line2\"></span>\n                </span>\n            </h1>\n        </div>\n    );\n}\nconst bookingBtn = _ => {\n    let bookingUrl = \"/login\";\n    if(getUserID())\n        bookingUrl = \"/reservation\";\n    return(\n        <div className=\"center booking-button\">\n            <a href={bookingUrl}>Book a Table</a>\n        </div>\n    )\n}","import React from \"react\";\nimport {getUserID} from \"../App\";\n\nlet bookingUrl = \"/login\";\n\nexport const Homepage = _ =>{\n    if(getUserID())\n        bookingUrl = \"/reservation\";\n\n    return(\n        <section>\n            {restaurantInfo()}\n            {aboutInfo()}\n            {contactInfo()}\n        </section>\n    )\n}\nconst restaurantInfo = _ =>{\n    return(\n        <section className=\"container-info\">\n            {restaurantTime()}\n            {menuHyperLink()}\n        </section>\n    );\n}\nconst restaurantTime = _ =>{\n    return(\n        <div className=\"info-box left\">\n            <a href={bookingUrl}><img className=\"info-box\" src=\"https://www.crownsydney.com.au/getmedia/ad5ae0e2-2872-4fbe-bf54-601b12baee97/210420-Crown-Sydney-Restaurant-Epicurean-0099-6496x4872.jpg\" alt=\"Press to go to booking page\"/></a>\n            <div className=\"info-box-text center\">\n                <a href={bookingUrl}>Lunch = 11:00 - 17:00</a> <br/>\n                <a href={bookingUrl}>Dinner = 18:00 - 23:00</a>\n            </div>\n        </div>\n    )\n}\nconst menuHyperLink = _ =>{\n    return(\n        <div className=\"info-box right\">\n            <a href=\"/menu\"><img className=\"info-box\" src=\"https://i.pinimg.com/564x/77/c5/e7/77c5e7acb0f6e244bfeed141f19b8b71.jpg\" alt=\"Press to go to menu page\"/></a>\n            <div className=\"info-box-text center\">\n                <a href=\"/menu\">Dinning</a>\n            </div>\n        </div>\n    )\n}\nconst aboutInfo = _ =>{\n    return(\n        <section className=\"container-about\">\n            <h2>About</h2>\n            <h1>Le Bistrot d'Andre</h1>\n            <article>\n                Experience a unique French fine dining at Le Bistrot d'Andre, with enlightened “open kitchens” serving you the finest flavours from some of the most exciting cuisines.\n                Le Bistrot d'Andre is the all-in-one venue to celebrate moments and create memories.\n            </article>\n        </section>\n    )\n}\nconst contactInfo = _ =>{\n    return(\n        <footer>\n            <div className=\"footer-widget\">\n\n            </div>\n        </footer>\n    )\n}","import React from \"react\";\n\nexport const Title = (title) => {\n    return(\n        <div className=\"title2\">\n            <h1 className=\"title-non-animation\">\n                <span className=\"text-wrapper\">\n                    <span className=\"line line1\"></span>\n                    <span>{String(title).toUpperCase()}</span>\n                    <span className=\"line line2\"></span>\n                </span>\n            </h1>\n        </div>\n    );\n}","import React from \"react\";\nimport {AddShoppingCart} from '@material-ui/icons/';\nimport '../style/menu.css';\n\nexport const Meal = (title, meals, addOrder) =>{\n    return(\n        <section>\n            <h2>{title}</h2>\n            <div className=\"meals menu-list\">\n                {meals.map((meal, index) => (\n                    <div key={index} className=\"menu-item\">\n                        <div className=\"meal-selection-container\">\n                            <img src={meal.image} className=\"menu-item img\" alt={meal.name}/>\n                            <div className=\"meal-selection\">\n                                <button onClick={_=>{addOrder(meal)}} type=\"button\" ><AddShoppingCart />Order</button>\n                            </div>\n                        </div>\n                        <div className=\"name\">{meal.name}</div>\n                        <div className=\"description\">{meal.description}</div>\n                        <div className=\"price\">${meal.price}</div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n}","import React from \"react\";\nimport '../style/menu.css';\n\nexport const Order = (selection, setSelection, closeForm, orderMeal) => {\n    return(\n        <div className=\"form-popup center\" id=\"myForm\">\n            <form className=\"form-container\">\n                <h2 style={{margin: 0}}>Please input the quantity and additional notes for the meal order! </h2>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" value={selection.quantity} placeholder=\"Quantity\" required \n                        onChange={event => {\n                            let newSel = {\n                                ...selection,\n                                quantity: event.target.value\n                            };\n                            setSelection(newSel);\n                        }} \n                    />\n                    <label for=\"floatingInput\">Quantity</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" value={selection.notes} placeholder=\"Notes\" \n                        onChange={event => {\n                            let newSel = {\n                                ...selection,\n                                notes: event.target.value\n                            };\n                            setSelection(newSel);\n                        }} \n                    />\n                    <label for=\"floatingInput\">Notes (optional)</label>\n                </div>\n                <div className=\"right-side-button\">\n                    <button type=\"button\" onClick={orderMeal} >Order</button>\n                    <button type=\"button\" onClick={closeForm} >Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport '../style/menu.css';\nimport {getUserID} from \"../../App\";\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport {Title} from \"../../component/Title.js\";\nimport {Meal} from \"./Meal\";\nimport {Order} from \"./Order\";\n\nexport const Menu = _ =>{\n    // const [userType, setUserType] = useState(null);\n    // useEffect(() => {\n    //     const getData = async _ =>{\n    //         if(!getUserID()){\n    //             return setUserType(\"\");\n    //         }\n    //         const res = await fetch(`/api/profile?userID=${getUserID()}`);\n    //         const data = await res.json();\n    //         if(data.status)\n    //             setUserType(data.userType);\n    //         else\n    //             setUserType(\"\");\n    //     }\n    //     getData();\n    // }, []);\n\n    // User's selection\n    const [selection, setSelection] = useState({\n        menuType: \"\",\n        mealType: \"All Types of Meal\",\n        meal: null,\n        quantity: 1,\n        notes: \"\"\n    });\n\n    // User's booking details\n    const [reservation, setReservation] = useState(\"\");\n    const [table, setTable] = useState(\"\");\n    useEffect(() => {\n        const getData = async _ =>{\n            const res = await fetch(\"/api/getreservation\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: getUserID()\n                })\n            });\n            const data = await res.json();\n            setReservation(data.reservation);\n            setTable(data.table);\n            if(data.table === \"\"){\n                return;\n            }\n            let newSelection = {\n                menuType: (new Date(String(data.table.date)).getHours() >= 18? \"Dinner\":\"Lunch\"),\n                mealType: \"All Types of Meal\",\n                meal: null,\n                quantity: 1,\n                notes: \"\"\n            }\n            setSelection(newSelection);\n        };\n        if(getUserID())\n            getData();\n    }, []);\n\n    useEffect(() => {\n        if(table===\"\"){\n            return selection.menuType = \"All Types of Menu\"\n        }\n        if(new Date(String(table.date)).getHours() >= 18){\n            selection.menuType = \"Dinner\";\n        }else{\n            selection.menuType = \"Lunch\";\n        }\n        // eslint-disable-next-line\n    }, [table]);\n\n    // Menu details\n    const [foods, setFoods] = useState(null);\n    const [drinks, setDrinks] = useState(null);\n    \n    useEffect(() => {\n        const getData = async _ =>{\n            try{\n                //This line is just for demonstration purpose only. In real-life, it will not be implemented and the manager will need to add the meal items by themselve.\n                const response = await fetch(`/api/gettestingmenu`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n                // This is the code that will be use during deployment\n                // const response = await fetch(`/api/getallmeals`);\n                const data = await response.json();\n                let items = data.menuItem;\n                if(selection.menuType !== \"All Types of Menu\"){\n                    items = data.menuItem.filter(\n                        item => item.menuType === \"all\"? true : selection.menuType.toLowerCase() === item.menuType\n                    );\n                }\n                const foods = items.filter(\n                    food => food.type === 'f'\n                );\n                const drinks = items.filter(\n                    drink => drink.type === 'd'\n                );\n                setFoods(foods);\n                setDrinks(drinks);\n            }catch(err){\n                console.log(err);\n            }\n        }\n        getData();\n    }, [selection.menuType]);\n\n    const getReservationMenuType = _ => {\n        return new Date(String(table.date)).getHours() >= 18 ?  \"Dinner\" : \"Lunch\";\n    }\n\n    // Order Window\n    const addOrder = (meal) => {\n        if(!getUserID()){\n            alert(\"Please log to an account first before accessing this feature!\");\n            return window.location.href='/login';\n        }\n        if(reservation === \"\"){\n            return alert(\"You have no active reservation at the moment. Please book a table first before ordering a meal!\");\n        }\n        if(!(getReservationMenuType().toLowerCase() === meal.menuType || meal.menuType === \"all\")){\n            return alert(\"Please select the meal according to your reservation menu type!\");\n        }\n        selection.meal = meal;\n        openForm();\n    }\n    const openForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"block\";\n    }\n    const orderMeal = async _ => {\n        if(!Number.isFinite(Number(selection.quantity)) || Number(selection.quantity)%1 !== 0 || Number(selection.quantity) <= 0 ){\n            return alert(\"Please fill in the quantity with a non decimal number larger than 0!\");\n        }\n        const res = await fetch(\"/api/ordermeal\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                quantity: selection.quantity,\n                notes: selection.notes,\n                meal: selection.meal._id,\n                reservation: reservation._id\n            })\n        });\n        const data = await res.json();\n        if(!data.status){\n            alert(\"Failed to order meal!\");\n        }else{\n            alert(\"Successfully added meal order!\");\n            closeForm();\n        }\n    }\n    const closeForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"none\";\n        let newSel = {\n            ...selection,\n            quantity: 1,\n            notes: \"\"\n        };\n        setSelection(newSel);\n    }\n    \n    return(\n        <section className=\"menu\">\n            {Order(selection, setSelection, closeForm, orderMeal)}\n            {Title(\"Menu\")}\n            {selectionDropdown(selection, setSelection)}\n            {foods && (selection.mealType === \"Foods\" || selection.mealType === \"All Types of Meal\" ) ? (\n                Meal(\"FOODS\", foods, addOrder)\n            ) : <div></div>}\n            {drinks && (selection.mealType === \"Drinks\" || selection.mealType === \"All Types of Meal\" ) ? (\n                Meal(\"DRINKS\", drinks, addOrder)\n            ) : <div></div>}\n        </section>\n    );\n}\n\nconst selectionDropdown = (selection, setSelection) => {\n    return (\n        <Row noGutters className=\"menu-dropdown\">\n            {menuTypeSelection(selection, setSelection)}\n            {mealTypeSelection(selection, setSelection)}\n        </Row>\n    );\n}\nconst menuTypeSelection = (selection, setSelection) => {\n    const menuTypes = [\"All Types of Menu\", \"Lunch\", \"Dinner\"];\n    // Generate menu type selection dropdown\n    const getMenuType = _ => {\n        let newType = [];\n        menuTypes.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...selection,\n                                menuType: type\n                            };\n                            setSelection(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newType;\n    };\n    return (\n        <Col xs=\"12\" sm=\"6\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\"> {selection.menuType} </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getMenuType()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\nconst mealTypeSelection = (selection, setSelection) => {\n    const menuType = [\"All Types of Meal\", \"Foods\", \"Drinks\"];\n    // Generate menu type selection dropdown\n    const getMealType = _ => {\n        let newType = [];\n        menuType.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...selection,\n                                mealType: type\n                            };\n                            setSelection(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newType;\n    };\n    return (\n        <Col xs=\"12\" sm=\"6\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\"> {selection.mealType} </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getMealType()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nexport const Table = (props) => {\n  const getRow1 = _ => {\n    let chairs = [];\n    for (var i = 0; i < Math.ceil(props.chairs / 2); i++) {\n      chairs.push(\n        <span\n          key={i}\n          className={props.empty ? \"empty-table\" : \"full-table\"}\n        ></span>\n      );\n    }\n    return chairs;\n  };\n  const getRow2 = _ => {\n    let chairs2 = [];\n    for (var i = 0; i < Math.floor(props.chairs / 2); i++) {\n      chairs2.push(\n        <span\n          key={i}\n          className={props.empty ? \"empty-table\" : \"full-table\"}\n        ></span>\n      );\n    }\n    return chairs2;\n  };\n\n  return (\n    <div className=\"table-container\">\n      <Col\n        className={props.empty ? \"table selectable-table\" : \"table\"}\n        onClick={_ => {\n          props.empty\n            ? props.selectTable(props.name, props.id, props.chairs)\n            : console.log(\"Tried to select a full table\");\n        }}\n      >\n        <Row noGutters className=\"table-row\">\n          <Col className=\"text-center\">{getRow1()}</Col>\n        </Row>\n        <Row noGutters className=\"table-row\">\n          <Col className=\"text-center\">{getRow2()}</Col>\n        </Row>\n\n        <p className=\"text-center table-name\">{props.name}</p>\n      </Col>\n    </div>\n  );\n};\n","import React from \"react\";\nimport '../../style/reservation.css';\n\nexport const Discount = (reservation, totalPayment, meals, discountList) => {\n    const closeDiscountForm = _ => {\n        document.getElementById(\"discountForm\").style.display = \"none\";\n    }\n\n    return(\n        <div id=\"discountForm\" className=\"form-popup center form-container\">\n            {list(discountList, reservation, totalPayment, meals)}\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={closeDiscountForm} >Cancel</button>\n            </div>\n        </div>\n    );\n}\n\nconst list = (discountList, reservation, totalPayment, meals) => {\n    const items = [];\n    for(let i=0; i<discountList.length; ++i){\n        items.push(item(discountList[i], reservation, totalPayment, meals));\n    }\n\n    return (\n        <section>\n            <div className=\"container mb-4\">\n                <h2>DISCOUNT OFFERS</h2>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"col-2 text-center\">Name</th>\n                                <th scope=\"col\" className=\"col-4 text-center\">Description</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Meal Type</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Nominal</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Min. Transaction</th>\n                                <th scope=\"col\" className=\"col-2 text-center\">Valid Until</th>\n                                <th scope=\"col\" className=\"col-1\"> </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {items}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nconst item = (discount, reservation, totalPayment, meals) => {\n    const applyDiscount = _ =>{\n        try{\n            // Check if the reservation, meals, and discount variables are empty or not\n            if(reservation === \"I\" || reservation === \"\" || !discount || !Number.isFinite(totalPayment)){\n                return;\n            }\n\n            // Check if the reservation has an order\n            if(meals===\"\" && String(discount.meal)===\"\" && String(discount.mealType)===\"A\"){\n                return alert(\"Please make an order first!\");\n            }\n\n            // Check if the orders has the required meal type\n            if(String(discount.meal)===\"\" && String(discount.mealType)!==\"A\" && !hasMealType()){\n                return alert(`Please order a ${(String(discount.mealType).toUpperCase() === \"F\" ? \"food\" : \"drink\" )} first before applying this offer!`);\n            }\n\n            // Check and the total payment and the minimum transaction of the offer\n            if(Number(totalPayment) < Number(discount.min_transaction)){\n                return alert(\"Please order more meals or choose different offer!\\r\\nYour orders do not meet the minimum transaction of the discount offer!\");\n            }\n\n            fetch(\"/api/applydiscount\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: reservation._id,\n                    discountID: discount._id,\n                    mealID: discount.meal,\n                    status: !hasMeal()\n                })\n            })\n                .then((res) => {return res.json(); })\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        window.location.reload();\n                    }\n                });\n        }catch(error){\n            alert(error);\n        }\n    }\n    const hasMeal = _ => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i]._id) === String(discount.meal)){\n                return true;\n            }\n        }\n        return false;\n    }\n    const hasMealType = _ => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i].type).toUpperCase() === String(discount.mealType).toUpperCase()){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    return(\n        <tr>\n            <td>{discount.name}</td>\n            <td>{discount.description}</td>\n            <td>{String(discount.mealType).toUpperCase() === \"A\" ? \"All\" : String(discount.mealType).toUpperCase() === \"F\"? \"Food\" : \"Drink\" }</td>\n            <td>{(String(discount.type)===\"N\"&&\"$\")+discount.nominal+(String(discount.type)===\"P\"?\"%\":\"\")}</td>\n            <td>${discount.min_transaction}</td>\n            <td>{new Date(String(discount.end_date)).toString()}</td>\n            <td className=\"text-right\"><button onClick={applyDiscount}>Apply</button> </td>\n        </tr>\n    );\n}\n","import React from \"react\";\nimport '../../style/reservation.css';\nimport ReactToPrint from 'react-to-print';\nimport { Discount } from \"./Discount\";\n\nexport const Invoice = (subTotalPayment, discount, discountDetail, reservation, orders, meals, discountList, oldOrders) => {\n    return(\n        <div className=\"col-md-6 mb-3\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"d-flex flex-column align-items-center text-center\">\n                        {invoiceInformation(reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders, true, true)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const invoiceInformation = (reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    let componentRef;\n    const invoiceItems = [];\n    let totalPayment = 0;\n    for(let i=0; i<meals.length; ++i){\n        invoiceItems.push(mealItem(discountDetail, orders[i], meals[i], oldOrders, meals));\n    }\n    totalPayment = subTotalPayment - discount;\n\n    const appliedDiscount = _ => {\n        return (discountDetail !== \"\");\n    }\n    \n    const openDiscountForm = _ => {\n        if(appliedDiscount()){\n            return alert(\"You can only use one discount offer per reservation!\");\n        }\n        document.getElementById(\"discountForm\").style.display = \"block\";\n    }\n    \n    return(\n        <section className=\"invoice\" >\n            {Discount(reservation, totalPayment, meals, discountList)}\n            <div className=\"container mb-4\">\n                <div id=\"invoiceComp\" ref={(response) => (componentRef = response)} className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"col-3 text-center\">Meal Name</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Quantity</th>\n                                <th scope=\"col\" className=\"col-3 text-center\">Notes</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Price</th>\n                                <th scope=\"col\" className=\"col-2 text-center\">Total</th>\n                                <th className=\"col-1\"> </th>\n                                <th className=\"col-1\"> </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {invoiceItems}\n                            {discountDetail===\"\"? \"\" : discountItem(reservation, discountDetail, discount)}\n                            {subTotal(subTotalPayment)}\n                            {discountOffer(discount)}\n                            {total(totalPayment)}\n                        </tbody>\n                    </table>\n                </div>\n                <div>\n                    <ReactToPrint\n                        content={() => componentRef}\n                        trigger={() => <button >Print to PDF</button>}\n                    />\n                    <button style={{marginLeft:10}} onClick={openDiscountForm} >Apply Discount</button>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nconst subTotal = (subTotalPayment) => {\n    return(\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><strong>Sub Total</strong></td>\n            <td className=\"text-right\"><strong>${Number.isFinite(subTotalPayment)?subTotalPayment:0}</strong></td>\n        </tr>\n    );\n}\nconst discountOffer = (discount) =>{\n    return(\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><strong>Discount</strong></td>\n            <td className=\"text-right\"><strong>${Number.isFinite(discount)?discount:0}</strong></td>\n        </tr>\n    );\n}\nconst total = (totalPayment) =>{\n    return(\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><strong>Total</strong></td>\n            <td className=\"text-right\"><strong>${Number.isFinite(totalPayment)?totalPayment:0}</strong></td>\n        </tr>\n    );\n}\n\nconst mealItem = (discountDetail, order, meal, orders, meals) => {\n    const handleQtyChange = (e) => {\n        order.quantity = e.target.value;\n    }\n    const handleNotesChange = (e) => {\n        order.notes = e.target.value;\n    }\n    const updateData = _ => {\n        if(orders.length <= 0 || !order || discountDetail === \"\" || meals.length <= 0 || !meal){\n            return;\n        }\n\n        if(!Number.isFinite(Number(order.quantity)) || Number(order.quantity)%1 !== 0 || Number(order.quantity) < 0 ){\n            return alert(\"Please fill in the quantity with a postive non decimal number!\");\n        }\n\n        if(Number(order.quantity) === 0){\n            order.quantity = Number(orders[findOrderIndex()].quantity);\n            return removeItem();\n        }\n\n        if(discountDetail !== \"\" && !validateDiscMinTrans(\"update\") && !(window.confirm(\"The applied discount offer will be removed!\\r\\nAre you sure to modify the order's quantity?\"))){\n            return window.location.reload();;\n        }\n\n        fetch(\"/api/updateorder\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                orderID: order._id,\n                quantity: order.quantity,\n                notes: order.notes,\n                discountID: (discountDetail === \"\" ? \"\" : String(discountDetail._id)),\n                min_transaction: validateDiscMinTrans(\"update\")\n            })\n        })\n            .then((res) => {return res.json(); })\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n    const removeItem = _ => {\n        if(!order || meals === \"\" || !meal){\n            return;\n        }\n\n        if(!Number.isFinite(Number(order.quantity)) || Number(order.quantity)%1 !== 0 || Number(order.quantity) <= 0 ){\n            return alert(\"Please fill in the quantity with a non decimal number larger than 0!\");\n        }\n\n        if(discountDetail !== \"\" && (!validateDiscMinTrans(\"delete\") || (String(discountDetail.mealType).toUpperCase() !== \"A\" && !hasMealType(\"delete\")) ) \n                && !(window.confirm(\"The applied discount offer will be removed!\\r\\nAre you sure to remove the order?\"))){\n            return window.location.reload();;\n        }\n\n        fetch(\"/api/removeorder\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                orderID: String(order._id),\n                quantity: Number(order.quantity),\n                discountID: (discountDetail === \"\" ? \"\" : String(discountDetail._id)),\n                min_transaction: validateDiscMinTrans(\"delete\"),\n                hasMealType: hasMealType(\"delete\")\n            })\n        })\n            .then((res) => {return res.json(); })\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n    const validateDiscMinTrans = (type) => {\n        try{\n            if(discountDetail === \"\"){\n                return false;\n            }\n            let value = 0;\n            for(let i = 0; i < orders.length; ++i){\n                if(String(orders[i]._id) === String(order._id)){\n                    if(String(type).toUpperCase() === \"UPDATE\" ){\n                        value += ( Number(order.quantity) * Number(meals[i].price) );\n                    }else{\n                        value += ( (Number(orders[i].quantity) - Number(order.quantity)) * Number(meals[i].price) );\n                    }\n                }else{\n                    value += (Number(orders[i].quantity) * Number(meals[i].price));\n                }\n            }\n            return (value >= Number(discountDetail.min_transaction));\n        }catch(error){\n            alert(error);\n        }\n    }\n    const findOrderIndex = _ => {\n        try{\n            for(let i = 0; i < orders.length; ++i){\n                if(String(orders[i]._id) === String(order._id)){\n                    return i;\n                }\n            }\n            return -1;\n        }catch(error){\n            alert(error);\n        }\n    }\n    const hasMealType = (type) => {\n        try{\n            if(discountDetail === \"\"){\n                return false;\n            }\n            for(let i = 0; i < orders.length; ++i){\n                if(String(orders[i]._id) === String(order._id)){\n                    let qty;\n                    if(String(type).toUpperCase() === \"UPDATE\" ){\n                        qty = Number(order.quantity);\n                    }else{\n                        qty = (Number(orders[i].quantity) - Number(order.quantity));\n                    }\n                    if(String(meals[i].type).toUpperCase() === String(discountDetail.mealType).toUpperCase() && qty > 0){\n                        return true;\n                    }\n                }else{\n                    if(String(meals[i].type).toUpperCase() === String(discountDetail.mealType).toUpperCase()){\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }catch(err){\n            alert(err);\n        }\n    }\n\n    return(\n        <tr>\n            <td>{meal.name}</td>\n            <td><input className=\"form-control text-center\" type=\"text\" defaultValue={order.quantity} onChange={handleQtyChange}/></td>\n            <td><input className=\"form-control text-center\" type=\"text\" defaultValue={order.notes} onChange={handleNotesChange} /></td>\n            <td>${meal.price}</td>\n            <td>${Number.isFinite(Number(order.quantity))? Number(meal.price) * Number(order.quantity):0}</td>\n            <td><button onClick={updateData} >Edit</button> </td>\n            <td><button className=\"btn btn-sm btn-danger\" onClick={removeItem} ><i className=\"fa fa-trash\"></i> </button> </td>\n        </tr>\n    )\n}\nconst discountItem = (reservation, discount, value) => {\n    const removeItem = _ => {\n        try{\n            // Check if discount variable exists\n            if(!discount){\n                return;\n            }\n\n            // Asking for confirmation\n            if(!(window.confirm(\"Are you sure to cancel the reservation?\"))){\n                return;\n            }\n\n            fetch(\"/api/canceldiscount\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: reservation._id\n                })\n            })\n                .then((res) => {return res.json(); })\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        window.location.reload();\n                    }\n                });\n        }catch(err){\n            alert(err);\n        }\n    }\n    return(\n        <tr>\n            <td>{discount.name}</td>\n            <td>1</td>\n            <td>{discount.description}</td>\n            <td>-{(String(discount.type)===\"N\"&&\"$\")+discount.nominal+(String(discount.type)===\"P\"?\"%\":\"\")}</td>\n            <td>-${value}</td>\n            <td></td>\n            <td className=\"text-right\"><button className=\"btn btn-sm btn-danger\" onClick={removeItem} ><i className=\"fa fa-trash\"></i> </button> </td>\n        </tr>\n    )\n}","import React from \"react\";\nimport '../style/reservation.css';\n\nexport const TextField = (title, data) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\" style={{textAlign: \"left\"}} >\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"text\" value={data} readOnly />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React from \"react\";\nimport '../../style/reservation.css';\nimport {Title} from \"../../../component/Title.js\";\nimport {Invoice} from \"./Invoice\";\nimport {TextField} from \"../TextField\";\n\nexport const Reservation = (reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    const cancelReservation = _ => {\n        const date = new Date(String(table.date));\n        if(date < new Date(getCurrentDate())){\n            return alert(\"Reservation cancellation must be at least 1 hour before!\");\n        }\n        const confirmation = window.confirm(\"Are you sure to cancel the reservation?\");\n        if(!confirmation){\n            return;\n        }\n        fetch(\"/api/cancelreservation\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                reservation: reservation._id,\n                table: table._id,\n                date: table.date\n            })\n        })\n            .then((res) => {return res.json(); })\n            .then((data) => {\n                if(!data.status){\n                    alert(\"Failed to cancel reservation!\");\n                }else{\n                    window.location.reload();\n                }\n            });\n    }\n\n    return(\n        <section className=\"reservation\">\n            {Title(\"Reservation\")}\n            <div className=\"container\">\n                <div className=\"main-body\">\n                    <div className=\"row gutters-sm\">\n\n                        <div className=\"col-md-6\">\n                            <div className=\"card mb-3\">\n                                <div className=\"card-body\">\n                                    {tableInformation(table)}\n                                    {reservationInformation(reservation)}\n                                    <div className=\"column right-side-button\">\n                                        {/* <button className=\"btn-lg\" >Edit</button> */}\n                                        <button className=\"btn-lg\" onClick={cancelReservation} >Cancel Reservation</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {Invoice(subTotalPayment, discount, discountDetail, reservation, orders, meals, discountList, oldOrders)}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst tableInformation = (table) => {\n    const items = [];\n    items.push(TextField(\"Table Number\", table.name));\n    items.push(TextField(\"Table Capacity\", table.capacity));\n    items.push(TextField(\"Reservation Type\", new Date(String(table.date)).getHours() >= 18? \"Dinner\":\"Lunch\"));\n    items.push(TextField(\"Reservation Date/Time\", new Date(String(table.date)) ));\n    items.push(TextField(\"Reservation Location\", table.location));\n    return items;\n}\n\nconst reservationInformation = (reservation) => {\n    const items = [];\n    items.push(TextField(\"Reservation Party Size\", reservation.number_of_people));\n    items.push(TextField(\"Notes\", String(reservation.notes) === \"null\" ? \" \" : reservation.notes));\n    return items;\n}","import React from \"react\";\nimport '../../style/reservation.css';\n\nexport const Confirmation = (props) => {\n    return(\n        <div className=\"form-popup center form-container\" id=\"myForm\">\n            <h2>Reservation Confirmation</h2>\n            <div className=\"reservation confirmation-content\">\n                {ReservationInformation(\"Table Number\", props.selection.table.name)}\n                {ReservationInformation(\"Table Capacity\", props.selection.table.capacity)}\n            </div>\n            <div className=\"reservation confirmation-content\">\n                {ReservationInformation(\"Reservation Type\", props.selection.type)}\n                {ReservationInformation(\"Reservation Date/Time\", new Date(props.getDate()))}\n            </div>\n            <div className=\"reservation confirmation-content\">\n                {ReservationInformation(\"Reservation Location\", props.selection.location)}\n                {ReservationInformation(\"Reservation Party Size\", props.selection.size)}\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Notes\" onChange={event => props.setNote(event.target.value)} />\n                <label >Notes (optional)</label>\n            </div>\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={props.reserve} >Book</button>\n                <button type=\"button\" onClick={props.closeForm} >Cancel</button>\n            </div>\n        </div>\n    );\n}\n\nconst ReservationInformation = (title, data) => {\n    return(\n        <div className=\"form-floating\">\n            <input type=\"text\" className=\"form-control\" value={data} readOnly = {true}/>\n            <label >{title}</label>\n        </div>\n    )\n}","import React from \"react\";\nimport '../../style/reservation.css';\nimport { invoiceInformation } from \"../customer_access/Invoice\";\n\nexport const Invoice = (reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders, setStaffSelection) => {\n    const closeDiscountForm = _ => {\n        const newSel = {\n            customer: \"\",\n            reservation: \"\",\n            table: \"\"\n        };\n        setStaffSelection(newSel);\n        document.getElementById(\"invoiceForm\").style.display = \"none\";\n    }\n\n    return (\n        <div id=\"invoiceForm\" className=\"form-popup center popup-info form-container\">\n            <h2>INVOICE</h2>\n            <div className=\"d-flex flex-column align-items-center text-center\">\n                {invoiceInformation(reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders)}\n            </div>\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={closeDiscountForm} >Close</button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport '../../style/reservation.css';\n\nexport const CustomerDetail = (customer) =>{\n    const closeDiscountForm = _ => {\n        document.getElementById(\"customerForm\").style.display = \"none\";\n    }\n\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = new Date(String(customer.dateOfBirth));\n    const displayDOB = date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear()\n    const items = [];\n    items.push(textField(\"Username\", customer.username));\n    items.push(textField(\"Email\", customer.email));\n    items.push(textField(\"Name\", customer.firstName + \" \" + customer.lastName));\n    items.push(textField(\"Date of Birth\", displayDOB) );\n    items.push(textField(\"Contact Number\", customer.contactNumber));\n\n    return(\n        <div id=\"customerForm\" className=\"form-popup center\">\n             <form className=\"form-container\">\n                <h2>CUSTOMER INFORMATION</h2>\n                {customerData(items)}\n                <div className=\"right-side-button\">\n                    <button type=\"button\" onClick={closeDiscountForm} >Close</button>\n                </div>\n             </form>\n        </div>\n    )\n}\n\nconst customerData = (items) => {\n    return(\n        <div className=\"col-md-12\">\n            <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                    {items}\n                    <div className=\"column right-side-button\">\n                        {/* <button class=\"btn-lg\" onClick={openEditValidation} >Edit</button> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst textField = (title, data) => {\n    return(\n        <div className=\"form-floating\">\n            <input type=\"text\" className=\"form-control\" value={data} readOnly = {true}/>\n            <label >{title}</label>\n        </div>\n    )\n}","import React from \"react\";\nimport '../../style/reservation.css';\nimport { Invoice } from \"./Invoice\";\nimport { CustomerDetail } from \"./CustomerDetail\";\n\nexport const ReservationTable = (reservations, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    return(\n        <section>\n            {CustomerDetail(staffSelection.customer)}\n            {Invoice(staffSelection.reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders, setStaffSelection)}\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" className=\"col-1 text-center\">ID</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Table Number</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Table Capacity</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Date/Time</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Party Size</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Notes</th>\n                        <th className=\"col-1\"></th>\n                        <th className=\"col-1\"></th>\n                        <th className=\"col-1\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {reservationList(reservations, setStaffSelection)}\n                </tbody>\n            </table>\n        </section>\n    )\n}\n\nconst reservationList = (reservations, setStaffSelection) => {\n    const items = [];\n    for(let i=0; i<reservations.length; ++i){\n        const item = reservations[i];\n        items.push(reservationItem(item.reservation, item.table, item.customer, setStaffSelection));\n    }\n    return items;\n}\n\nconst reservationItem = (reservation, table, customer, setStaffSelection) => {\n    const opencustomerDetail = _ => {\n        const newSel = {\n            customer: customer,\n            reservation: reservation,\n            table: table\n        };\n        setStaffSelection(newSel);\n        document.getElementById(\"customerForm\").style.display = \"block\";\n    }\n    const openInvoice = _ =>{\n        const newSel = {\n            customer: customer,\n            reservation: reservation,\n            table: table\n        };\n        setStaffSelection(newSel);\n        document.getElementById(\"invoiceForm\").style.display = \"block\";\n    }\n\n    const setComplete = (e) => {\n        fetch(\"/api/setbookingcompleteness\", {\n            method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: String(reservation._id),\n                    status: e.target.checked\n                })\n        })\n            .then((res) => {return res.json();})\n    }\n\n    return (\n        <tr>\n            <td>{reservation._id}</td>\n            <td>{table.name}</td>\n            <td>{table.capacity}</td>\n            <td>{new Date(String(table.date)).toString()}</td>\n            <td>{reservation.number_of_people}</td>\n            <td>{(String(reservation.notes) === \"null\" ? \"\" : reservation.notes)}</td>\n            <td><input type=\"checkbox\" id=\"completeStatus\" name=\"completeStatus\" value=\"true\" defaultChecked={(reservation.completeness)} onChange={setComplete} /> Complete</td>\n            <td className=\"text-right\"><button onClick={opencustomerDetail}>Customer</button> </td>\n            <td className=\"text-right\"><button onClick={openInvoice}>Invoice</button> </td>\n        </tr>\n    )\n}","import React from \"react\";\nimport {Title} from \"../../../component/Title.js\";\nimport '../../style/reservation.css';\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport {ReservationTable} from './ReservationTable'\n\nexport const ReservationList = (filter, setFilter, reservationsList, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    return (\n        <section className=\"reservation\">\n            {Title(\"Reservation\")}\n            <div className=\"container\">\n                <div style={{marginBottom: 20}}>\n                    {filterDropdown(filter, setFilter)}\n                </div>\n                <div style={{overflow: \"auto\"}}>\n                    {ReservationTable(reservationsList, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders)}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst filterDropdown = (filter, setFilter) => {\n    const size = 4;\n    return(\n        <Row noGutters className=\"menu-dropdown filter-dropdown\">\n            {locationfilter(filter, setFilter, size)}\n            {reservationTypefilter(filter, setFilter, size)}\n            {completenessFilter(filter, setFilter, size)}\n        </Row>\n    )\n}\n\nconst locationfilter = (filter, setFilter, size) => {\n    const locations = [\"All Locations\", \"2/1-25 Harbour St\", \"123 Victoria St, Potts Point\", \"241 Victoria St, Darlinghurst\"];\n    const getLocation = _ => {\n        let newLocation = [];\n        locations.forEach(location => {\n            newLocation.push(\n                <DropdownItem key={location} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                location: location\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {location}\n                </DropdownItem>\n            );\n        });\n        return newLocation;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.location}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getLocation()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n\nconst reservationTypefilter = (filter, setFilter, size) => {\n    const types = [\"All\", \"Lunch\", \"Dinner\"];\n    const getType = _ => {\n        let newType = [];\n        types.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                type: type\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            )\n        })\n        return newType;\n    };\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.type}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getType()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n// eslint-disable-next-line\nconst completenessFilter = (filter, setFilter, size) => {\n    const status = [\"All Reservations\", \"Completed Reservations\", \"Uncompleted Reservations\"];\n    const getStatus = _ => {\n        let newStatus = [];\n        status.forEach(completeness => {\n            newStatus.push(\n                <DropdownItem key={completeness} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                completeness: completeness\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {completeness}\n                </DropdownItem>\n            )\n        })\n        return newStatus;\n    };\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.completeness}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getStatus()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport '../style/reservation.css';\nimport {Table} from \"./customer_access/Table\";\nimport {getUserID} from \"../../App.js\";\nimport {Title} from \"../../component/Title.js\";\nimport {Reservation} from \"./customer_access/Reservation\";\nimport {Confirmation} from \"./customer_access/Confirmation\";\nimport {ReservationList} from \"./staff_access/ReservationList\";\n\nexport const Book = _ => {\n    const [userType, setUserType] = useState(\"\");\n    const [totalTables, setTotalTables] = useState([]);\n\n    const [staffSelection, setStaffSelection] = useState({\n        customer: \"\",\n        reservation: \"\",\n        table: \"\"\n    });\n    const [filter, setFilter] = useState({\n        location: \"All Locations\",\n        type: new Date().getHours() >= 18? \"Dinner\" : \"Lunch\",\n        completeness: \"All Reservations\"\n    });\n    const [reservationsList, setReservationsList] = useState(\"\");\n    // Customer's selections\n    const [selection, setSelection] = useState({\n        type: \"Lunch\",\n        table: {\n            name: null,\n            id: null\n        },\n        date: new Date(),\n        time: null,\n        location: null,\n        size: 0\n    });\n\n    // Customer's reservation details\n    const [note, setNote] = useState(null);\n    const [reservation, setReservation] = useState(\"I\");\n    const [table, setTable] = useState(\"I\");\n    const [orders, setOrders] = useState(\"\");\n    const [meals, setMeals] = useState(\"\");\n\n    // Customer's invoice details\n    const [subTotalPayment, setSubtotalPayment] = useState(0);\n    const [discount, setDiscount] = useState(0);\n    const [discountDetail, setDiscountDetail] = useState(\"\");\n    const [oldOrders, setOldOrders] = useState(\"\");\n\n    // Discount offer list\n    const [discountList, setDiscountList] = useState(\"\");\n\n    // List of potential locations\n    const locations = [\"2/1-25 Harbour St\", \"123 Victoria St, Potts Point\", \"241 Victoria St, Darlinghurst\"];\n    \n    // List of reservation times\n    const [times, setTimes] = useState([\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"]);\n\n    // Get the user's account type\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                return setUserType(\"\");\n            }\n            const res = await fetch(`/api/profile?userID=${getUserID()}`);\n            const data = await res.json();\n            if(data.status)\n                setUserType(data.userType);\n            else\n                setUserType(\"\");\n        }\n        getData();\n    }, []);\n\n    //-----RESERVATION ACCESS FOR CUSTOMER-----\n        // Get a customer active reservation with the table information\n        useEffect(() => {\n            const getData = async _ =>{\n                if(!userType || userType !== 'C'){\n                    setReservation(\"I\");\n                    setTable(\"I\");\n                }\n                const res = await fetch(\"/api/getreservation\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        userID: getUserID()\n                    })\n                });\n                const data = await res.json();\n                setReservation(data.reservation);\n                setTable(data.table);\n            };\n            getData();\n        }, [userType]);\n\n        // Get customer's orders with the meals information\n        useEffect(() => {\n            const getData = async _ =>{\n                setOrders(\"\");\n                setMeals(\"\");\n                if( (!userType || userType !== 'C') && staffSelection.customer === \"\"){\n                    return\n                }\n                const res = await fetch(\"/api/getorders\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        reservation: ((userType !== 'C' && staffSelection.reservation !== \"\") ? staffSelection.reservation._id : reservation._id)\n                    })\n                });\n                const data = await res.json();\n                setOrders(data.orders);\n                setMeals(data.meals);\n            };\n            getData();\n        }, [reservation, userType, staffSelection]);\n\n        // Set customer's total sub payment\n        useEffect(() => {\n            let value = 0;\n            for(let i=0; i<meals.length; ++i){\n                value += Number(orders[i].quantity) * Number(meals[i].price);\n            }\n            setSubtotalPayment(value);\n        }, [orders, meals]);\n\n        // Set customer's applied discount\n        useEffect(() => {\n            const getData = async _ =>{\n                setDiscount(0);\n                setDiscountDetail(\"\");\n                if( (staffSelection.reservation === \"\" && (reservation === \"I\" || reservation === \"\" || String(reservation.discount) === \"\")) || (staffSelection.reservation !== \"\" && ((String(staffSelection.reservation.discount) === \"\"))) || meals.length <= 0 || orders.length <=0){\n                    return;\n                }\n                const res = await fetch(\"/api/calculatediscount\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        discountID: (userType === 'C' ? reservation.discount : staffSelection.reservation.discount),\n                        transaction: subTotalPayment,\n                        meals: meals,\n                        orders: orders\n                    })\n                });\n                const data = await res.json();\n                if(data.status){\n                    setDiscount(Number(data.value));\n                    setDiscountDetail(data.item);\n                }\n            }\n            getData();\n        }, [userType, reservation, subTotalPayment, meals, orders, staffSelection]);\n\n        // Set temporary variable to store previous customer's orders\n        useEffect(() => {\n            const getData = async _ =>{\n                setOldOrders(\"\");\n                if((reservation === \"I\" || reservation === \"\" ) && staffSelection.reservation === \"\"){\n                    return;\n                }\n                const res = await fetch(\"/api/getorders\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        reservation: (userType === 'C' ? reservation._id : staffSelection.reservation._id)\n                    })\n                });\n                const data = await res.json();\n                setOldOrders(data.orders);\n            };\n            getData();\n        }, [userType, reservation, staffSelection]);\n\n        // Get filtered discount offer list\n        useEffect(()=>{\n            const getData = async _ => {\n                setDiscountList(\"\");\n                const res = await fetch(\"/api/getdiscounts\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        userID: (staffSelection.customer !== \"\" && String(userType).toUpperCase() !== \"C\") ? staffSelection.customer._id : getUserID()\n                    })\n                });\n                const data = await res.json();\n                if(!data.status){\n                    return setDiscountList(\"\");\n                }\n                if(String(userType).toUpperCase() === \"C\"){\n                    setDiscountList(data.discounts.filter(data => \n                        (new Date(String(data.end_date)).getTime() > new Date(String(table.date)).getTime()) &&\n                        (String(data.menuType)===\"A\" ? true : (new Date(String(table.date)).getHours() >= 18? \"Dinner\":\"Lunch\") === (String(data.menuType)===\"L\"?\"Lunch\":\"Dinner\") )\n                    ));\n                }else{\n                    setDiscountList(data.discounts.filter(data => \n                        (new Date(String(data.end_date)).getTime() > new Date(String(staffSelection.table.date)).getTime()) &&\n                        (String(data.menuType)===\"A\" ? true : (new Date(String(staffSelection.table.date)).getHours() >= 18? \"Dinner\":\"Lunch\") === (String(data.menuType)===\"L\"?\"Lunch\":\"Dinner\") )\n                    ));\n                }\n            }\n            getData();\n        }, [staffSelection, table, meals, userType]);\n    //-----END OF SECTION-----\n\n    //-----RESERVATION CREATION FOR CUSTOMER-----\n        // Set available times for booking\n        useEffect(() => {\n            if(selection.type === \"Lunch\"){\n                setTimes([\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"]);\n            }else{\n                setTimes([\"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\"]);\n            }\n        }, [times, selection.type])\n        \n        // Get date and time selected by user\n        const getDate = _ => {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const year = selection.date.getFullYear();\n            const month = months[selection.date.getMonth()];\n            const day = selection.date.getDate();\n            return (month+\" \"+day+\" \"+year+\" \"+selection.time+\":00\");\n        };\n\n        // Get Current Date and time + 1 hour\n        const getCurrentDate = _ => {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const date = new Date();\n            const year = date.getFullYear();\n            const month = months[date.getMonth()];\n            const day = date.getDate();\n            const time = date.getMinutes > 0? date.getHours()+1 : (date.getHours() + 2);\n            const datetime = time < 24? (month+\" \"+day+\" \"+year+\" \"+time+\":00:00\") : (month+\" \"+(day+1)+\" \"+year+\" \"+(time-24)+\":00:00\");\n            return datetime;\n        }\n\n        // Validate user selection date\n        const isSelectedDateValid = _ => {\n            return (new Date(getDate())).getTime() >= (new Date(getCurrentDate())).getTime();\n        }\n\n        // Get Available Tables\n        const getEmptyTables = _ => {\n            let tables = totalTables.filter(table => table.isAvailable);\n            return tables.length;\n        };\n        useEffect(() => {\n            // Check availability of tables\n            if (isSelectedDateValid() && selection.location && selection.size) {\n                (async _ => {\n                    let datetime = getDate();\n                    let res = await fetch(\"/availability\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            date: datetime\n                        })\n                    });\n                    res = await res.json();\n\n                    // Sort available tables ascending according to the capacity and filter them with the location and group size criteria\n                    let tables = res.tables.sort((a,b) => a.capacity > b.capacity ? 1 : (b.capacity > a.capacity) ? -1 : 0).filter(\n                    table =>\n                        (selection.size > 0 ? table.capacity >= selection.size && table.capacity-selection.size <=3 : true) &&\n                        table.location === selection.location && table.isAvailable\n                    );\n                    setTotalTables(tables);\n                })();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [selection.time, selection.date, selection.size, selection.location])   ;\n\n        // Generating tables from available tables state\n        const getTables = _ => {\n            console.log(\"Getting tables\");\n            if (getEmptyTables() > 0) {\n                let tables = [];\n                totalTables.forEach(table => {\n                    if (table.isAvailable) {\n                        tables.push(\n                            <Table\n                                key={table._id}\n                                id={table._id}\n                                chairs={table.capacity}\n                                name={table.name}\n                                empty\n                                selectTable={selectTable}\n                            />\n                        );\n                    } else {\n                        tables.push(\n                            <Table\n                                key={table._id}\n                                id={table._id}\n                                chairs={table.capacity}\n                                name={table.name}\n                                selectTable={selectTable}\n                            />\n                        );\n                    }\n                });\n                return tables;\n            }\n        };\n\n        // Clicking on a table sets the selection state\n        const selectTable = (table_name, table_id, table_chairs) => {\n            setSelection({\n                ...selection,\n                table: {\n                    name: table_name,\n                    id: table_id,\n                    capacity: table_chairs\n                }\n            });\n            bookTable();\n        };\n\n        // Create new reservation\n        const reserve = async _ => {\n            await fetch(\"/reserve\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    ...selection,\n                    date: getDate(),\n                    notes: note,\n                    userID: getUserID()\n                })\n            });\n            closeForm();\n            window.location.reload();\n        };\n\n        // Confirmation Window\n        const bookTable = _ => {\n            openForm();\n        }\n        const openForm = _ => {\n            document.getElementById(\"myForm\").style.display = \"block\";\n        }\n        const closeForm = _ => {\n            document.getElementById(\"myForm\").style.display = \"none\";\n        }\n    //-----END OF SECTION-----\n        \n    //-----RESERVATION LIST FOR STAFF\n        // Filter reservation list\n        useEffect(() => {\n            const getData = async _ => {\n                setReservationsList(\"\");\n                if(!userType || userType === 'C'){\n                    return;\n                }\n                const res = await fetch(\"/api/getreservationlist\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        location: filter.location,\n                        type: filter.type,\n                        completeness: filter.completeness\n                    })\n                });\n                const data = await res.json();\n                if(data.reservations === \"\"){\n                    return setReservationsList(\"\");\n                }\n                setReservationsList(data.reservations.sort(\n                    (a, b) => a.table.date < b.table.date ? 1 : (b.table.date < a.table.date) ? -1 : 0\n                ));\n            }\n            getData();\n        }, [filter, userType, staffSelection]);\n    //-----END OF SECTION-----\n\n    // If Unauthorised users try to open\n    if(!getUserID()){\n        return window.location.href=\"/login\";\n    }\n\n    if(String(userType) === \"\"){\n        return (<section></section>)\n    }\n    \n    if(String(userType).toUpperCase() === \"C\"){\n        return customerView(reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate, reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders);\n    }else{\n        return ReservationList(filter, setFilter, reservationsList, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders);\n    }\n};\n\n// Customer Access\nconst customerView = (reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate, reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    return (\n        <section className=\"reservation\">\n            {reservation? (\n                reservation === \"I\"? (\n                    <div></div>\n                ) : (\n                    Reservation(reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders)\n                )\n            ):\n                createNewBooking(reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate)\n            }\n        </section>\n    )\n}\n\nconst createNewBooking = (reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate) => {\n    return(\n        <section className=\"reservation\">\n            {<Confirmation reserve={reserve} closeForm={closeForm} selection={selection} setNote={setNote} getDate={getDate} />}\n            {Title(\"Reservation\")}\n            {bookReservation(selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid)}\n        </section>\n    );\n}\n\nconst bookReservation = (selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid) => {\n    return(\n        <div id=\"reservation-stuff\">\n            {reservationInfoSelection(selection, setSelection, times, locations)}\n            {tablesSelection(selection, isSelectedDateValid, getEmptyTables, getTables)}\n        </div>\n    );\n}\n\n// Reservation Information Selections\nconst reservationInfoSelection = (selection, setSelection, times, locations) => {\n    return(\n        <Row noGutters className=\"text-center align-items-center reservation\">\n            {menuTypeSelection(selection, setSelection)}\n            {dateSelection(selection, setSelection)}\n            {timeSelection(selection, setSelection, times)}\n            {locationSelection(selection, setSelection, locations)}\n            {partySizeSelection(selection, setSelection)}\n        </Row>\n    );\n}\nconst menuTypeSelection = (selection, setSelection) => {\n    const menuType = [\"Lunch\", \"Dinner\"];\n    // Generate menu type selection dropdown\n    const getMenuType = _ => {\n        let newType = [];\n        menuType.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...selection,\n                                type: type,\n                                table: {\n                                    ...selection.table\n                                },\n                                time: null\n                            };\n                            setSelection(newSel);\n                        }}>\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newType;\n    };\n    return (\n        <Col xs=\"12\" sm=\"2\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\"> {selection.type} </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getMenuType()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\nconst dateSelection = (selection, setSelection) => {\n    const month = new Date().getMonth()+1;\n    const date = new Date().getFullYear() + \"-\" + (month < 10 && \"0\") + month + \"-\" + new Date().getDate();\n    return(\n        <Col xs=\"12\" sm=\"2\">\n            <input type=\"date\" required=\"required\" className=\"booking-dropdown\" defaultValue={date}\n                onChange={e => {\n                    if (!isNaN(new Date(new Date(e.target.value)))) {\n                        let newSel = {\n                            ...selection,\n                            table: {\n                            ...selection.table\n                            },\n                            date: new Date(e.target.value)\n                        };\n                        setSelection(newSel);\n                    } else {\n                        console.log(\"Invalid date\");\n                        let newSel = {\n                            ...selection,\n                            table: {\n                            ...selection.table\n                            },\n                            date: new Date()\n                        };\n                        setSelection(newSel);\n                    }\n                }}\n            ></input>\n        </Col>\n    );\n}\nconst timeSelection = (selection, setSelection, times) => {\n    // Generate time dropdown\n    const getTimes = _ => {\n        let newTimes = [];\n        times.forEach(time => {\n            newTimes.push(\n                <DropdownItem\n                    key={time}\n                    className=\"booking-dropdown-item\"\n                    onClick={_ => {\n                        let newSel = {\n                        ...selection,\n                        table: {\n                            ...selection.table\n                        },\n                        time: time\n                        };\n                        setSelection(newSel);\n                    }}\n                >\n                {time}\n                </DropdownItem>\n            );\n        });\n        return newTimes;\n    };\n    return(\n        <Col xs=\"12\" sm=\"2\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                    {selection.time === null ? \"Select a Time\" : selection.time}\n                </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getTimes()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    );\n}\nconst locationSelection = (selection, setSelection, locations) => {\n    // Generate locations dropdown\n    const getLocations = _ => {\n        let newLocations = [];\n        locations.forEach(loc => {\n            newLocations.push(\n                <DropdownItem\n                    key={loc}\n                    className=\"booking-dropdown-item\"\n                    onClick={_ => {\n                        let newSel = {\n                        ...selection,\n                        table: {\n                            ...selection.table\n                        },\n                        location: loc\n                        };\n                        setSelection(newSel);\n                    }}\n                >\n                {loc}\n                </DropdownItem>\n            );\n        });\n        return newLocations;\n    };\n\n    return (\n        <Col xs=\"12\" sm=\"3\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                    {selection.location === null? \"Select a Location\" : selection.location}\n                </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getLocations()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\nconst partySizeSelection = (selection, setSelection) => {\n    // Generate party size dropdown\n    const getSizes = _ => {\n        let newSizes = [];\n\n        for (let i = 1; i < 8; i++) {\n            newSizes.push(\n                <DropdownItem\n                    key={i}\n                    className=\"booking-dropdown-item\"\n                    onClick={e => {\n                        let newSel = {\n                        ...selection,\n                        table: {\n                            ...selection.table\n                        },\n                        size: i\n                        };\n                        setSelection(newSel);\n                    }}\n                >\n                {i}\n                </DropdownItem>\n            );\n        }\n        return newSizes;\n    };\n\n    return (\n        <Col xs=\"12\" sm=\"3\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                    {selection.size === 0 ? \"Select a Party Size\" : selection.size.toString()}\n                </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getSizes()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    );\n}\n\n// Tables Selections\nconst tablesSelection = (selection, isSelectedDateValid, getEmptyTables, getTables) => {\n    return (\n        <Row noGutters className=\"tables-display\">\n            <Col>\n                {selection.date && selection.time && selection.location && selection.size ? (\n                    isSelectedDateValid() ? (\n                        availableTablesSelection(getEmptyTables, getTables)\n                    ) : (\n                        <p className=\"table-display-message\">Reservation must be at least 1 hour before from the current date and time!</p>\n                    )\n                ) : (\n                    <p className=\"table-display-message\">Please select the date, time, location, and party size for your reservation!</p>\n                )}\n            </Col>\n        </Row>\n    )\n}\nconst availableTablesSelection = (getEmptyTables, getTables) => {\n    return (\n        getEmptyTables() > 0 ? (\n            <div>\n                <p className=\"available-tables\">{getEmptyTables()} Table(s) Available</p>\n                <div className=\"table-key\">\n                <span className=\"empty-table\"></span> &nbsp; Available\n                &nbsp;&nbsp;\n                <span className=\"full-table\"></span> &nbsp; Unavailable\n                &nbsp;&nbsp;\n                </div>\n                <Row noGutters>{getTables()}</Row>\n            </div>\n        ) : (\n            <p className=\"table-display-message\">No Available Tables!</p>\n        )\n    );\n}","import React from \"react\";\nimport { getUserID } from \"../../App\";\nimport '../style/discount.css';\n\nexport const Item = (discounts, reservation, table, meals, subTotalPayment, menu) =>{\n    const formatDate = (date) =>{\n        const months = [\"Jan\", \"Feb\", \"March\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n        const datetime = new Date(String(date));\n        const day = datetime.getDate();\n        const month = months[datetime.getMonth()];\n        const year = datetime.getFullYear();\n        return day + \" \" + month + \" \" + year;\n    }\n    const applyNow = (discount) => {\n        if(!getUserID()){\n            return window.location.href = \"/login\";\n        }\n        applyDiscount(discount);\n    }\n    const applyDiscount = (discount) =>{\n        try{\n            // Check if the reservation, meals, and discount variables are empty or not\n            if(reservation === \"I\" || reservation === \"\" || meals === \"I\" || !discount || !Number.isFinite(subTotalPayment)){\n                return;\n            }\n\n            // Check if the reservation has an order\n            if(meals===\"\" && String(discount.meal)===\"\" && String(discount.mealType)===\"A\"){\n                return alert(\"Please make an order first!\");\n            }\n\n            // Check if the reservation already has discount applied to it\n            if(reservation.discount.length > 0){\n                alert(\"You can only use one discount offer per reservation!\");\n                return window.location.href = \"/reservation\";\n            }\n\n            // Check the menu type\n            if(String(discount.menuType).toUpperCase()!==\"A\" ? true : (new Date(String(table.date)).getHours() >= 18? \"Dinner\":\"Lunch\") !== (String(discount.menuType).toUpperCase()===\"L\"?\"Lunch\":\"Dinner\") ){\n                return alert(`Please select a discount offer that suits with your reservation menu type: ${String(discount.menuType === \"L\"?\"Lunch\":\"Dinner\")}`);\n            }\n\n            // Check if the orders has the required meal type\n            if(String(discount.meal)===\"\" && String(discount.mealType)!==\"A\" && !hasMealType(discount)){\n                return alert(`Please order a ${(String(discount.mealType).toUpperCase() === \"F\" ? \"food\" : \"drink\" )} first before applying this offer!`);\n            }\n\n            // Check and the total payment and the minimum transaction of the offer\n            if(Number(subTotalPayment) < Number(discount.min_transaction)){\n                return alert(\"Please order more meals or choose different offer!\\r\\nYour orders do not meet the minimum transaction of the discount offer!\");\n            }\n            const status = meals === \"\" ? true : !hasMeal(discount);\n\n            fetch(\"/api/applydiscount\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: String(reservation._id),\n                    discountID: String(discount._id),\n                    mealID: String(discount.meal),\n                    status: status\n                })\n            })\n                .then((res) => {return res.json(); })\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        return window.location.href = \"/reservation\";\n                    }\n                });\n        }catch(err){\n            alert(err);\n        }\n    }\n    const hasMeal = (discount) => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i]._id) === String(discount.meal)){\n                return true;\n            }\n        }\n        return false;\n    }\n    const hasMealType = (discount) => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i].type).toUpperCase() === String(discount.mealType).toUpperCase()){\n                return true;\n            }\n        }\n        return false;\n    }\n    const findMeal = (discount) => {\n        try{\n            for(let i=0; i<menu.length; ++i){\n                if(String(menu[i]._id) === String(discount.meal)){\n                    return menu[i];\n                }\n            }\n            return null;\n        }catch(err){\n            alert(err);\n        }\n    }\n    return(\n        <section>\n            <div className=\"discounts discount-list\">\n                {discounts.map((discount, index) => (\n                    <div key={index} className=\"discount-item\">\n                        <div className=\"discount-selection-container\">\n                            <img src={discount.image} className=\"discount-item img\" alt={discount.name}/>\n                            <div className=\"discount-selection\">\n                                <button type=\"button\" onClick={_=>{applyNow(discount)}}>Apply Now</button>\n                            </div>\n                        </div>\n                        <div className=\"name\">{discount.name}</div>\n                        <div className=\"description\">{discount.description}</div>\n                        <div style={{padding: 10}}>\n                            <div className=\"detail\"><b >Menu Type : </b>{String(discount.menuType).toUpperCase() === \"A\" ? \"All\" : (String(discount.menuType).toUpperCase()===\"L\"?\"Lunch\":\"Dinner\")}</div>\n                            <div className=\"detail\"><b >Meal Type : </b>{String(discount.mealType).toUpperCase() === \"A\" ? \"All\" : (String(discount.mealType).toUpperCase()===\"F\"?\"Food\":\"Drink\")}</div>\n                            <div className=\"detail\"><b >Meal Name : </b>{String(discount.meal) !== \"\" ? findMeal(discount).name : \"-\"}</div>\n                            <div className=\"detail\"><b >Nominal : </b>{(String(discount.type)===\"N\"&&\"$\")+discount.nominal+(String(discount.type)===\"P\"?\"%\":\"\")}</div>\n                            <div className=\"detail\"><b >Minimum Transaction : </b>${discount.min_transaction}</div>\n                            <div className=\"detail\"><b >Period : </b>{formatDate(String(discount.start_date)) + \" - \" + formatDate(String(discount.end_date))}</div>\n                        </div>\n                        <div className=\"btn\">\n                            <button onClick={_=>{applyNow(discount)}} type=\"button\">Apply Now</button>\n                            {/* <button>View Detail</button> */}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport { getUserID } from \"../../App\";\nimport {Title} from \"../../component/Title.js\";\nimport {Item} from \"./Item\";\nimport \"../style/discount.css\";\n\nexport const Discount = _ =>{\n    const [discounts, setDiscounts] = useState(\"\");\n    useEffect(()=>{\n        const getData = async _ => {\n            const res = await fetch(\"/api/getdiscounts\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: getUserID()\n                })\n            });\n            const data = await res.json();\n            if(!data.status){\n                return setDiscounts(\"\");\n            }\n            setDiscounts(data.discounts.filter(data => \n                new Date(String(data.end_date)).getTime() > (new Date(getCurrentDate())).getTime()\n            ));\n        }\n        const getCurrentDate = _ => {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const date = new Date();\n            const year = date.getFullYear();\n            const month = months[date.getMonth()];\n            const day = date.getDate();\n            const time = date.getMinutes > 0? date.getHours() : (date.getHours() + 1);\n            const datetime = time < 24? (month+\" \"+day+\" \"+year+\" \"+time+\":00:00\") : (month+\" \"+(day+1)+\" \"+year+\" \"+(time-24)+\":00:00\");\n            return datetime;\n        }\n        getData();\n    }, []);\n\n    const [reservation, setReservation] = useState(\"I\");\n    const [table, setTable] = useState(\"I\");\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                setReservation(\"I\");\n            }\n            const res = await fetch(\"/api/getreservation\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: getUserID()\n                })\n            });\n            const data = await res.json();\n            setReservation(data.reservation);\n            setTable(data.table);\n        };\n        getData();\n    }, []);\n\n    const [orders, setOrders] = useState(\"\");\n    const [meals, setMeals] = useState(\"\");\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                setOrders(\"\");\n                setMeals(\"\");\n            }\n            const res = await fetch(\"/api/getorders\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservation: reservation._id\n                })\n            });\n            const data = await res.json();\n            setOrders(data.orders);\n            setMeals(data.meals);\n        };\n        getData();\n    }, [reservation]);\n\n    const [subTotalPayment, setSubTotalPayment] = useState(0);\n    useEffect(() => {\n        let value = 0;\n        for(let i=0; i<meals.length; ++i){\n            value += Number(orders[i].quantity) * Number(meals[i].price);\n        }\n        setSubTotalPayment(value);\n    }, [orders, meals]);\n\n    const [menu, setMenu] = useState(\"\");\n    useEffect(() => {\n        const getData = async _ =>{\n            try{\n                const response = await fetch(`/api/getallmeals`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n                const data = await response.json();\n                setMenu(data.menuItem);\n            }catch(err){\n                console.log(err);\n            }\n        }\n        getData();\n    }, [])\n\n    return(\n        <section className=\"discount\">\n            {Title(\"Discount Offer\")}\n            {discounts!==\"\" && Item(discounts, reservation, table, meals, subTotalPayment, menu)}\n        </section>\n    )\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const Confirmation = (setOldPass, accountModification, closeForm) => {\n    return(\n        <div className=\"form-popup center form-container\" id=\"myForm\">\n            <h2>Please enter your old password to continue the process!</h2>\n            <div className=\"form-floating\">\n                <input type=\"password\" className=\"form-control\" onChange={event => setOldPass(event.target.value)} placeholder=\"Old Password\" required />\n                <label for=\"floatingInput\">Old Password</label>\n            </div>\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={accountModification}>Next</button>\n                <button type=\"button\" onClick={closeForm} >Cancel</button>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const NormalField = (title, data, setData) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"text\" onChange={event => setData(event.target.value)} value={data} \n                    readOnly={String(title).toLowerCase() === \"username\"  && String(data).toLowerCase() === \"admin\"}\n                />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport '../style/profile.css';\nimport {getUserID, logOut} from \"../../App\";\nimport { Confirmation } from \"./Confirmation\";\nimport { NormalField } from \"./NormalField\";\nimport { PasswordField } from \"./PasswordField\";\nimport { DateField } from \"./DateField\";\n\nexport const Profile = _ => {\n    const [username, setUsername] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setUsername(data.username));\n    }, []);\n    const [email, setEmail] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setEmail(data.email));\n    }, []);\n    const [password, setPassword] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setPassword(data.password));\n    }, []);\n    const [firstName, setFirstName] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setFirstName(data.firstName));\n    }, []);\n    const [lastName, setLastName] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setLastName(data.lastName));\n    }, []);\n    const [dateOfBirth, setDateOfBirth] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setDateOfBirth(data.dateOfBirth));\n    }, []);\n    const [contactNumber, setContactNumber] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setContactNumber(data.contactNumber));\n    }, []);\n    const [userType, setUserType] = useState(null);\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setUserType(data.userType));\n    }, []);\n    const [oldPass, setOldPass] = useState(null);\n    useEffect(() => {}, [oldPass]);\n\n    const items = [];\n    items.push(NormalField(\"Username\", username, setUsername));\n    items.push(NormalField(\"Email\", email, setEmail));\n    items.push(PasswordField(\"Password\", password, setPassword));\n    items.push(NormalField(\"First Name\", firstName, setFirstName));\n    items.push(NormalField(\"Last Name\", lastName, setLastName));\n    items.push(DateField(\"Date of Birth\", String(dateOfBirth).substring(0,10), setDateOfBirth));\n    items.push(NormalField(\"Contact Number\", contactNumber, setContactNumber));\n\n    const [buttonClicked, setButtonClicked] = useState(null);\n    useEffect(() => {}, [buttonClicked]);\n\n    const openEditValidation = _ => {\n        setButtonClicked(\"edit\");\n        openForm();\n    }\n    const openDeleteValidation = _ => {\n        setButtonClicked(\"delete\");\n        openForm();\n    }\n\n    // Confirmation Pop Up Window\n    const openForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"block\";\n    }\n    const closeForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"none\";\n    }\n    \n    const accountModification = _ => {\n        if(buttonClicked === \"edit\")\n            editPersonalInformation();\n        else\n            deleteAccount();\n    }\n    const editPersonalInformation = _ => {\n        if(!(username && email && firstName && dateOfBirth && contactNumber))\n            return alert(\"Please fill in all of the non-optional data!\");\n        if(password.length < 8)\n            return alert(\"Password should be at least 8 characters!\");\n\n        fetch(\"/api/updateuser\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                userID: getUserID(),\n                username: username,\n                password: password,\n                validationPass: oldPass,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                dateOfBirth: dateOfBirth,\n                contactNumber: contactNumber\n            })\n        })\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    closeForm();\n                }\n            });\n    }\n    const deleteAccount = _ => {\n        fetch(`/api/deleteuser?userID=${getUserID()}&password=${oldPass}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    logOut();\n                }\n            });\n    }\n\n    // If unauthorised users try to access the web page\n    if(!getUserID())\n        return window.location.href=\"/login\";\n    \n    return(\n        <section>\n            {Confirmation(setOldPass, accountModification, closeForm)}\n            <section className=\"profile\">\n                <div className=\"container\">\n                    <div className=\"main-body\">\n                        <div className=\"row gutters-sm\">\n                            {profilePicture(firstName, lastName, userType)}\n                            {userData(items, openEditValidation, openDeleteValidation)}\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </section>\n    );\n}\n\nconst profilePicture = (firstName, lastName, userType) => {\n    return (\n        <div className=\"col-md-4 mb-3\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"d-flex flex-column align-items-center text-center\">\n                        <img src=\"https://i.pinimg.com/564x/89/64/99/8964998576cfac440b3a14df748fc670.jpg\" alt=\"Admin\" className=\"rounded-circle profile-picture\" width=\"200\" height=\"200\"/>\n                        <div className=\"mt-3\">\n                            <h4>{firstName + \" \" + lastName}</h4>\n                            <p class=\"text-secondary mb-1\">Account: \n                                {String(userType).toUpperCase()==='C'? \" Customer\":(\n                                    String(userType).toUpperCase() === 'M'? \" Managemer\" : \" Employee\"\n                                )}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst userData = (items, openEditValidation, openDeleteValidation) =>{\n    return(\n        <div className=\"col-md-8\">\n            <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                    {items}\n                    <div className=\"column right-side-button\">\n                        <button class=\"btn-lg\" onClick={openEditValidation} >Edit</button>\n                        <button class=\"btn-lg\" onClick={openDeleteValidation} >Delete Account</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const PasswordField = (title, data, setData) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"password\" onChange={event => setData(event.target.value)} value={data} />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const DateField = (title, data, setData) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"date\" onChange={event => setData(event.target.value)} value={data} />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React, {useEffect, useState} from \"react\";\n\nexport const Login = _ => {\n    const [username, setUsername] = useState(null);\n    useEffect(() => {}, [username]);\n\n    const [password, setPassword] = useState(null);\n    useEffect(() => {}, [password]);\n\n    let rememberMe = false;\n    const handleChange = (e) => {\n        rememberMe = e.target.checked;\n    }\n\n    const signIn = _ =>{\n        if(!(username && password)){\n            return alert(\"Invalid username/email and/or password!\");\n        }\n        \n        fetch(`/api/login?username=${username}&email=${username}&password=${password}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                if(!data.status){\n                    alert(\"Invalid username/email and/or password!\");\n                }else{\n                    localStorage.setItem(\"rememberMe\", rememberMe);\n                    if(rememberMe){\n                        localStorage.setItem(\"userID\", data.userID);\n                    }else{\n                        sessionStorage.setItem(\"userID\", data.userID);\n                    }\n                    window.location.href='/';\n                }\n            });\n    }\n\n    return(\n        <section className=\"form-signin\">\n            {title()}\n            <section>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" id=\"floatingInput\" onChange={event => setUsername(event.target.value)} placeholder=\"username\"/>\n                    <label for=\"floatingInput\">Email Address/Username</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" onChange={event => setPassword(event.target.value)} placeholder=\"Password\"/>\n                <   label for=\"floatingPassword\">Password</label>\n                </div>\n            </section>  \n            <div className=\"checkbox mb-3\">\n                <label> <input type=\"checkbox\" value=\"remember-me\" onChange={handleChange}/> Remember me </label>\n            </div>\n            <button className=\"w-100 btn-lg\" onClick={signIn}>Login</button>\n            {signupLink()}\n        </section>\n    );\n}\nconst title = _ =>{\n    return(\n        <section>\n            <h1>Welcome to</h1>\n            <h3>Le Bistrot d'Andre</h3>\n        </section>\n    )\n}\nconst signupLink = _ =>{\n    return(\n        <a href=\"/signup\">Create new account</a>\n    );\n    \n}","import React, {useEffect, useState} from \"react\";\n\nexport const Signup = _ => {\n    const [username, setUsername] = useState(null);\n    useEffect(() => {}, [username]);\n\n    const [password, setPassword] = useState(null);\n    useEffect(() => {}, [password]);\n\n    const [email, setEmail] = useState(null);\n    useEffect(() => {}, [email]);\n\n    const [firstName, setFirstName] = useState(null);\n    useEffect(() => {}, [firstName]);\n\n    const [lastName, setLastName] = useState(\"\");\n    useEffect(() => {}, [lastName]);\n\n    const [dateOfBirth, setDateOfBirth] = useState(null);\n    useEffect(() => {}, [dateOfBirth]);\n\n    const [contactNumber, setContactNumber] = useState(null);\n    useEffect(() => {}, [contactNumber]);\n\n    let rememberMe = false;\n    const handleChange = (e) =>{\n        rememberMe = e.target.checked;\n    }\n    \n    const newCustomer = _ => {\n        if(!(username && email && firstName && dateOfBirth && contactNumber))\n            return alert(\"Please fill in all of the non-optional data!\");\n        if(password.length < 8)\n            return alert(\"Password should be at least 8 characters!\");\n        \n        fetch(`/api/signup?username=${username}&password=${password}&email=${email}&firstName=${firstName}&lastName=${lastName}&dateOfBirth=${dateOfBirth}&contactNumber=${contactNumber}&accountType=C`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                if(!data.status){\n                    alert(data.message);\n                }else{\n                    localStorage.setItem(\"rememberMe\", rememberMe);\n                    if(rememberMe){\n                        localStorage.setItem(\"userID\", data.userID);\n                    }else{\n                        sessionStorage.setItem(\"userID\", data.userID);\n                    }\n                    window.location.href='/';\n                }\n            });\n    }\n    return(\n        <section className=\"form-signup\">\n            {title()}\n            <section>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" id=\"floatingInput\" onChange={event => setUsername(event.target.value)} placeholder=\"username\"/>\n                    <label for=\"floatingInput\">Username</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"email\" className=\"form-control\" id=\"email\" onChange={event => setEmail(event.target.value)} placeholder=\"name@example.com\"/>\n                    <label for=\"email\">Email address</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" onChange={event => setPassword(event.target.value)} placeholder=\"Password\"/>\n                    <label for=\"floatingPassword\">Password</label>\n                </div>\n                <div className=\"form-floating left-field\">\n                    <input type=\"text\" className=\"form-control\" id=\"first_name\" onChange={event => setFirstName(event.target.value)} placeholder=\"First Name\"/>\n                    <label for=\"first_name\">First Name</label>\n                </div>\n                <div className=\"form-floating right-field\">\n                    <input type=\"text\" className=\"form-control\" id=\"last_name\" onChange={event => setLastName(event.target.value)} placeholder=\"Last Name\"/>\n                    <label for=\"last_name\">Last Name (optional)</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"date\" className=\"form-control\" id=\"date_of_birth\" onChange={event => setDateOfBirth(event.target.value)} placeholder=\"DD/MM/YYYY\"/>\n                    <label for=\"date_of_birth\">Date of Birth</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" id=\"contact_number\" onChange={event => setContactNumber(event.target.value)} placeholder=\"Contact Number\"/>\n                    <label for=\"contact_number\">Contact Number</label>\n                </div>\n            </section>\n            <div className=\"checkbox mb-3\">\n                <input type=\"checkbox\" value=\"remember-me\" onChange={handleChange}/> Remember me\n            </div>\n            <button className=\"w-100 btn-lg\" onClick={newCustomer}>Sign Up</button>\n            {loginLink()}\n        </section>\n    );\n}\nconst title = _ => {\n    return(\n        <section>\n            <h1>Sign Up</h1>\n            <h3>with</h3>\n            <h2>Le Bistrot d'Andre</h2>\n        </section>\n    );\n}\nconst loginLink = _ => {\n    return(\n        <a href=\"/login\">Already have an account</a>\n    );\n}","import React from \"react\";\nimport \"../style/FinancialFigure.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\nexport const LineChart = (result) => {\n    const data = {\n        labels: result.period,\n        datasets: [\n            {\n                label: \"Sales Revenue (exclude discount offers)\",\n                data: result.revenue,\n                fill: true,\n                borderColor: \"rgba(75,192,192,1)\"\n            },\n            {\n                label: \"Net Profit from Sales (Sales Revenue minus meals' costs and discount offers)\",\n                data: result.profit,\n                fill: true,\n                borderColor: \"#742774\"\n            }\n        ]\n    };\n\n    return (\n        <div>\n            <Line data={data} />\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {Title} from \"../../component/Title.js\";\nimport \"../style/FinancialFigure.css\";\nimport { LineChart } from \"./LineChart.js\";\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\n\nexport const FinancialFigure = _ => {\n    const [filter, setFilter] = useState({\n        timeInterval: \"Daily\",\n        location: \"All Locations\",\n        startPeriod: new Date().getFullYear() + \"-\" + (new Date().getMonth() < 10 ? \"0\" : \"\") + new Date().getMonth() + \"-\" + (new Date().getDate() < 10 ? \"0\" : \"\") + new Date().getDate(),\n        endPeriod: new Date()\n    });\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        try{\n            if(filter.startPeriod > filter.endPeriod){\n                return alert(\"The first date selection is the start date while the second date selection is the end date.\\r\\n\\r\\nThe start date cannot be larger than the end date.\");\n            }\n            const getData = async _ =>{\n                const res = await fetch(\"/api/getfinancialreport\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        timeInterval: filter.timeInterval,\n                        location: filter.location,\n                        startDate: filter.startPeriod,\n                        endDate: filter.endPeriod\n                    })\n                })\n                const data = await res.json();\n                if(data.status){\n                    const temp = {\n                        period: data.periods,\n                        revenue: data.revenue,\n                        profit: data.profit\n                    }\n                    setData(temp);\n                }else{\n                    const temp = {\n                        period: \"\",\n                        revenue: [0],\n                        profit: [0]\n                    }\n                    setData(temp);\n                }\n            }\n            getData();\n        }catch(error){\n            alert(error);\n        }\n    }, [filter])\n\n    return(\n        <section className=\"FinancialFigure\">\n            {Title(\"Financial Figures\")}\n            <div className=\"container\">\n                <div style={{marginBottom: 20}}>\n                    {filterDropdown(filter, setFilter)}\n                </div>\n                {LineChart(data)}\n            </div>\n        </section>\n    )\n}\n\nconst filterDropdown = (filter, setFilter) => {\n    const size = 3;\n    return(\n        <Row noGutters className=\"menu-dropdown filter-dropdown\">\n            {startPeriodFilter(filter, setFilter, size)}\n            {endPeriodFilter(filter, setFilter, size)}\n            {timeIntervalFilter(filter, setFilter, size)}\n            {locationFilter(filter, setFilter, size)}\n        </Row>\n    )\n}\n\nconst startPeriodFilter = (filter, setFilter, size) => {\n    return(\n        <Col xs=\"12\" sm={size}>\n            <input type=\"date\" required=\"required\" className=\"booking-dropdown\" defaultValue = {filter.startPeriod}\n                onChange={e => {\n                    let newSel = {\n                        ...filter,\n                        startPeriod: new Date(e.target.value)\n                    };\n                    setFilter(newSel);\n                }}\n            ></input>\n        </Col>\n    )\n}\n\nconst endPeriodFilter = (filter, setFilter, size) => {\n    return(\n        <Col xs=\"12\" sm={size}>\n            <input type=\"date\" required=\"required\" className=\"booking-dropdown\" defaultValue = {filter.endPeriod}\n                onChange={e => {\n                    let newSel = {\n                        ...filter,\n                        endPeriod: new Date(e.target.value)\n                    };\n                    setFilter(newSel);\n                }}\n            ></input>\n        </Col>\n    )\n}\n\nconst timeIntervalFilter = (filter, setFilter, size) => {\n    const timeIntervals = [\"Daily\", \"Weekly\", \"Monthly\", \"Yearly\"];\n    const getTimeInterval = _ => {\n        let newTimeIntervals = [];\n        timeIntervals.forEach(timeInterval => {\n            newTimeIntervals.push(\n                <DropdownItem key={timeInterval} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                timeInterval: timeInterval\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {timeInterval}\n                </DropdownItem>\n            );\n        });\n        return newTimeIntervals;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.timeInterval}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getTimeInterval()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n\nconst locationFilter = (filter, setFilter, size) => {\n    const locations = [\"All Locations\", \"2/1-25 Harbour St\", \"123 Victoria St, Potts Point\", \"241 Victoria St, Darlinghurst\"];\n    const getLocation = _ => {\n        let newLocation = [];\n        locations.forEach(location => {\n            newLocation.push(\n                <DropdownItem key={location} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                location: location\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {location}\n                </DropdownItem>\n            );\n        });\n        return newLocation;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.location}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getLocation()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n\n","import React from \"react\";\nimport '../../style/AccountList.css';\n\nexport const AccountTable = (users, username) => {\n    return(\n        <section>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" className=\"col-1 text-center\">Type</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Username</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Email</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">First Name</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Last Name</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Date of Birth</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Contact Number</th>\n                        <th scope=\"col\" className=\"col-1 text-center\"></th>\n                        <th scope=\"col\" className=\"col-1 text-center\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {list(users, username)}\n                </tbody>\n            </table>\n        </section>\n    )\n}\n\nconst list = (users, username) => {\n    const items = [];\n    for(let i=0; i<users.length; ++i){\n        const item = users[i];\n        items.push(tableItem(item, username));\n    }\n    return items;\n}\n\nconst tableItem = (user, username) => {\n    let dob = new Date(String(user.dateOfBirth));\n    dob = dob.getFullYear() + \"-\" + ((dob.getMonth()+1) < 10 ? \"0\" : \"\") + (dob.getMonth()+1) + \"-\" + (dob.getDate() < 10 ? \"0\" : \"\") + dob.getDate();\n    \n    const updateData = _ =>{\n        try{\n            const username = document.getElementById(`usernameInput${user._id}`).value;\n            const email = document.getElementById(`emailInput${user._id}`).value;\n            const firstName = document.getElementById(`firstNameInput${user._id}`).value;\n            const lastName = document.getElementById(`lastNameInput${user._id}`).value;\n            const dateOfBirth = document.getElementById(`dobInput${user._id}`).value;\n            const contactNumber = document.getElementById(`contactNumberInput${user._id}`).value;\n\n            if(!(username && email && firstName && dateOfBirth && contactNumber))\n                return alert(\"Please fill in all of the non-optional data!\");\n                \n            fetch(\"/api/updateuser\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: user._id,\n                    username: username,\n                    password: user.password,\n                    validationPass: user.password,\n                    email: email,\n                    firstName: firstName,\n                    lastName: lastName,\n                    dateOfBirth: dateOfBirth,\n                    contactNumber: contactNumber\n                })\n            })\n                .then((res) => { return res.json(); } )\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        window.location.reload();\n                    }\n                });\n        }catch(error){\n            alert(error);\n        }\n    }\n    \n    const deleteAccount = _ =>{\n        try{\n            if(!window.confirm(`Are you sure to delete ${user.username}?`)){\n                return;\n            }\n            fetch(`/api/deleteuser?userID=${user._id}&password=${user.password}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n        }catch(error){\n            alert(error);\n        }\n    }\n\n    return (\n        <tr>\n            <td>{(String(user.userType).toUpperCase() === \"C\" ? \"Customer\" : (String(user.userType).toUpperCase() === \"M\" ? \"Manager\" : \"Employee\"))}</td>\n            <td><input id={`usernameInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.username}/></td>\n            <td><input id={`emailInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.email}/></td>\n            <td><input id={`firstNameInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.firstName}/></td>\n            <td><input id={`lastNameInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.lastName}/></td>\n            <td><input id={`dobInput${user._id}`} className=\"form-control text-center\" type=\"date\" defaultValue={dob}/></td>\n            <td><input id={`contactNumberInput${user._id}`} lassName=\"form-control text-center\" type=\"text\" defaultValue={user.contactNumber}/></td>\n            {((String(user.userType).toUpperCase() !== \"M\" || String(username).toLowerCase() === \"admin\") &&  String(user.username).toLowerCase() !== \"admin\") ?  <td><button onClick={updateData} >Edit</button> </td> : <td></td> }\n            {((String(user.userType).toUpperCase() !== \"M\" || String(username).toLowerCase() === \"admin\") &&  String(user.username).toLowerCase() !== \"admin\") ?  <td><button className=\"btn btn-sm btn-danger\" onClick={deleteAccount} ><i className=\"fa fa-trash\"></i> </button> </td> : <td></td> }\n        </tr>\n    )\n}\n","import React, {useState} from \"react\";\n\nexport const CreateAccount = _ => {\n    const [username, setUsername] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [firstName, setFirstName] = useState(null);\n    const [lastName, setLastName] = useState(\"\");\n    const [dateOfBirth, setDateOfBirth] = useState(null);\n    const [contactNumber, setContactNumber] = useState(null);\n\n    const closeDiscountForm = _ => {\n        document.getElementById(\"createAccountForm\").style.display = \"none\";\n    }\n\n    const addAccount = _ => {\n        if(!(username && email && firstName && dateOfBirth && contactNumber))\n            return alert(\"Please fill in all of the non-optional data!\");\n        if(password.length < 8)\n            return alert(\"Password should be at least 8 characters!\");\n        \n        const accountType = document.getElementById(\"accountTypeSelection\").value;\n\n        fetch(`/api/signup?username=${username}&password=${password}&email=${email}&firstName=${firstName}&lastName=${lastName}&dateOfBirth=${dateOfBirth}&contactNumber=${contactNumber}&accountType=${accountType}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n\n    return(\n        <section id=\"createAccountForm\" className=\"form-popup center form-container\">\n            <h2>CREATE NEW ACCOUNT</h2>\n            <div className=\"form-floating\">\n                <select id=\"accountTypeSelection\" >\n                    <optgroup label=\"Account Types\">\n                        <option value=\"M\">Manager</option>\n                        <option value=\"E\">Employee</option>\n                        <option value=\"C\">Customer</option>\n                    </optgroup>\n                </select>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={event => setUsername(event.target.value)} />\n                <label >Username</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"email\" className=\"form-control\" placeholder=\"Email\" onChange={event => setEmail(event.target.value)} />\n                <label >Email</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={event => setPassword(event.target.value)} />\n                <label >Password</label>\n            </div>\n            <div className=\"form-floating left-field\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" onChange={event => setFirstName(event.target.value)} />\n                <label >First Name</label>\n            </div>\n            <div className=\"form-floating right-field\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Last Name (optional)\" onChange={event => setLastName(event.target.value)} />\n                <label >Last Name (optional)</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"date\" className=\"form-control\" onChange={event => setDateOfBirth(event.target.value)} />\n                <label >Date of Birth</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Contact Number\" onChange={event => setContactNumber(event.target.value)} />\n                <label >Contact Number</label>\n            </div>\n            <div className=\"center-side-button\">\n                <button type=\"button\" className=\"btn-lg\" onClick={addAccount}>Create</button>\n                <button type=\"button\" className=\"btn-lg\" onClick={closeDiscountForm} >Cancel</button>\n            </div>\n        </section>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Title } from \"../../../component/Title\";\nimport '../../style/AccountList.css';\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport { AccountTable } from \"./AccountTable\";\nimport { getUserID } from \"../../../App\";\nimport { CreateAccount } from \"./CreateAccount\";\n\nexport const AccountList = _ => {\n    const [username, setUsername] = useState(\"\");\n    const [filter, setFilter] = useState({\n        accountType: \"All Account Types\"\n    });\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setUsername(data.username));\n    }, []);\n\n    useEffect(() => {\n        const getData = async _ => {\n            setUsers([]);\n            const res = await fetch(\"/api/getaccountlist\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    accountType: filter.accountType\n                })\n            });\n            const data = await res.json();\n            if(!data.status)\n                setUsers([]);\n            else\n                setUsers(data.users);\n        }\n        getData();\n    }, [filter])\n\n    const openCreateAccountForm = _ => {\n        document.getElementById(\"createAccountForm\").style.display = \"block\";\n    }\n\n    return(\n        <section className=\"account-list\">\n            {CreateAccount()}\n            {Title(\"Account List\")}\n            <div className=\"container\">\n                <div style={{marginBottom: 20}}>\n                    {filterDropdown(filter, setFilter)}\n                </div>\n                <div style={{overflow: \"auto\"}}>\n                    {AccountTable(users, username)}\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    <button className=\"btn-lg\" onClick={openCreateAccountForm}>Create New Account</button>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst filterDropdown = (filter, setFilter) => {\n    const size = 12;\n    return(\n        <Row noGutters className=\"menu-dropdown filter-dropdown\">\n            {accountTypeFilter(filter, setFilter, size)}\n        </Row>\n    )\n}\n\nconst accountTypeFilter = (filter, setFilter, size) => {\n    const accountTypes = [\"All Account Types\", \"Manager\", \"Employee\", \"Customer\"];\n    const getAccountType = _ => {\n        let newAccountType = [];\n        accountTypes.forEach(type => {\n            newAccountType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                accountType: type\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newAccountType;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.accountType}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getAccountType()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}","import React from \"react\";\nimport {Routes, Route} from \"react-router-dom\";\nimport {Navbar} from \"./navbar/component/Navbar\";\nimport {Homepage} from \"./component/Homepage\";\nimport {Menu} from \"./menu/component/Menu\";\nimport {Book} from \"./reservation/component/Book\";\nimport {Discount} from \"./discount/component/Discount\";\nimport {Profile} from \"./profile/component/Profile\";\nimport {Login} from \"./account/component/Login\";\nimport {Signup} from \"./account/component/SignUp\";\nimport { FinancialFigure } from \"./financial_figure/component/FinancialFigure\";\nimport { AccountList } from \"./account/component/staff_access/AccountList\";\n\nexport const getUserID = _ => {\n  const rememberMe = localStorage.getItem(\"rememberMe\");\n  if(rememberMe === \"true\")\n    return (localStorage.getItem(\"userID\"));\n  else\n    return (sessionStorage.getItem(\"userID\"));\n}\nexport const logOut = _ => {\n  const rememberMe = localStorage.getItem(\"rememberMe\");\n  if(rememberMe === \"true\")\n    localStorage.removeItem(\"userID\");\n  else\n    sessionStorage.removeItem(\"userID\");\n  window.location.href='/';\n}\n\nfunction App(){\n  return(\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Navbar page=\"homepage\"/>}>\n          <Route element={<Homepage/>}/>\n        </Route>\n        <Route path=\"/menu\" element={<Navbar page=\"menu\"/>}>\n          <Route element={<Menu/>}/>\n        </Route>\n        <Route path=\"/login\" element={<Navbar page=\"login\"/>}>\n          <Route element={<Login/>}/>\n        </Route>\n        <Route path=\"/signup\" element={<Navbar page=\"signup\"/>}>\n          <Route element={<Signup/>}/>\n        </Route>\n        <Route path=\"/reservation\" element={<Navbar page=\"reservation\"/>}>\n          <Route element={<Book/>}/>\n        </Route>\n        <Route path=\"/discount\" element={<Navbar page=\"discount\"/>}>\n          <Route element={<Discount/>}/>\n        </Route>\n        <Route path=\"/financialfigure\" element={<Navbar page=\"financialfigure\"/>}>\n          <Route element={<FinancialFigure/>}/>\n        </Route>\n        <Route path=\"/profile\" element={<Navbar page=\"profile\"/>}>\n          <Route element={<Profile/>}/>\n        </Route>\n        <Route path=\"/accountlist\" element={<Navbar page=\"accountlist\"/>}>\n          <Route element={<AccountList/>}/>\n        </Route>\n        <Route path=\"*\" element={<Navbar/>}/>\n      </Routes>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render( \n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}