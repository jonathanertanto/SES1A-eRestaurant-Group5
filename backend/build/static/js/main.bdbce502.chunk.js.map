{"version":3,"sources":["Navbar/component/Navbar.js","component/Homepage.js","component/Title.js","menu/component/Meal.js","menu/component/Order.js","menu/component/Menu.js","reservation/component/customer_access/Table.js","reservation/component/customer_access/Discount.js","reservation/component/customer_access/Invoice.js","reservation/component/TextField.js","reservation/component/customer_access/Reservation.js","reservation/component/customer_access/Confirmation.js","reservation/component/staff_access/Invoice.js","reservation/component/staff_access/CustomerDetail.js","reservation/component/staff_access/ReservationTable.js","reservation/component/staff_access/ReservationList.js","reservation/component/Book.js","Discount/component/Item.js","Discount/component/Discount.js","profile/component/Confirmation.js","profile/component/NormalField.js","profile/component/Profile.js","profile/component/PasswordField.js","profile/component/DateField.js","account/component/Login.js","account/component/SignUp.js","financial_figure/component/LineChart.js","financial_figure/component/FinancialFigure.js","account/component/staff_access/AccountTable.js","account/component/staff_access/CreateAccount.js","account/component/staff_access/AccountList.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","useState","userType","setUserType","getWindowDimensions","windowDimensions","setWindowDimensions","useEffect","getData","_","a","getUserID","fetch","res","json","data","status","handleResize","window","addEventListener","removeEventListener","maxWidth","className","page","width","style","fontSize","href","Home","isManager","isEmployee","ListAlt","Event","LocalOffer","ShowChart","ExitToApp","accountMenu","HowToReg","homepageHeader","AccountCircle","PlaylistAdd","onClick","logOut","MeetingRoom","String","toUpperCase","innerWidth","height","innerHeight","restaurantName","bookingBtn","paddingLeft","bookingUrl","Homepage","restaurantInfo","aboutInfo","contactInfo","restaurantTime","menuHyperLink","src","alt","Title","title","Meal","meals","addOrder","map","meal","index","image","name","type","AddShoppingCart","description","price","Order","selection","setSelection","closeForm","orderMeal","id","margin","value","quantity","placeholder","required","onChange","event","newSel","target","for","notes","Menu","menuType","mealType","reservation","setReservation","table","setTable","method","headers","body","JSON","stringify","userID","newSelection","Date","date","getUTCHours","foods","setFoods","drinks","setDrinks","response","items","menuItem","filter","item","toLowerCase","food","drink","console","log","alert","openForm","location","document","getElementById","display","Number","isFinite","_id","selectionDropdown","Row","noGutters","menuTypeSelection","mealTypeSelection","menuTypes","Col","xs","sm","UncontrolledDropdown","DropdownToggle","color","caret","DropdownMenu","newType","forEach","push","DropdownItem","getMenuType","getMealType","Table","empty","selectTable","chairs","i","Math","ceil","getRow1","chairs2","floor","getRow2","Discount","totalPayment","discountList","list","length","scope","discount","hasMeal","hasMealType","nominal","min_transaction","end_date","toUTCString","reservationID","discountID","mealID","then","message","reload","error","Invoice","subTotalPayment","discountDetail","orders","oldOrders","invoiceInformation","componentRef","invoiceItems","mealItem","ref","discountItem","subTotal","discountOffer","total","content","trigger","marginLeft","order","removeItem","validateDiscMinTrans","confirm","orderID","findOrderIndex","qty","err","defaultValue","e","TextField","textAlign","readOnly","Reservation","getCurrentDate","tableInformation","reservationInformation","getUTCFullYear","getUTCMonth","getUTCDate","capacity","number_of_people","Confirmation","ReservationInformation","getDate","size","setNote","reserve","setStaffSelection","customer","CustomerDetail","dateOfBirth","displayDOB","getMonth","getFullYear","textField","username","email","firstName","lastName","contactNumber","customerData","ReservationTable","reservations","staffSelection","reservationList","reservationItem","toString","defaultChecked","completeness","checked","filterDropdown","setFilter","locationfilter","reservationTypefilter","completenessFilter","locations","newLocation","getLocation","types","getType","newStatus","getStatus","Book","totalTables","setTotalTables","getHours","reservationsList","setReservationsList","time","note","setOrders","setMeals","setSubtotalPayment","setDiscount","setDiscountDetail","setOldOrders","setDiscountList","times","setTimes","transaction","discounts","getTime","year","month","day","getMinutes","isSelectedDateValid","getEmptyTables","tables","isAvailable","datetime","sort","b","table_name","table_id","table_chairs","bookTable","customerView","marginBottom","overflow","ReservationList","getTables","createNewBooking","bookReservation","reservationInfoSelection","tablesSelection","dateSelection","timeSelection","locationSelection","partySizeSelection","isNaN","newTimes","getTimes","newLocations","loc","getLocations","newSizes","getSizes","availableTablesSelection","Item","menu","formatDate","applyNow","applyDiscount","findMeal","padding","start_date","setDiscounts","setSubTotalPayment","setMenu","setOldPass","accountModification","NormalField","setData","Profile","setUsername","setEmail","password","setPassword","setFirstName","setLastName","setDateOfBirth","setContactNumber","oldPass","DateField","substring","buttonClicked","setButtonClicked","editPersonalInformation","validationPass","deleteAccount","profilePicture","userData","class","openEditValidation","openDeleteValidation","Login","rememberMe","localStorage","setItem","sessionStorage","signupLink","Signup","loginLink","LineChart","result","labels","period","datasets","label","revenue","fill","borderColor","profit","FinancialFigure","timeInterval","startPeriod","endPeriod","startDate","endDate","temp","periods","startPeriodFilter","endPeriodFilter","timeIntervalFilter","locationFilter","timeIntervals","newTimeIntervals","getTimeInterval","AccountTable","users","tableItem","user","dob","lassName","CreateAccount","accountType","AccountList","setUsers","accountTypeFilter","accountTypes","newAccountType","getAccountType","getItem","App","path","element","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdbce502.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Outlet} from \"react-router-dom\";\nimport {Home, ListAlt, ExitToApp, HowToReg, Event, AccountCircle, MeetingRoom, LocalOffer, ShowChart, PlaylistAdd} from '@material-ui/icons/';\nimport { getUserID, logOut } from \"../../App\";\nimport '../style/navbar.css';\n\nexport const Navbar = (props) => {\n    const [userType, setUserType] = useState(\"I\");\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                return setUserType(\"\");\n            }\n            const res = await fetch(`/api/profile?userID=${getUserID()}`);\n            const data = await res.json();\n            if(data.status)\n                setUserType(data.userType);\n            else\n                setUserType(\"\");\n        }\n        getData();\n    }, []);\n\n    useEffect(() => {\n        const handleResize = _ => {\n          setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    \n    const maxWidth = 900;\n    return (\n        <main>\n            <header className={props.page===\"homepage\"? \"\" : \"content-navbar\"} >\n                <div className={props.page===\"homepage\"? \"topnav homepage\":\"topnav\"}>\n                    <div className={windowDimensions.width < maxWidth && \"topnav-dropdown\"}>\n                        {windowDimensions.width < maxWidth && <button className=\"topnav-dropbtn\"><i className=\"fa fa-bars\" style={{fontSize: 30}}></i></button>}\n                        {userType !== \"I\" && \n                            <div className={windowDimensions.width < maxWidth && \"topnav-dropdown-content\"}>\n                                <a className={props.page===\"homepage\"? \"active\":\"\"} href=\"/\"><Home />Home</a>\n                                {(!isManager(userType) && !isEmployee(userType)) && <a className={props.page===\"menu\"? \"active\":\"\"} href=\"/menu\"><ListAlt />Menu</a>}\n                                {getUserID() && <a className={props.page===\"reservation\"? \"active\":\"\"} href=\"/reservation\"><Event />Reservation</a>}\n                                {(!isManager(userType) && !isEmployee(userType)) && <a className={props.page===\"discount\"? \"active\":\"\"} href=\"/discount\"><LocalOffer />Discount</a>}\n                                {isManager(userType) && <a className={props.page===\"financialfigure\"? \"active\":\"\"} href=\"/financialfigure\"><ShowChart />Financial Figures</a>}\n                                {!getUserID() && <a className={props.page===\"login\"? \"active\":\"\"} href=\"/login\"><ExitToApp />Log In</a>}\n                                {getUserID()? accountMenu(windowDimensions, maxWidth, props.page, userType) : <a className={props.page===\"signup\"? \"active\":\"\"} href=\"/signup\"><HowToReg />Sign Up</a>}\n                            </div>\n                        }\n                    </div>\n                </div>\n                {props.page===\"homepage\" && homepageHeader(userType)}\n            </header>\n            <Outlet />\n        </main>\n    );\n}\n\nconst accountMenu = (windowDimensions, maxWidth, page, userType) => {\n    return (\n        <div className={windowDimensions.width >= maxWidth && \"topnav-dropdown\"}>\n            {windowDimensions.width >= maxWidth && <button className={(page===\"profile\" || page === \"accountlist\") ? \"topnav-dropbtn-active topnav-dropbtn\":\"topnav-dropbtn\"} ><AccountCircle />Account</button>}\n            <div className={windowDimensions.width >= maxWidth && \"topnav-dropdown-content\"}>\n                <a className={page===\"profile\"?\"active\":\"\"} href=\"/profile\"><AccountCircle />Profile</a>\n                {isManager(userType) && <a className={page===\"accountlist\"?\"active\":\"\"} href=\"/accountlist\"><PlaylistAdd />Account List</a>}\n                <a href=\"/\" onClick={logOut}><MeetingRoom />Log Out</a>\n            </div>\n        </div>\n    )\n}\n\nconst isManager = (userType) => {\n    return String(userType).toUpperCase() === \"M\";\n}\nconst isEmployee = (userType) => {\n    return String(userType).toUpperCase() === \"E\";\n}\n\nconst getWindowDimensions = _ => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n}\n\nconst homepageHeader = (userType) => {\n    return (\n        <div>\n            {restaurantName()}\n            {bookingBtn(userType)}\n        </div>\n    )\n}\nconst restaurantName = _ => {\n    return(\n        <div className=\"title\">\n            <h1 className=\"title-animation\">\n                <span className=\"text-wrapper\">\n                    <span className=\"line line1\"></span>\n                    <span className=\"letters letters-left\">Le Bistrot</span>\n                    <span className=\"letters ampersand\"></span>\n                    <span className=\"letters letters-right\" style={{paddingLeft: 10}}> d'Andre</span>\n                    <span className=\"line line2\"></span>\n                </span>\n            </h1>\n        </div>\n    );\n}\nconst bookingBtn = (userType) => {\n    let bookingUrl = \"/login\";\n    if(getUserID())\n        bookingUrl = \"/reservation\";\n    return(\n        <div className=\"center booking-button\">\n            <a href={bookingUrl}>{ (String(userType).toUpperCase() === \"M\" || String(userType).toUpperCase() === \"E\") ? \"Reservation List\" : \"Book a Table\"}</a>\n        </div>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport {getUserID} from \"../App\";\n\nlet bookingUrl = \"/login\";\n\nexport const Homepage = _ =>{\n    const [userType, setUserType] = useState(\"\");\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                return setUserType(\"\");\n            }\n            const res = await fetch(`/api/profile?userID=${getUserID()}`);\n            const data = await res.json();\n            if(data.status)\n                setUserType(data.userType);\n            else\n                setUserType(\"\");\n        }\n        getData();\n    }, []);\n    \n    if(getUserID()){\n        bookingUrl = String(userType).toUpperCase() === \"C\" ? \"/reservation\" : \"/\";\n    }else{\n        bookingUrl = \"/login\";\n    }\n\n    return(\n        <section>\n            {restaurantInfo(userType)}\n            {aboutInfo()}\n            {contactInfo()}\n        </section>\n    )\n}\nconst restaurantInfo = (userType) =>{\n    return(\n        <section className=\"container-info\">\n            {restaurantTime()}\n            {menuHyperLink(userType)}\n        </section>\n    );\n}\nconst restaurantTime = _ =>{\n    return(\n        <div className=\"info-box left\">\n            <a href={bookingUrl}><img className=\"info-box\" src=\"https://www.crownsydney.com.au/getmedia/ad5ae0e2-2872-4fbe-bf54-601b12baee97/210420-Crown-Sydney-Restaurant-Epicurean-0099-6496x4872.jpg\" alt=\"Press to go to booking page\"/></a>\n            <div className=\"info-box-text center\">\n                <a href={bookingUrl}>Lunch = 11:00 - 17:00</a> <br/>\n                <a href={bookingUrl}>Dinner = 18:00 - 23:00</a>\n            </div>\n        </div>\n    )\n}\nconst menuHyperLink = (userType) =>{\n    return(\n        <div className=\"info-box right\">\n            <a href=\"/menu\"><img className=\"info-box\" src=\"https://i.pinimg.com/564x/77/c5/e7/77c5e7acb0f6e244bfeed141f19b8b71.jpg\" alt=\"Press to go to menu page\"/></a>\n            <div className=\"info-box-text center\">\n                <a href={(String(userType).toUpperCase() === \"M\" || String(userType).toUpperCase() === \"E\") ? \"/\" : \"/menu\"}>Dinning</a>\n            </div>\n        </div>\n    )\n}\nconst aboutInfo = _ =>{\n    return(\n        <section className=\"container-about\">\n            <h2>About</h2>\n            <h1>Le Bistrot d'Andre</h1>\n            <article>\n                Experience a unique French fine dining at Le Bistrot d'Andre, with enlightened “open kitchens” serving you the finest flavours from some of the most exciting cuisines.\n                Le Bistrot d'Andre is the all-in-one venue to celebrate moments and create memories.\n            </article>\n        </section>\n    )\n}\nconst contactInfo = _ =>{\n    return(\n        <footer>\n            <div className=\"footer-widget\">\n\n            </div>\n        </footer>\n    )\n}","import React from \"react\";\n\nexport const Title = (title) => {\n    return(\n        <div className=\"title2\">\n            <h1 className=\"title-non-animation\">\n                <span className=\"text-wrapper\">\n                    <span className=\"line line1\"></span>\n                    <span>{String(title).toUpperCase()}</span>\n                    <span className=\"line line2\"></span>\n                </span>\n            </h1>\n        </div>\n    );\n}","import React from \"react\";\nimport {AddShoppingCart} from '@material-ui/icons/';\nimport '../style/menu.css';\n\nexport const Meal = (title, meals, addOrder) =>{\n    return(\n        <section>\n            <h2>{title}</h2>\n            <div className=\"meals menu-list\">\n                {meals.map((meal, index) => (\n                    <div key={index} className=\"menu-item\">\n                        <div className=\"meal-selection-container\">\n                            <img src={meal.image} className=\"menu-item img\" alt={meal.name}/>\n                            <div className=\"meal-selection\">\n                                <button onClick={_=>{addOrder(meal)}} type=\"button\" ><AddShoppingCart />Order</button>\n                            </div>\n                        </div>\n                        <div className=\"name\">{meal.name}</div>\n                        <div className=\"description\">{meal.description}</div>\n                        <div className=\"price\">${meal.price}</div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n}","import React from \"react\";\nimport '../style/menu.css';\n\nexport const Order = (selection, setSelection, closeForm, orderMeal) => {\n    return(\n        <div className=\"form-popup center\" id=\"myForm\">\n            <form className=\"form-container\">\n                <h2 style={{margin: 0}}>Please input the quantity and additional notes for the meal order! </h2>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" value={selection.quantity} placeholder=\"Quantity\" required \n                        onChange={event => {\n                            let newSel = {\n                                ...selection,\n                                quantity: event.target.value\n                            };\n                            setSelection(newSel);\n                        }} \n                    />\n                    <label for=\"floatingInput\">Quantity</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" value={selection.notes} placeholder=\"Notes\" \n                        onChange={event => {\n                            let newSel = {\n                                ...selection,\n                                notes: event.target.value\n                            };\n                            setSelection(newSel);\n                        }} \n                    />\n                    <label for=\"floatingInput\">Notes (optional)</label>\n                </div>\n                <div className=\"right-side-button\">\n                    <button type=\"button\" onClick={orderMeal} >Order</button>\n                    <button type=\"button\" onClick={closeForm} >Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport '../style/menu.css';\nimport {getUserID} from \"../../App\";\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport {Title} from \"../../component/Title.js\";\nimport {Meal} from \"./Meal\";\nimport {Order} from \"./Order\";\n\nexport const Menu = _ =>{\n    // User's selection\n    const [selection, setSelection] = useState({\n        menuType: \"All Types of Menu\",\n        mealType: \"All Types of Meal\",\n        meal: null,\n        quantity: 1,\n        notes: \"\"\n    });\n\n    // User's booking details\n    const [reservation, setReservation] = useState(\"\");\n    const [table, setTable] = useState(\"\");\n    useEffect(() => {\n        const getData = async _ =>{\n            const res = await fetch(\"/api/getreservation\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: getUserID()\n                })\n            });\n            const data = await res.json();\n            setReservation(data.reservation);\n            setTable(data.table);\n            if(data.table === \"\"){\n                return;\n            }\n            let newSelection = {\n                menuType: (new Date(String(data.table.date)).getUTCHours() >= 18? \"Dinner\":\"Lunch\"),\n                mealType: \"All Types of Meal\",\n                meal: null,\n                quantity: 1,\n                notes: \"\"\n            }\n            setSelection(newSelection);\n        };\n        if(getUserID())\n            getData();\n    }, []);\n\n    useEffect(() => {\n        if(table===\"\"){\n            return selection.menuType = \"All Types of Menu\"\n        }\n        if(new Date(String(table.date)).getUTCHours() >= 18){\n            selection.menuType = \"Dinner\";\n        }else{\n            selection.menuType = \"Lunch\";\n        }\n        // eslint-disable-next-line\n    }, [table]);\n\n    // Menu details\n    const [foods, setFoods] = useState(null);\n    const [drinks, setDrinks] = useState(null);\n    \n    useEffect(() => {\n        const getData = async _ =>{\n            try{\n                //This line is just for demonstration purpose only. In real-life, it will not be implemented and the manager will need to add the meal items by themselve.\n                // const response = await fetch(`/api/gettestingmenu`, {\n                //     method: 'POST',\n                //     headers: {\n                //         'Content-Type': 'application/json',\n                //     }\n                // });\n                // This is the code that will be use during deployment\n                const response = await fetch(`/api/getallmeals`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                });\n                const data = await response.json();\n                let items = data.menuItem;\n                if(selection.menuType !== \"All Types of Menu\"){\n                    items = data.menuItem.filter(\n                        item => item.menuType === \"all\"? true : selection.menuType.toLowerCase() === item.menuType\n                    );\n                }\n                const foods = items.filter(\n                    food => food.type === 'f'\n                );\n                const drinks = items.filter(\n                    drink => drink.type === 'd'\n                );\n                setFoods(foods);\n                setDrinks(drinks);\n            }catch(err){\n                console.log(err);\n            }\n        }\n        getData();\n    }, [selection.menuType]);\n\n    const getReservationMenuType = _ => {\n        return new Date(String(table.date)).getUTCHours() >= 18 ?  \"Dinner\" : \"Lunch\";\n    }\n\n    // Order Window\n    const addOrder = (meal) => {\n        if(!getUserID()){\n            alert(\"Please log to an account first before accessing this feature!\");\n            return window.location.href='/login';\n        }\n        if(reservation === \"\"){\n            return alert(\"You have no active reservation at the moment. Please book a table first before ordering a meal!\");\n        }\n        if(!(getReservationMenuType().toLowerCase() === meal.menuType || meal.menuType === \"all\")){\n            return alert(\"Please select the meal according to your reservation menu type!\");\n        }\n        selection.meal = meal;\n        openForm();\n    }\n    const openForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"block\";\n    }\n    const orderMeal = async _ => {\n        if(!Number.isFinite(Number(selection.quantity)) || Number(selection.quantity)%1 !== 0 || Number(selection.quantity) <= 0 ){\n            return alert(\"Please fill in the quantity with a non decimal number larger than 0!\");\n        }\n        const res = await fetch(\"/api/ordermeal\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                quantity: selection.quantity,\n                notes: selection.notes,\n                meal: selection.meal._id,\n                reservation: reservation._id\n            })\n        });\n        const data = await res.json();\n        if(!data.status){\n            alert(\"Failed to order meal!\");\n        }else{\n            alert(\"Successfully added meal order!\");\n            closeForm();\n        }\n    }\n    const closeForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"none\";\n        let newSel = {\n            ...selection,\n            quantity: 1,\n            notes: \"\"\n        };\n        setSelection(newSel);\n    }\n    \n    return(\n        <section className=\"menu\">\n            {Order(selection, setSelection, closeForm, orderMeal)}\n            {Title(\"Menu\")}\n            {selectionDropdown(selection, setSelection)}\n            {foods && (selection.mealType === \"Foods\" || selection.mealType === \"All Types of Meal\" ) ? (\n                Meal(\"FOODS\", foods, addOrder)\n            ) : <div></div>}\n            {drinks && (selection.mealType === \"Drinks\" || selection.mealType === \"All Types of Meal\" ) ? (\n                Meal(\"DRINKS\", drinks, addOrder)\n            ) : <div></div>}\n        </section>\n    );\n}\n\nconst selectionDropdown = (selection, setSelection) => {\n    return (\n        <Row noGutters className=\"menu-dropdown\">\n            {menuTypeSelection(selection, setSelection)}\n            {mealTypeSelection(selection, setSelection)}\n        </Row>\n    );\n}\nconst menuTypeSelection = (selection, setSelection) => {\n    const menuTypes = [\"All Types of Menu\", \"Lunch\", \"Dinner\"];\n    // Generate menu type selection dropdown\n    const getMenuType = _ => {\n        let newType = [];\n        menuTypes.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...selection,\n                                menuType: type\n                            };\n                            setSelection(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newType;\n    };\n    return (\n        <Col xs=\"12\" sm=\"6\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\"> {selection.menuType} </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getMenuType()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\nconst mealTypeSelection = (selection, setSelection) => {\n    const menuType = [\"All Types of Meal\", \"Foods\", \"Drinks\"];\n    // Generate menu type selection dropdown\n    const getMealType = _ => {\n        let newType = [];\n        menuType.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...selection,\n                                mealType: type\n                            };\n                            setSelection(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newType;\n    };\n    return (\n        <Col xs=\"12\" sm=\"6\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\"> {selection.mealType} </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getMealType()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nexport const Table = (props) => {\n  const getRow1 = _ => {\n    let chairs = [];\n    for (var i = 0; i < Math.ceil(props.chairs / 2); i++) {\n      chairs.push(\n        <span\n          key={i}\n          className={props.empty ? \"empty-table\" : \"full-table\"}\n        ></span>\n      );\n    }\n    return chairs;\n  };\n  const getRow2 = _ => {\n    let chairs2 = [];\n    for (var i = 0; i < Math.floor(props.chairs / 2); i++) {\n      chairs2.push(\n        <span\n          key={i}\n          className={props.empty ? \"empty-table\" : \"full-table\"}\n        ></span>\n      );\n    }\n    return chairs2;\n  };\n\n  return (\n    <div className=\"table-container\">\n      <Col\n        className={props.empty ? \"table selectable-table\" : \"table\"}\n        onClick={_ => {\n          props.empty\n            ? props.selectTable(props.name, props.id, props.chairs)\n            : console.log(\"Tried to select a full table\");\n        }}\n      >\n        <Row noGutters className=\"table-row\">\n          <Col className=\"text-center\">{getRow1()}</Col>\n        </Row>\n        <Row noGutters className=\"table-row\">\n          <Col className=\"text-center\">{getRow2()}</Col>\n        </Row>\n\n        <p className=\"text-center table-name\">{props.name}</p>\n      </Col>\n    </div>\n  );\n};\n","import React from \"react\";\nimport '../../style/reservation.css';\n\nexport const Discount = (reservation, totalPayment, meals, discountList) => {\n    const closeDiscountForm = _ => {\n        document.getElementById(\"discountForm\").style.display = \"none\";\n    }\n\n    return(\n        <div id=\"discountForm\" className=\"form-popup center form-container\">\n            {list(discountList, reservation, totalPayment, meals)}\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={closeDiscountForm} >Cancel</button>\n            </div>\n        </div>\n    );\n}\n\nconst list = (discountList, reservation, totalPayment, meals) => {\n    const items = [];\n    for(let i=0; i<discountList.length; ++i){\n        items.push(item(discountList[i], reservation, totalPayment, meals));\n    }\n\n    return (\n        <section>\n            <div className=\"container mb-4\">\n                <h2>DISCOUNT OFFERS</h2>\n                <div className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"col-2 text-center\">Name</th>\n                                <th scope=\"col\" className=\"col-4 text-center\">Description</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Meal Type</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Nominal</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Min. Transaction</th>\n                                <th scope=\"col\" className=\"col-2 text-center\">Valid Until</th>\n                                <th scope=\"col\" className=\"col-1\"> </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {items}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nconst item = (discount, reservation, totalPayment, meals) => {\n    const applyDiscount = _ =>{\n        try{\n            // Check if the reservation, meals, and discount variables are empty or not\n            if(reservation === \"I\" || reservation === \"\" || !discount || !Number.isFinite(totalPayment)){\n                return;\n            }\n\n            // Check if the reservation has an order\n            if(meals===\"\" && String(discount.meal)===\"\" && String(discount.mealType)===\"A\"){\n                return alert(\"Please make an order first!\");\n            }\n\n            // Check if the orders has the required meal type\n            if(String(discount.meal)===\"\" && String(discount.mealType)!==\"A\" && !hasMealType()){\n                return alert(`Please order a ${(String(discount.mealType).toUpperCase() === \"F\" ? \"food\" : \"drink\" )} first before applying this offer!`);\n            }\n\n            // Check and the total payment and the minimum transaction of the offer\n            if(Number(totalPayment) < Number(discount.min_transaction)){\n                return alert(\"Please order more meals or choose different offer!\\r\\nYour orders do not meet the minimum transaction of the discount offer!\");\n            }\n\n            fetch(\"/api/applydiscount\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: reservation._id,\n                    discountID: discount._id,\n                    mealID: discount.meal,\n                    status: !hasMeal()\n                })\n            })\n                .then((res) => {return res.json(); })\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        window.location.reload();\n                    }\n                });\n        }catch(error){\n            alert(error);\n        }\n    }\n    const hasMeal = _ => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i]._id) === String(discount.meal)){\n                return true;\n            }\n        }\n        return false;\n    }\n    const hasMealType = _ => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i].type).toUpperCase() === String(discount.mealType).toUpperCase()){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    return(\n        <tr>\n            <td>{discount.name}</td>\n            <td>{discount.description}</td>\n            <td>{String(discount.mealType).toUpperCase() === \"A\" ? \"All\" : String(discount.mealType).toUpperCase() === \"F\"? \"Food\" : \"Drink\" }</td>\n            <td>{(String(discount.type)===\"N\"&&\"$\")+discount.nominal+(String(discount.type)===\"P\"?\"%\":\"\")}</td>\n            <td>${discount.min_transaction}</td>\n            <td>{new Date(String(discount.end_date)).toUTCString()}</td>\n            <td className=\"text-right\"><button onClick={applyDiscount}>Apply</button> </td>\n        </tr>\n    );\n}\n","import React from \"react\";\nimport '../../style/reservation.css';\nimport ReactToPrint from 'react-to-print';\nimport { Discount } from \"./Discount\";\n\nexport const Invoice = (subTotalPayment, discount, discountDetail, reservation, orders, meals, discountList, oldOrders) => {\n    return(\n        <div className=\"col-md-6 mb-3\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"d-flex flex-column align-items-center text-center\">\n                        {invoiceInformation(reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders, true, true)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const invoiceInformation = (reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    let componentRef;\n    const invoiceItems = [];\n    let totalPayment = 0;\n    for(let i=0; i<meals.length; ++i){\n        invoiceItems.push(mealItem(discountDetail, orders[i], meals[i], oldOrders, meals));\n    }\n    totalPayment = subTotalPayment - discount;\n\n    const appliedDiscount = _ => {\n        return (discountDetail !== \"\");\n    }\n    \n    const openDiscountForm = _ => {\n        if(appliedDiscount()){\n            return alert(\"You can only use one discount offer per reservation!\");\n        }\n        document.getElementById(\"discountForm\").style.display = \"block\";\n    }\n    \n    return(\n        <section className=\"invoice\" >\n            {Discount(reservation, totalPayment, meals, discountList)}\n            <div className=\"container mb-4\">\n                <div id=\"invoiceComp\" ref={(response) => (componentRef = response)} className=\"table-responsive\">\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"col-3 text-center\">Meal Name</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Quantity</th>\n                                <th scope=\"col\" className=\"col-3 text-center\">Notes</th>\n                                <th scope=\"col\" className=\"col-1 text-center\">Price</th>\n                                <th scope=\"col\" className=\"col-2 text-center\">Total</th>\n                                <th className=\"col-1\"> </th>\n                                <th className=\"col-1\"> </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {invoiceItems}\n                            {discountDetail===\"\"? \"\" : discountItem(reservation, discountDetail, discount)}\n                            {subTotal(subTotalPayment)}\n                            {discountOffer(discount)}\n                            {total(totalPayment)}\n                        </tbody>\n                    </table>\n                </div>\n                <div>\n                    <ReactToPrint\n                        content={() => componentRef}\n                        trigger={() => <button >Print to PDF</button>}\n                    />\n                    <button style={{marginLeft:10}} onClick={openDiscountForm} >Apply Discount</button>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nconst subTotal = (subTotalPayment) => {\n    return(\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><strong>Sub Total</strong></td>\n            <td className=\"text-right\"><strong>${Number.isFinite(subTotalPayment)?subTotalPayment:0}</strong></td>\n        </tr>\n    );\n}\nconst discountOffer = (discount) =>{\n    return(\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><strong>Discount</strong></td>\n            <td className=\"text-right\"><strong>${Number.isFinite(discount)?discount:0}</strong></td>\n        </tr>\n    );\n}\nconst total = (totalPayment) =>{\n    return(\n        <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><strong>Total</strong></td>\n            <td className=\"text-right\"><strong>${Number.isFinite(totalPayment)?totalPayment:0}</strong></td>\n        </tr>\n    );\n}\n\nconst mealItem = (discountDetail, order, meal, orders, meals) => {\n    const handleQtyChange = (e) => {\n        order.quantity = e.target.value;\n    }\n    const handleNotesChange = (e) => {\n        order.notes = e.target.value;\n    }\n    const updateData = _ => {\n        if(orders.length <= 0 || !order || meals.length <= 0 || !meal){\n            return;\n        }\n\n        if(!Number.isFinite(Number(order.quantity)) || Number(order.quantity)%1 !== 0 || Number(order.quantity) < 0 ){\n            return alert(\"Please fill in the quantity with a postive non decimal number!\");\n        }\n\n        if(Number(order.quantity) === 0){\n            order.quantity = Number(orders[findOrderIndex()].quantity);\n            return removeItem();\n        }\n\n        if(discountDetail !== \"\" && !validateDiscMinTrans(\"update\") && !(window.confirm(\"The applied discount offer will be removed!\\r\\nAre you sure to modify the order's quantity?\"))){\n            return window.location.reload();;\n        }\n\n        fetch(\"/api/updateorder\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                orderID: order._id,\n                quantity: order.quantity,\n                notes: order.notes,\n                discountID: (discountDetail === \"\" ? \"\" : String(discountDetail._id)),\n                min_transaction: validateDiscMinTrans(\"update\")\n            })\n        })\n            .then((res) => {return res.json(); })\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n    const removeItem = _ => {\n        if(!order || meals === \"\" || !meal){\n            return;\n        }\n\n        if(!Number.isFinite(Number(order.quantity)) || Number(order.quantity)%1 !== 0 || Number(order.quantity) <= 0 ){\n            return alert(\"Please fill in the quantity with a non decimal number larger than 0!\");\n        }\n\n        if(discountDetail !== \"\" && (!validateDiscMinTrans(\"delete\") || (String(discountDetail.mealType).toUpperCase() !== \"A\" && !hasMealType(\"delete\")) ) \n                && !(window.confirm(\"The applied discount offer will be removed!\\r\\nAre you sure to remove the order?\"))){\n            return window.location.reload();;\n        }\n\n        fetch(\"/api/removeorder\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                orderID: String(order._id),\n                quantity: Number(order.quantity),\n                discountID: (discountDetail === \"\" ? \"\" : String(discountDetail._id)),\n                min_transaction: validateDiscMinTrans(\"delete\"),\n                hasMealType: hasMealType(\"delete\")\n            })\n        })\n            .then((res) => {return res.json(); })\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n    const validateDiscMinTrans = (type) => {\n        try{\n            if(discountDetail === \"\"){\n                return false;\n            }\n            let value = 0;\n            for(let i = 0; i < orders.length; ++i){\n                if(String(orders[i]._id) === String(order._id)){\n                    if(String(type).toUpperCase() === \"UPDATE\" ){\n                        value += ( Number(order.quantity) * Number(meals[i].price) );\n                    }else{\n                        value += ( (Number(orders[i].quantity) - Number(order.quantity)) * Number(meals[i].price) );\n                    }\n                }else{\n                    value += (Number(orders[i].quantity) * Number(meals[i].price));\n                }\n            }\n            return (value >= Number(discountDetail.min_transaction));\n        }catch(error){\n            alert(error);\n        }\n    }\n    const findOrderIndex = _ => {\n        try{\n            for(let i = 0; i < orders.length; ++i){\n                if(String(orders[i]._id) === String(order._id)){\n                    return i;\n                }\n            }\n            return -1;\n        }catch(error){\n            alert(error);\n        }\n    }\n    const hasMealType = (type) => {\n        try{\n            if(discountDetail === \"\"){\n                return false;\n            }\n            for(let i = 0; i < orders.length; ++i){\n                if(String(orders[i]._id) === String(order._id)){\n                    let qty;\n                    if(String(type).toUpperCase() === \"UPDATE\" ){\n                        qty = Number(order.quantity);\n                    }else{\n                        qty = (Number(orders[i].quantity) - Number(order.quantity));\n                    }\n                    if(String(meals[i].type).toUpperCase() === String(discountDetail.mealType).toUpperCase() && qty > 0){\n                        return true;\n                    }\n                }else{\n                    if(String(meals[i].type).toUpperCase() === String(discountDetail.mealType).toUpperCase()){\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }catch(err){\n            alert(err);\n        }\n    }\n\n    return(\n        <tr>\n            <td>{meal.name}</td>\n            <td><input className=\"form-control text-center\" type=\"text\" defaultValue={order.quantity} onChange={handleQtyChange}/></td>\n            <td><input className=\"form-control text-center\" type=\"text\" defaultValue={order.notes} onChange={handleNotesChange} /></td>\n            <td>${meal.price}</td>\n            <td>${Number.isFinite(Number(order.quantity))? Number(meal.price) * Number(order.quantity):0}</td>\n            <td><button onClick={updateData} >Edit</button> </td>\n            <td><button className=\"btn btn-sm btn-danger\" onClick={removeItem} ><i className=\"fa fa-trash\"></i> </button> </td>\n        </tr>\n    )\n}\nconst discountItem = (reservation, discount, value) => {\n    const removeItem = _ => {\n        try{\n            // Check if discount variable exists\n            if(!discount){\n                return;\n            }\n\n            // Asking for confirmation\n            if(!(window.confirm(\"Are you sure to cancel the reservation?\"))){\n                return;\n            }\n\n            fetch(\"/api/canceldiscount\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: reservation._id\n                })\n            })\n                .then((res) => {return res.json(); })\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        window.location.reload();\n                    }\n                });\n        }catch(err){\n            alert(err);\n        }\n    }\n    return(\n        <tr>\n            <td>{discount.name}</td>\n            <td>1</td>\n            <td>{discount.description}</td>\n            <td>-{(String(discount.type)===\"N\"&&\"$\")+discount.nominal+(String(discount.type)===\"P\"?\"%\":\"\")}</td>\n            <td>-${value}</td>\n            <td></td>\n            <td className=\"text-right\"><button className=\"btn btn-sm btn-danger\" onClick={removeItem} ><i className=\"fa fa-trash\"></i> </button> </td>\n        </tr>\n    )\n}","import React from \"react\";\nimport '../style/reservation.css';\n\nexport const TextField = (title, data) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\" style={{textAlign: \"left\"}} >\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"text\" value={data} readOnly />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React from \"react\";\nimport '../../style/reservation.css';\nimport {Title} from \"../../../component/Title.js\";\nimport {Invoice} from \"./Invoice\";\nimport {TextField} from \"../TextField\";\n\nexport const Reservation = (reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    const cancelReservation = _ => {\n        let date = new Date(String(table.date));\n        date = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours());\n        if(date < new Date(getCurrentDate())){\n            return alert(\"Reservation cancellation must be at least 1 hour before!\");\n        }\n        const confirmation = window.confirm(\"Are you sure to cancel the reservation?\");\n        if(!confirmation){\n            return;\n        }\n        fetch(\"/api/cancelreservation\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                reservation: reservation._id,\n                table: table._id,\n                date: table.date\n            })\n        })\n            .then((res) => {return res.json(); })\n            .then((data) => {\n                if(!data.status){\n                    alert(\"Failed to cancel reservation!\");\n                }else{\n                    window.location.reload();\n                }\n            });\n    }\n\n    return(\n        <section className=\"reservation\">\n            {Title(\"Reservation\")}\n            <div className=\"container\">\n                <div className=\"main-body\">\n                    <div className=\"row gutters-sm\">\n\n                        <div className=\"col-md-6\">\n                            <div className=\"card mb-3\">\n                                <div className=\"card-body\">\n                                    {tableInformation(table)}\n                                    {reservationInformation(reservation)}\n                                    <div className=\"column right-side-button\">\n                                        {/* <button className=\"btn-lg\" >Edit</button> */}\n                                        <button className=\"btn-lg\" onClick={cancelReservation} >Cancel Reservation</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {Invoice(subTotalPayment, discount, discountDetail, reservation, orders, meals, discountList, oldOrders)}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst tableInformation = (table) => {\n    const items = [];\n    items.push(TextField(\"Table Number\", table.name));\n    items.push(TextField(\"Table Capacity\", table.capacity));\n    items.push(TextField(\"Reservation Type\", new Date(String(table.date)).getUTCHours() >= 18? \"Dinner\":\"Lunch\"));\n    items.push(TextField(\"Reservation Date/Time\", new Date(String(table.date)).toUTCString() ));\n    items.push(TextField(\"Reservation Location\", table.location));\n    return items;\n}\n\nconst reservationInformation = (reservation) => {\n    const items = [];\n    items.push(TextField(\"Reservation Party Size\", reservation.number_of_people));\n    items.push(TextField(\"Notes\", String(reservation.notes) === \"null\" ? \" \" : reservation.notes));\n    return items;\n}","import React from \"react\";\nimport '../../style/reservation.css';\n\nexport const Confirmation = (props) => {\n    return(\n        <div className=\"form-popup center form-container\" id=\"myForm\">\n            <h2>Reservation Confirmation</h2>\n            <div className=\"reservation confirmation-content\">\n                {ReservationInformation(\"Table Number\", props.selection.table.name)}\n                {ReservationInformation(\"Table Capacity\", props.selection.table.capacity)}\n            </div>\n            <div className=\"reservation confirmation-content\">\n                {ReservationInformation(\"Reservation Type\", props.selection.type)}\n                {ReservationInformation(\"Reservation Date/Time\", new Date(props.getDate()))}\n            </div>\n            <div className=\"reservation confirmation-content\">\n                {ReservationInformation(\"Reservation Location\", props.selection.location)}\n                {ReservationInformation(\"Reservation Party Size\", props.selection.size)}\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Notes\" onChange={event => props.setNote(event.target.value)} />\n                <label >Notes (optional)</label>\n            </div>\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={props.reserve} >Book</button>\n                <button type=\"button\" onClick={props.closeForm} >Cancel</button>\n            </div>\n        </div>\n    );\n}\n\nconst ReservationInformation = (title, data) => {\n    return(\n        <div className=\"form-floating\">\n            <input type=\"text\" className=\"form-control\" value={data} readOnly = {true}/>\n            <label >{title}</label>\n        </div>\n    )\n}","import React from \"react\";\nimport '../../style/reservation.css';\nimport { invoiceInformation } from \"../customer_access/Invoice\";\n\nexport const Invoice = (reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders, setStaffSelection) => {\n    const closeDiscountForm = _ => {\n        const newSel = {\n            customer: \"\",\n            reservation: \"\",\n            table: \"\"\n        };\n        setStaffSelection(newSel);\n        document.getElementById(\"invoiceForm\").style.display = \"none\";\n    }\n\n    return (\n        <div id=\"invoiceForm\" className=\"form-popup center popup-info form-container\">\n            <h2>INVOICE</h2>\n            <div className=\"d-flex flex-column align-items-center text-center\">\n                {invoiceInformation(reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders)}\n            </div>\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={closeDiscountForm} >Close</button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport '../../style/reservation.css';\n\nexport const CustomerDetail = (customer) =>{\n    const closeDiscountForm = _ => {\n        document.getElementById(\"customerForm\").style.display = \"none\";\n    }\n\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = new Date(String(customer.dateOfBirth));\n    const displayDOB = date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear()\n    const items = [];\n    items.push(textField(\"Username\", customer.username));\n    items.push(textField(\"Email\", customer.email));\n    items.push(textField(\"Name\", customer.firstName + \" \" + customer.lastName));\n    items.push(textField(\"Date of Birth\", displayDOB) );\n    items.push(textField(\"Contact Number\", customer.contactNumber));\n\n    return(\n        <div id=\"customerForm\" className=\"form-popup center form-container\">\n            <h2>CUSTOMER INFORMATION</h2>\n            {customerData(items)}\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={closeDiscountForm} >Close</button>\n            </div>\n        </div>\n    )\n}\n\nconst customerData = (items) => {\n    return(\n        <div className=\"col-md-12\">\n            <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                    {items}\n                    <div className=\"column right-side-button\">\n                        {/* <button class=\"btn-lg\" onClick={openEditValidation} >Edit</button> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst textField = (title, data) => {\n    return(\n        <div className=\"form-floating\">\n            <input type=\"text\" className=\"form-control\" value={data} readOnly = {true}/>\n            <label >{title}</label>\n        </div>\n    )\n}","import React from \"react\";\nimport '../../style/reservation.css';\nimport { Invoice } from \"./Invoice\";\nimport { CustomerDetail } from \"./CustomerDetail\";\n\nexport const ReservationTable = (reservations, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    return(\n        <section>\n            {CustomerDetail(staffSelection.customer)}\n            {Invoice(staffSelection.reservation, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders, setStaffSelection)}\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" className=\"col-1 text-center\">ID</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Table Number</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Table Capacity</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Date/Time</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Party Size</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Notes</th>\n                        <th className=\"col-1\"></th>\n                        <th className=\"col-1\"></th>\n                        <th className=\"col-1\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {reservationList(reservations, setStaffSelection)}\n                </tbody>\n            </table>\n        </section>\n    )\n}\n\nconst reservationList = (reservations, setStaffSelection) => {\n    const items = [];\n    for(let i=0; i<reservations.length; ++i){\n        const item = reservations[i];\n        items.push(reservationItem(item.reservation, item.table, item.customer, setStaffSelection));\n    }\n    return items;\n}\n\nconst reservationItem = (reservation, table, customer, setStaffSelection) => {\n    const opencustomerDetail = _ => {\n        const newSel = {\n            customer: customer,\n            reservation: reservation,\n            table: table\n        };\n        setStaffSelection(newSel);\n        document.getElementById(\"customerForm\").style.display = \"block\";\n    }\n    const openInvoice = _ =>{\n        const newSel = {\n            customer: customer,\n            reservation: reservation,\n            table: table\n        };\n        setStaffSelection(newSel);\n        document.getElementById(\"invoiceForm\").style.display = \"block\";\n    }\n\n    const setComplete = (e) => {\n        fetch(\"/api/setbookingcompleteness\", {\n            method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: String(reservation._id),\n                    status: e.target.checked\n                })\n        })\n            .then((res) => {return res.json();})\n    }\n\n    return (\n        <tr>\n            <td>{reservation._id}</td>\n            <td>{table.name}</td>\n            <td>{table.capacity}</td>\n            <td>{new Date(String(table.date)).toUTCString().toString()}</td>\n            <td>{reservation.number_of_people}</td>\n            <td>{(String(reservation.notes) === \"null\" ? \"\" : reservation.notes)}</td>\n            <td><input type=\"checkbox\" id=\"completeStatus\" name=\"completeStatus\" value=\"true\" defaultChecked={(reservation.completeness)} onChange={setComplete} /> Complete</td>\n            <td className=\"text-right\"><button onClick={opencustomerDetail}>Customer</button> </td>\n            <td className=\"text-right\"><button onClick={openInvoice}>Invoice</button> </td>\n        </tr>\n    )\n}","import React from \"react\";\nimport {Title} from \"../../../component/Title.js\";\nimport '../../style/reservation.css';\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport {ReservationTable} from './ReservationTable'\n\nexport const ReservationList = (filter, setFilter, reservationsList, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    return (\n        <section className=\"reservation\">\n            {Title(\"Reservation\")}\n            <div className=\"container\">\n                <div style={{marginBottom: 20}}>\n                    {filterDropdown(filter, setFilter)}\n                </div>\n                <div style={{overflow: \"auto\"}}>\n                    {ReservationTable(reservationsList, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders)}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst filterDropdown = (filter, setFilter) => {\n    const size = 4;\n    return(\n        <Row noGutters className=\"menu-dropdown filter-dropdown\">\n            {locationfilter(filter, setFilter, size)}\n            {reservationTypefilter(filter, setFilter, size)}\n            {completenessFilter(filter, setFilter, size)}\n        </Row>\n    )\n}\n\nconst locationfilter = (filter, setFilter, size) => {\n    const locations = [\"All Locations\", \"2/1-25 Harbour St\", \"123 Victoria St, Potts Point\", \"241 Victoria St, Darlinghurst\"];\n    const getLocation = _ => {\n        let newLocation = [];\n        locations.forEach(location => {\n            newLocation.push(\n                <DropdownItem key={location} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                location: location\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {location}\n                </DropdownItem>\n            );\n        });\n        return newLocation;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.location}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getLocation()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n\nconst reservationTypefilter = (filter, setFilter, size) => {\n    const types = [\"All\", \"Lunch\", \"Dinner\"];\n    const getType = _ => {\n        let newType = [];\n        types.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                type: type\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            )\n        })\n        return newType;\n    };\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.type}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getType()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n// eslint-disable-next-line\nconst completenessFilter = (filter, setFilter, size) => {\n    const status = [\"All Reservations\", \"Completed Reservations\", \"Uncompleted Reservations\"];\n    const getStatus = _ => {\n        let newStatus = [];\n        status.forEach(completeness => {\n            newStatus.push(\n                <DropdownItem key={completeness} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                completeness: completeness\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {completeness}\n                </DropdownItem>\n            )\n        })\n        return newStatus;\n    };\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.completeness}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getStatus()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport '../style/reservation.css';\nimport {Table} from \"./customer_access/Table\";\nimport {getUserID} from \"../../App.js\";\nimport {Title} from \"../../component/Title.js\";\nimport {Reservation} from \"./customer_access/Reservation\";\nimport {Confirmation} from \"./customer_access/Confirmation\";\nimport {ReservationList} from \"./staff_access/ReservationList\";\n\nexport const Book = _ => {\n    const [userType, setUserType] = useState(\"\");\n    const [totalTables, setTotalTables] = useState([]);\n\n    const [staffSelection, setStaffSelection] = useState({\n        customer: \"\",\n        reservation: \"\",\n        table: \"\"\n    });\n    const [filter, setFilter] = useState({\n        location: \"All Locations\",\n        type: new Date().getHours() >= 18? \"Dinner\" : \"Lunch\",\n        completeness: \"All Reservations\"\n    });\n    const [reservationsList, setReservationsList] = useState(\"\");\n    // Customer's selections\n    const [selection, setSelection] = useState({\n        type: \"Lunch\",\n        table: {\n            name: null,\n            id: null\n        },\n        date: new Date(),\n        time: null,\n        location: null,\n        size: 0\n    });\n\n    // Customer's reservation details\n    const [note, setNote] = useState(null);\n    const [reservation, setReservation] = useState(\"I\");\n    const [table, setTable] = useState(\"I\");\n    const [orders, setOrders] = useState(\"\");\n    const [meals, setMeals] = useState(\"\");\n\n    // Customer's invoice details\n    const [subTotalPayment, setSubtotalPayment] = useState(0);\n    const [discount, setDiscount] = useState(0);\n    const [discountDetail, setDiscountDetail] = useState(\"\");\n    const [oldOrders, setOldOrders] = useState(\"\");\n\n    // Discount offer list\n    const [discountList, setDiscountList] = useState(\"\");\n\n    // List of potential locations\n    const locations = [\"2/1-25 Harbour St\", \"123 Victoria St, Potts Point\", \"241 Victoria St, Darlinghurst\"];\n    \n    // List of reservation times\n    const [times, setTimes] = useState([\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"]);\n\n    // Get the user's account type\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                return setUserType(\"\");\n            }\n            const res = await fetch(`/api/profile?userID=${getUserID()}`);\n            const data = await res.json();\n            if(data.status)\n                setUserType(data.userType);\n            else\n                setUserType(\"\");\n        }\n        getData();\n    }, []);\n\n    //-----RESERVATION ACCESS FOR CUSTOMER-----\n        // Get a customer active reservation with the table information\n        useEffect(() => {\n            const getData = async _ =>{\n                if(!userType || userType !== 'C'){\n                    setReservation(\"I\");\n                    setTable(\"I\");\n                }\n                const res = await fetch(\"/api/getreservation\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        userID: getUserID()\n                    })\n                });\n                const data = await res.json();\n                setReservation(data.reservation);\n                setTable(data.table);\n            };\n            getData();\n        }, [userType]);\n\n        // Get customer's orders with the meals information\n        useEffect(() => {\n            const getData = async _ =>{\n                setOrders(\"\");\n                setMeals(\"\");\n                if( (!userType || userType !== 'C') && staffSelection.customer === \"\"){\n                    return\n                }\n                const res = await fetch(\"/api/getorders\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        reservation: ((userType !== 'C' && staffSelection.reservation !== \"\") ? staffSelection.reservation._id : reservation._id)\n                    })\n                });\n                const data = await res.json();\n                setOrders(data.orders);\n                setMeals(data.meals);\n            };\n            getData();\n        }, [reservation, userType, staffSelection]);\n\n        // Set customer's total sub payment\n        useEffect(() => {\n            let value = 0;\n            for(let i=0; i<meals.length; ++i){\n                value += Number(orders[i].quantity) * Number(meals[i].price);\n            }\n            setSubtotalPayment(value);\n        }, [orders, meals]);\n\n        // Set customer's applied discount\n        useEffect(() => {\n            const getData = async _ =>{\n                setDiscount(0);\n                setDiscountDetail(\"\");\n                if( (staffSelection.reservation === \"\" && (reservation === \"I\" || reservation === \"\" || String(reservation.discount) === \"\")) || (staffSelection.reservation !== \"\" && ((String(staffSelection.reservation.discount) === \"\"))) || meals.length <= 0 || orders.length <=0){\n                    return;\n                }\n                const res = await fetch(\"/api/calculatediscount\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        discountID: (userType === \"C\" ? reservation.discount : staffSelection.reservation.discount),\n                        transaction: subTotalPayment,\n                        meals: meals,\n                        orders: orders\n                    })\n                });\n                const data = await res.json();\n                if(data.status){\n                    setDiscount(Number(data.value));\n                    setDiscountDetail(data.item);\n                }\n            }\n            getData();\n        }, [userType, reservation, subTotalPayment, meals, orders, staffSelection]);\n\n        // Set temporary variable to store previous customer's orders\n        useEffect(() => {\n            const getData = async _ =>{\n                setOldOrders(\"\");\n                if((reservation === \"I\" || reservation === \"\" ) && staffSelection.reservation === \"\"){\n                    return;\n                }\n                const res = await fetch(\"/api/getorders\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        reservation: (userType === 'C' ? reservation._id : staffSelection.reservation._id)\n                    })\n                });\n                const data = await res.json();\n                setOldOrders(data.orders);\n            };\n            getData();\n        }, [userType, reservation, staffSelection]);\n\n        // Get filtered discount offer list\n        useEffect(()=>{\n            const getData = async _ => {\n                setDiscountList(\"\");\n                const res = await fetch(\"/api/getdiscounts\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        userID: (staffSelection.customer !== \"\" && String(userType).toUpperCase() !== \"C\") ? staffSelection.customer._id : getUserID()\n                    })\n                });\n                const data = await res.json();\n                if(!data.status){\n                    return setDiscountList(\"\");\n                }\n                if(String(userType).toUpperCase() === \"C\"){\n                    setDiscountList(data.discounts.filter(data => \n                        (new Date(String(data.end_date)).getTime() > new Date(String(table.date)).getTime()) &&\n                        (String(data.menuType)===\"A\" ? true : (new Date(String(table.date)).getHours() >= 18? \"Dinner\":\"Lunch\") === (String(data.menuType)===\"L\"?\"Lunch\":\"Dinner\") )\n                    ));\n                }else{\n                    setDiscountList(data.discounts.filter(data => \n                        (new Date(String(data.end_date)).getTime() > new Date(String(staffSelection.table.date)).getTime()) &&\n                        (String(data.menuType)===\"A\" ? true : (new Date(String(staffSelection.table.date)).getHours() >= 18? \"Dinner\":\"Lunch\") === (String(data.menuType)===\"L\"?\"Lunch\":\"Dinner\") )\n                    ));\n                }\n            }\n            getData();\n        }, [staffSelection, table, meals, userType]);\n    //-----END OF SECTION-----\n\n    //-----RESERVATION CREATION FOR CUSTOMER-----\n        // Set available times for booking\n        useEffect(() => {\n            if(selection.type === \"Lunch\"){\n                setTimes([\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\"]);\n            }else{\n                setTimes([\"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\"]);\n            }\n        }, [times, selection.type])\n        \n        // Get date and time selected by user\n        const getDate = _ => {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const year = selection.date.getFullYear();\n            const month = months[selection.date.getMonth()];\n            const day = selection.date.getDate();\n            return (month+\" \"+day+\" \"+year+\" \"+selection.time+\":00\");\n        };\n\n        // Get Current Date and time + 1 hour\n        const getCurrentDate = _ => {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const date = new Date();\n            const year = date.getFullYear();\n            const month = months[date.getMonth()];\n            const day = date.getDate();\n            const time = date.getMinutes > 0? date.getHours()+1 : (date.getHours() + 2);\n            const datetime = time < 24? (month+\" \"+day+\" \"+year+\" \"+time+\":00:00\") : (month+\" \"+(day+1)+\" \"+year+\" \"+(time-24)+\":00:00\");\n            return datetime;\n        }\n\n        // Validate user selection date\n        const isSelectedDateValid = _ => {\n            return (new Date(getDate())).getTime() >= (new Date(getCurrentDate())).getTime();\n        }\n\n        // Get Available Tables\n        const getEmptyTables = _ => {\n            let tables = totalTables.filter(table => table.isAvailable);\n            return tables.length;\n        };\n        useEffect(() => {\n            // Check availability of tables\n            if (isSelectedDateValid() && selection.location && selection.size) {\n                (async _ => {\n                    let datetime = getDate();\n                    let res = await fetch(\"/api/availability\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            date: datetime\n                        })\n                    });\n                    res = await res.json();\n\n                    // Sort available tables ascending according to the capacity and filter them with the location and group size criteria\n                    let tables = res.tables.sort((a,b) => a.capacity > b.capacity ? 1 : (b.capacity > a.capacity) ? -1 : 0).filter(\n                    table =>\n                        (selection.size > 0 ? table.capacity >= selection.size && table.capacity-selection.size <=3 : true) &&\n                        table.location === selection.location && table.isAvailable\n                    );\n                    setTotalTables(tables);\n                })();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [selection.time, selection.date, selection.size, selection.location])   ;\n\n        // Generating tables from available tables state\n        const getTables = _ => {\n            console.log(\"Getting tables\");\n            if (getEmptyTables() > 0) {\n                let tables = [];\n                totalTables.forEach(table => {\n                    if (table.isAvailable) {\n                        tables.push(\n                            <Table\n                                key={table._id}\n                                id={table._id}\n                                chairs={table.capacity}\n                                name={table.name}\n                                empty\n                                selectTable={selectTable}\n                            />\n                        );\n                    } else {\n                        tables.push(\n                            <Table\n                                key={table._id}\n                                id={table._id}\n                                chairs={table.capacity}\n                                name={table.name}\n                                selectTable={selectTable}\n                            />\n                        );\n                    }\n                });\n                return tables;\n            }\n        };\n\n        // Clicking on a table sets the selection state\n        const selectTable = (table_name, table_id, table_chairs) => {\n            setSelection({\n                ...selection,\n                table: {\n                    name: table_name,\n                    id: table_id,\n                    capacity: table_chairs\n                }\n            });\n            bookTable();\n        };\n\n        // Create new reservation\n        const reserve = async _ => {\n            await fetch(\"/api/reserve\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    ...selection,\n                    date: getDate(),\n                    notes: note,\n                    userID: getUserID()\n                })\n            });\n            closeForm();\n            window.location.reload();\n        };\n\n        // Confirmation Window\n        const bookTable = _ => {\n            openForm();\n        }\n        const openForm = _ => {\n            document.getElementById(\"myForm\").style.display = \"block\";\n        }\n        const closeForm = _ => {\n            document.getElementById(\"myForm\").style.display = \"none\";\n        }\n    //-----END OF SECTION-----\n        \n    //-----RESERVATION LIST FOR STAFF\n        // Filter reservation list\n        useEffect(() => {\n            const getData = async _ => {\n                setReservationsList(\"\");\n                if(!userType || userType === 'C'){\n                    return;\n                }\n                const res = await fetch(\"/api/getreservationlist\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        location: filter.location,\n                        type: filter.type,\n                        completeness: filter.completeness\n                    })\n                });\n                const data = await res.json();\n                if(data.reservations === \"\"){\n                    return setReservationsList(\"\");\n                }\n                setReservationsList(data.reservations.sort(\n                    (a, b) => a.table.date < b.table.date ? 1 : (b.table.date < a.table.date) ? -1 : 0\n                ));\n            }\n            getData();\n        }, [filter, userType, staffSelection]);\n    //-----END OF SECTION-----\n\n    // If Unauthorised users try to open\n    // if(!getUserID()){\n    //     return window.location.href=\"/login\";\n    // }\n\n    if(!getUserID() || !userType || String(userType) === \"\"){\n        return (<section></section>);\n    }\n    \n    if(String(userType).toUpperCase() === \"C\"){\n        return customerView(reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate, reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders);\n    }else{\n        return ReservationList(filter, setFilter, reservationsList, staffSelection, setStaffSelection, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders);\n    }\n};\n\n// Customer Access\nconst customerView = (reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate, reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders) => {\n    return (\n        <section className=\"reservation\">\n            {reservation? (\n                reservation === \"I\"? (\n                    <div></div>\n                ) : (\n                    Reservation(reservation, table, getCurrentDate, orders, meals, discountList, subTotalPayment, discount, discountDetail, oldOrders)\n                )\n            ):\n                createNewBooking(reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate)\n            }\n        </section>\n    )\n}\n\nconst createNewBooking = (reserve, closeForm, setNote, selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid, getDate) => {\n    return(\n        <section className=\"reservation\">\n            {<Confirmation reserve={reserve} closeForm={closeForm} selection={selection} setNote={setNote} getDate={getDate} />}\n            {Title(\"Reservation\")}\n            {bookReservation(selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid)}\n        </section>\n    );\n}\n\nconst bookReservation = (selection, setSelection, times, locations, getEmptyTables, getTables, isSelectedDateValid) => {\n    return(\n        <div id=\"reservation-stuff\">\n            {reservationInfoSelection(selection, setSelection, times, locations)}\n            {tablesSelection(selection, isSelectedDateValid, getEmptyTables, getTables)}\n        </div>\n    );\n}\n\n// Reservation Information Selections\nconst reservationInfoSelection = (selection, setSelection, times, locations) => {\n    return(\n        <Row noGutters className=\"text-center align-items-center reservation\">\n            {menuTypeSelection(selection, setSelection)}\n            {dateSelection(selection, setSelection)}\n            {timeSelection(selection, setSelection, times)}\n            {locationSelection(selection, setSelection, locations)}\n            {partySizeSelection(selection, setSelection)}\n        </Row>\n    );\n}\nconst menuTypeSelection = (selection, setSelection) => {\n    const menuType = [\"Lunch\", \"Dinner\"];\n    // Generate menu type selection dropdown\n    const getMenuType = _ => {\n        let newType = [];\n        menuType.forEach(type => {\n            newType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...selection,\n                                type: type,\n                                table: {\n                                    ...selection.table\n                                },\n                                time: null\n                            };\n                            setSelection(newSel);\n                        }}>\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newType;\n    };\n    return (\n        <Col xs=\"12\" sm=\"2\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\"> {selection.type} </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getMenuType()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\nconst dateSelection = (selection, setSelection) => {\n    const month = new Date().getMonth()+1;\n    const date = new Date().getFullYear() + \"-\" + (month < 10 && \"0\") + month + \"-\" + new Date().getDate();\n    return(\n        <Col xs=\"12\" sm=\"2\">\n            <input type=\"date\" required=\"required\" className=\"booking-dropdown\" defaultValue={date}\n                onChange={e => {\n                    if (!isNaN(new Date(new Date(e.target.value)))) {\n                        let newSel = {\n                            ...selection,\n                            table: {\n                            ...selection.table\n                            },\n                            date: new Date(e.target.value)\n                        };\n                        setSelection(newSel);\n                    } else {\n                        console.log(\"Invalid date\");\n                        let newSel = {\n                            ...selection,\n                            table: {\n                            ...selection.table\n                            },\n                            date: new Date()\n                        };\n                        setSelection(newSel);\n                    }\n                }}\n            ></input>\n        </Col>\n    );\n}\nconst timeSelection = (selection, setSelection, times) => {\n    // Generate time dropdown\n    const getTimes = _ => {\n        let newTimes = [];\n        times.forEach(time => {\n            newTimes.push(\n                <DropdownItem\n                    key={time}\n                    className=\"booking-dropdown-item\"\n                    onClick={_ => {\n                        let newSel = {\n                        ...selection,\n                        table: {\n                            ...selection.table\n                        },\n                        time: time\n                        };\n                        setSelection(newSel);\n                    }}\n                >\n                {time}\n                </DropdownItem>\n            );\n        });\n        return newTimes;\n    };\n    return(\n        <Col xs=\"12\" sm=\"2\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                    {selection.time === null ? \"Select a Time\" : selection.time}\n                </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getTimes()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    );\n}\nconst locationSelection = (selection, setSelection, locations) => {\n    // Generate locations dropdown\n    const getLocations = _ => {\n        let newLocations = [];\n        locations.forEach(loc => {\n            newLocations.push(\n                <DropdownItem\n                    key={loc}\n                    className=\"booking-dropdown-item\"\n                    onClick={_ => {\n                        let newSel = {\n                        ...selection,\n                        table: {\n                            ...selection.table\n                        },\n                        location: loc\n                        };\n                        setSelection(newSel);\n                    }}\n                >\n                {loc}\n                </DropdownItem>\n            );\n        });\n        return newLocations;\n    };\n\n    return (\n        <Col xs=\"12\" sm=\"3\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                    {selection.location === null? \"Select a Location\" : selection.location}\n                </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getLocations()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\nconst partySizeSelection = (selection, setSelection) => {\n    // Generate party size dropdown\n    const getSizes = _ => {\n        let newSizes = [];\n\n        for (let i = 1; i < 8; i++) {\n            newSizes.push(\n                <DropdownItem\n                    key={i}\n                    className=\"booking-dropdown-item\"\n                    onClick={e => {\n                        let newSel = {\n                        ...selection,\n                        table: {\n                            ...selection.table\n                        },\n                        size: i\n                        };\n                        setSelection(newSel);\n                    }}\n                >\n                {i}\n                </DropdownItem>\n            );\n        }\n        return newSizes;\n    };\n\n    return (\n        <Col xs=\"12\" sm=\"3\">\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">\n                    {selection.size === 0 ? \"Select a Party Size\" : selection.size.toString()}\n                </DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\"> {getSizes()} </DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    );\n}\n\n// Tables Selections\nconst tablesSelection = (selection, isSelectedDateValid, getEmptyTables, getTables) => {\n    return (\n        <Row noGutters className=\"tables-display\">\n            <Col>\n                {selection.date && selection.time && selection.location && selection.size ? (\n                    isSelectedDateValid() ? (\n                        availableTablesSelection(getEmptyTables, getTables)\n                    ) : (\n                        <p className=\"table-display-message\">Reservation must be at least 1 hour before from the current date and time!</p>\n                    )\n                ) : (\n                    <p className=\"table-display-message\">Please select the date, time, location, and party size for your reservation!</p>\n                )}\n            </Col>\n        </Row>\n    )\n}\nconst availableTablesSelection = (getEmptyTables, getTables) => {\n    return (\n        getEmptyTables() > 0 ? (\n            <div>\n                <p className=\"available-tables\">{getEmptyTables()} Table(s) Available</p>\n                <div className=\"table-key\">\n                <span className=\"empty-table\"></span> &nbsp; Available\n                &nbsp;&nbsp;\n                <span className=\"full-table\"></span> &nbsp; Unavailable\n                &nbsp;&nbsp;\n                </div>\n                <Row noGutters>{getTables()}</Row>\n            </div>\n        ) : (\n            <p className=\"table-display-message\">No Available Tables!</p>\n        )\n    );\n}","import React from \"react\";\nimport { getUserID } from \"../../App\";\nimport '../style/discount.css';\n\nexport const Item = (discounts, reservation, table, meals, subTotalPayment, menu) =>{\n    const formatDate = (date) =>{\n        const months = [\"Jan\", \"Feb\", \"March\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n        const datetime = new Date(String(date));\n        const day = datetime.getUTCDate();\n        const month = months[datetime.getUTCMonth()];\n        const year = datetime.getUTCFullYear();\n        return day + \" \" + month + \" \" + year;\n    }\n    const applyNow = (discount) => {\n        if(!getUserID()){\n            return window.location.href = \"/login\";\n        }\n        applyDiscount(discount);\n    }\n    const applyDiscount = (discount) =>{\n        try{\n            // Check if the reservation, meals, and discount variables are empty or not\n            if(reservation === \"I\" || reservation === \"\" || meals === \"I\" || !discount || !Number.isFinite(subTotalPayment)){\n                return;\n            }\n\n            // Check if the reservation has an order\n            if(meals===\"\" && String(discount.meal)===\"\" && String(discount.mealType)===\"A\"){\n                return alert(\"Please make an order first!\");\n            }\n\n            // Check if the reservation already has discount applied to it\n            if(reservation.discount.length > 0){\n                alert(\"You can only use one discount offer per reservation!\");\n                return window.location.href = \"/reservation\";\n            }\n\n            // Check the menu type\n            if(String(discount.menuType).toUpperCase()!==\"A\" ? true : (new Date(String(table.date)).getUTCHours() >= 18? \"Dinner\":\"Lunch\") !== (String(discount.menuType).toUpperCase()===\"L\"?\"Lunch\":\"Dinner\") ){\n                return alert(`Please select a discount offer that suits with your reservation menu type: ${String(discount.menuType === \"L\"?\"Lunch\":\"Dinner\")}`);\n            }\n\n            // Check if the orders has the required meal type\n            if(String(discount.meal)===\"\" && String(discount.mealType)!==\"A\" && !hasMealType(discount)){\n                return alert(`Please order a ${(String(discount.mealType).toUpperCase() === \"F\" ? \"food\" : \"drink\" )} first before applying this offer!`);\n            }\n\n            // Check and the total payment and the minimum transaction of the offer\n            if(Number(subTotalPayment) < Number(discount.min_transaction)){\n                return alert(\"Please order more meals or choose different offer!\\r\\nYour orders do not meet the minimum transaction of the discount offer!\");\n            }\n            const status = meals === \"\" ? true : !hasMeal(discount);\n\n            fetch(\"/api/applydiscount\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservationID: String(reservation._id),\n                    discountID: String(discount._id),\n                    mealID: String(discount.meal),\n                    status: status\n                })\n            })\n                .then((res) => {return res.json(); })\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        return window.location.href = \"/reservation\";\n                    }\n                });\n        }catch(err){\n            alert(err);\n        }\n    }\n    const hasMeal = (discount) => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i]._id) === String(discount.meal)){\n                return true;\n            }\n        }\n        return false;\n    }\n    const hasMealType = (discount) => {\n        for(let i=0; i<meals.length; ++i){\n            if(String(meals[i].type).toUpperCase() === String(discount.mealType).toUpperCase()){\n                return true;\n            }\n        }\n        return false;\n    }\n    const findMeal = (discount) => {\n        try{\n            for(let i=0; i<menu.length; ++i){\n                if(String(menu[i]._id) === String(discount.meal)){\n                    return menu[i];\n                }\n            }\n            return null;\n        }catch(err){\n            alert(err);\n        }\n    }\n    return(\n        <section>\n            <div className=\"discounts discount-list\">\n                {discounts.map((discount, index) => (\n                    <div key={index} className=\"discount-item\">\n                        <div className=\"discount-selection-container\">\n                            <img src={discount.image} className=\"discount-item img\" alt={discount.name}/>\n                            <div className=\"discount-selection\">\n                                <button type=\"button\" onClick={_=>{applyNow(discount)}}>Apply Now</button>\n                            </div>\n                        </div>\n                        <div className=\"name\">{discount.name}</div>\n                        <div className=\"description\">{discount.description}</div>\n                        <div style={{padding: 10}}>\n                            <div className=\"detail\"><b >Menu Type : </b>{String(discount.menuType).toUpperCase() === \"A\" ? \"All\" : (String(discount.menuType).toUpperCase()===\"L\"?\"Lunch\":\"Dinner\")}</div>\n                            <div className=\"detail\"><b >Meal Type : </b>{String(discount.mealType).toUpperCase() === \"A\" ? \"All\" : (String(discount.mealType).toUpperCase()===\"F\"?\"Food\":\"Drink\")}</div>\n                            <div className=\"detail\"><b >Meal Name : </b>{String(discount.meal) !== \"\" ? findMeal(discount).name : \"-\"}</div>\n                            <div className=\"detail\"><b >Nominal : </b>{(String(discount.type)===\"N\"&&\"$\")+discount.nominal+(String(discount.type)===\"P\"?\"%\":\"\")}</div>\n                            <div className=\"detail\"><b >Minimum Transaction : </b>${discount.min_transaction}</div>\n                            <div className=\"detail\"><b >Period : </b>{formatDate(String(discount.start_date)) + \" - \" + formatDate(String(discount.end_date))}</div>\n                        </div>\n                        <div className=\"btn\">\n                            <button onClick={_=>{applyNow(discount)}} type=\"button\">Apply Now</button>\n                            {/* <button>View Detail</button> */}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport { getUserID } from \"../../App\";\nimport {Title} from \"../../component/Title.js\";\nimport {Item} from \"./Item\";\nimport \"../style/discount.css\";\n\nexport const Discount = _ =>{\n    const [discounts, setDiscounts] = useState(\"\");\n    const [reservation, setReservation] = useState(\"I\");\n    const [table, setTable] = useState(\"I\");\n    const [orders, setOrders] = useState(\"\");\n    const [meals, setMeals] = useState(\"\");\n\n    useEffect(()=>{\n        const getData = async _ => {\n            setDiscounts(\"\");\n            const res = await fetch(\"/api/getdiscounts\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: getUserID()\n                })\n            });\n            const data = await res.json();\n            if(!data.status){\n                return setDiscounts(\"\");\n            }\n            setDiscounts(data.discounts.filter(data => \n                new Date(String(data.end_date)).getTime() > (new Date(getCurrentDate())).getTime()\n            ));\n        }\n        const getCurrentDate = _ => {\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n            const date = new Date();\n            const year = date.getFullYear();\n            const month = months[date.getMonth()];\n            const day = date.getDate();\n            const time = date.getMinutes > 0? date.getHours() : (date.getHours() + 1);\n            const datetime = time < 24? (month+\" \"+day+\" \"+year+\" \"+time+\":00:00\") : (month+\" \"+(day+1)+\" \"+year+\" \"+(time-24)+\":00:00\");\n            return datetime;\n        }\n        getData();\n    }, []);\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                setReservation(\"I\");\n            }\n            const res = await fetch(\"/api/getreservation\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: getUserID()\n                })\n            });\n            const data = await res.json();\n            setReservation(data.reservation);\n            setTable(data.table);\n        };\n        getData();\n    }, []);\n\n    useEffect(() => {\n        const getData = async _ =>{\n            if(!getUserID()){\n                setOrders(\"\");\n                setMeals(\"\");\n            }\n            const res = await fetch(\"/api/getorders\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    reservation: reservation._id\n                })\n            });\n            const data = await res.json();\n            setOrders(data.orders);\n            setMeals(data.meals);\n        };\n        getData();\n    }, [reservation]);\n\n    const [subTotalPayment, setSubTotalPayment] = useState(0);\n    useEffect(() => {\n        let value = 0;\n        for(let i=0; i<meals.length; ++i){\n            value += Number(orders[i].quantity) * Number(meals[i].price);\n        }\n        setSubTotalPayment(value);\n    }, [orders, meals]);\n\n    const [menu, setMenu] = useState(\"\");\n    useEffect(() => {\n        const getData = async _ =>{\n            try{\n                const response = await fetch(`/api/getallmeals`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n                const data = await response.json();\n                setMenu(data.menuItem);\n            }catch(err){\n                console.log(err);\n            }\n        }\n        getData();\n    }, [])\n\n    return(\n        <section className=\"discount\">\n            {Title(\"Discount Offer\")}\n            {discounts!==\"\" && Item(discounts, reservation, table, meals, subTotalPayment, menu)}\n        </section>\n    )\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const Confirmation = (setOldPass, accountModification, closeForm) => {\n    return(\n        <div className=\"form-popup center form-container\" id=\"myForm\">\n            <h2>Please enter your old password to continue the process!</h2>\n            <div className=\"form-floating\">\n                <input type=\"password\" className=\"form-control\" onChange={event => setOldPass(event.target.value)} placeholder=\"Old Password\" required />\n                <label for=\"floatingInput\">Old Password</label>\n            </div>\n            <div className=\"right-side-button\">\n                <button type=\"button\" onClick={accountModification}>Next</button>\n                <button type=\"button\" onClick={closeForm} >Cancel</button>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const NormalField = (title, data, setData) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"text\" onChange={event => setData(event.target.value)} value={data} \n                    readOnly={String(title).toLowerCase() === \"username\"  && String(data).toLowerCase() === \"admin\"}\n                />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React, {useState, useEffect} from \"react\";\nimport '../style/profile.css';\nimport {getUserID, logOut} from \"../../App\";\nimport { Confirmation } from \"./Confirmation\";\nimport { NormalField } from \"./NormalField\";\nimport { PasswordField } from \"./PasswordField\";\nimport { DateField } from \"./DateField\";\n\nexport const Profile = _ => {\n    const [username, setUsername] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setUsername(data.username));\n    }, []);\n    const [email, setEmail] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setEmail(data.email));\n    }, []);\n    const [password, setPassword] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setPassword(data.password));\n    }, []);\n    const [firstName, setFirstName] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setFirstName(data.firstName));\n    }, []);\n    const [lastName, setLastName] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setLastName(data.lastName));\n    }, []);\n    const [dateOfBirth, setDateOfBirth] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setDateOfBirth(data.dateOfBirth));\n    }, []);\n    const [contactNumber, setContactNumber] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setContactNumber(data.contactNumber));\n    }, []);\n    const [userType, setUserType] = useState(\"\");\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setUserType(data.userType));\n    }, []);\n    const [oldPass, setOldPass] = useState(\"\");\n\n    const items = [];\n    items.push(NormalField(\"Username\", username, setUsername));\n    items.push(NormalField(\"Email\", email, setEmail));\n    items.push(PasswordField(\"Password\", password, setPassword));\n    items.push(NormalField(\"First Name\", firstName, setFirstName));\n    items.push(NormalField(\"Last Name\", lastName, setLastName));\n    items.push(DateField(\"Date of Birth\", String(dateOfBirth).substring(0,10), setDateOfBirth));\n    items.push(NormalField(\"Contact Number\", contactNumber, setContactNumber));\n\n    const [buttonClicked, setButtonClicked] = useState(null);\n\n    const openEditValidation = _ => {\n        setButtonClicked(\"edit\");\n        openForm();\n    }\n    const openDeleteValidation = _ => {\n        setButtonClicked(\"delete\");\n        openForm();\n    }\n\n    // Confirmation Pop Up Window\n    const openForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"block\";\n    }\n    const closeForm = _ => {\n        document.getElementById(\"myForm\").style.display = \"none\";\n    }\n    \n    const accountModification = _ => {\n        if(buttonClicked === \"edit\")\n            editPersonalInformation();\n        else\n            deleteAccount();\n    }\n    const editPersonalInformation = _ => {\n        if(!(username && email && firstName && dateOfBirth && contactNumber))\n            return alert(\"Please fill in all of the non-optional data!\");\n        if(password.length < 8)\n            return alert(\"Password should be at least 8 characters!\");\n\n        fetch(\"/api/updateuser\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                userID: getUserID(),\n                username: username,\n                password: password,\n                validationPass: oldPass,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                dateOfBirth: dateOfBirth,\n                contactNumber: contactNumber\n            })\n        })\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n    const deleteAccount = _ => {\n        fetch(`/api/deleteuser?userID=${getUserID()}&password=${oldPass}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    logOut();\n                }\n            });\n    }\n\n    // If unauthorised users try to access the web page\n    if(!getUserID())\n        return window.location.href=\"/login\";\n    \n    return(\n        <section>\n            <section className=\"profile\">\n                <div className=\"container\">\n                    <div className=\"main-body\">\n                        <div className=\"row gutters-sm\">\n                            {Confirmation(setOldPass, accountModification, closeForm)}\n                            {profilePicture(firstName, lastName, userType)}\n                            {userData(items, openEditValidation, openDeleteValidation)}\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </section>\n    );\n}\n\nconst profilePicture = (firstName, lastName, userType) => {\n    return (\n        <div className=\"col-md-4 mb-3\">\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"d-flex flex-column align-items-center text-center\">\n                        <img src=\"https://i.pinimg.com/564x/89/64/99/8964998576cfac440b3a14df748fc670.jpg\" alt=\"Admin\" className=\"rounded-circle profile-picture\" width=\"200\" height=\"200\"/>\n                        <div className=\"mt-3\">\n                            <h4>{firstName + \" \" + lastName}</h4>\n                            <p class=\"text-secondary mb-1\">Account: \n                                {String(userType).toUpperCase()==='C'? \" Customer\":(\n                                    String(userType).toUpperCase() === 'M'? \" Manager\" : (\n                                        String(userType).toUpperCase() === 'E'? \" Employee\" : \"\" \n                                    )\n                                )}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst userData = (items, openEditValidation, openDeleteValidation) =>{\n    return(\n        <div className=\"col-md-8\">\n            <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                    {items}\n                    <div className=\"column right-side-button\">\n                        <button class=\"btn-lg\" onClick={openEditValidation} >Edit</button>\n                        <button class=\"btn-lg\" onClick={openDeleteValidation} >Delete Account</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const PasswordField = (title, data, setData) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"password\" onChange={event => setData(event.target.value)} value={data} />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React from \"react\";\nimport '../style/profile.css';\n\nexport const DateField = (title, data, setData) => {\n    return(\n        <secion>\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <h6 className=\"mb-0\">{title}</h6>\n                </div>\n                <input className=\"col-sm-9 text-secondary\" type=\"date\" onChange={event => setData(event.target.value)} value={data} />\n            </div>\n            <hr/>\n        </secion>\n    );\n}","import React, {useEffect, useState} from \"react\";\n\nexport const Login = _ => {\n    const [username, setUsername] = useState(null);\n    useEffect(() => {}, [username]);\n\n    const [password, setPassword] = useState(null);\n    useEffect(() => {}, [password]);\n\n    let rememberMe = false;\n    const handleChange = (e) => {\n        rememberMe = e.target.checked;\n    }\n\n    const signIn = _ =>{\n        if(!(username && password)){\n            return alert(\"Invalid username/email and/or password!\");\n        }\n        \n        fetch(`/api/login?username=${username}&email=${username}&password=${password}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                if(!data.status){\n                    alert(\"Invalid username/email and/or password!\");\n                }else{\n                    localStorage.setItem(\"rememberMe\", rememberMe);\n                    if(rememberMe){\n                        localStorage.setItem(\"userID\", data.userID);\n                    }else{\n                        sessionStorage.setItem(\"userID\", data.userID);\n                    }\n                    window.location.href='/';\n                }\n            });\n    }\n\n    return(\n        <section className=\"form-signin\">\n            {title()}\n            <section>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" id=\"floatingInput\" onChange={event => setUsername(event.target.value)} placeholder=\"username\"/>\n                    <label for=\"floatingInput\">Email Address/Username</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" onChange={event => setPassword(event.target.value)} placeholder=\"Password\"/>\n                <   label for=\"floatingPassword\">Password</label>\n                </div>\n            </section>  \n            <div className=\"checkbox mb-3\">\n                <label> <input type=\"checkbox\" value=\"remember-me\" onChange={handleChange}/> Remember me </label>\n            </div>\n            <button className=\"w-100 btn-lg\" onClick={signIn}>Login</button>\n            {signupLink()}\n        </section>\n    );\n}\nconst title = _ =>{\n    return(\n        <section>\n            <h1>Welcome to</h1>\n            <h3>Le Bistrot d'Andre</h3>\n        </section>\n    )\n}\nconst signupLink = _ =>{\n    return(\n        <a href=\"/signup\">Create new account</a>\n    );\n    \n}","import React, {useEffect, useState} from \"react\";\n\nexport const Signup = _ => {\n    const [username, setUsername] = useState(null);\n    useEffect(() => {}, [username]);\n\n    const [password, setPassword] = useState(null);\n    useEffect(() => {}, [password]);\n\n    const [email, setEmail] = useState(null);\n    useEffect(() => {}, [email]);\n\n    const [firstName, setFirstName] = useState(null);\n    useEffect(() => {}, [firstName]);\n\n    const [lastName, setLastName] = useState(\"\");\n    useEffect(() => {}, [lastName]);\n\n    const [dateOfBirth, setDateOfBirth] = useState(null);\n    useEffect(() => {}, [dateOfBirth]);\n\n    const [contactNumber, setContactNumber] = useState(null);\n    useEffect(() => {}, [contactNumber]);\n\n    let rememberMe = false;\n    const handleChange = (e) =>{\n        rememberMe = e.target.checked;\n    }\n    \n    const newCustomer = _ => {\n        if(!(username && email && firstName && dateOfBirth && contactNumber))\n            return alert(\"Please fill in all of the non-optional data!\");\n        if(password.length < 8)\n            return alert(\"Password should be at least 8 characters!\");\n        \n        fetch(`/api/signup?username=${username}&password=${password}&email=${email}&firstName=${firstName}&lastName=${lastName}&dateOfBirth=${dateOfBirth}&contactNumber=${contactNumber}&accountType=C`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                if(!data.status){\n                    alert(data.message);\n                }else{\n                    localStorage.setItem(\"rememberMe\", rememberMe);\n                    if(rememberMe){\n                        localStorage.setItem(\"userID\", data.userID);\n                    }else{\n                        sessionStorage.setItem(\"userID\", data.userID);\n                    }\n                    window.location.href='/';\n                }\n            });\n    }\n    return(\n        <section className=\"form-signup\">\n            {title()}\n            <section>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" id=\"floatingInput\" onChange={event => setUsername(event.target.value)} placeholder=\"username\"/>\n                    <label for=\"floatingInput\">Username</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"email\" className=\"form-control\" id=\"email\" onChange={event => setEmail(event.target.value)} placeholder=\"name@example.com\"/>\n                    <label for=\"email\">Email address</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" onChange={event => setPassword(event.target.value)} placeholder=\"Password\"/>\n                    <label for=\"floatingPassword\">Password</label>\n                </div>\n                <div className=\"form-floating left-field\">\n                    <input type=\"text\" className=\"form-control\" id=\"first_name\" onChange={event => setFirstName(event.target.value)} placeholder=\"First Name\"/>\n                    <label for=\"first_name\">First Name</label>\n                </div>\n                <div className=\"form-floating right-field\">\n                    <input type=\"text\" className=\"form-control\" id=\"last_name\" onChange={event => setLastName(event.target.value)} placeholder=\"Last Name\"/>\n                    <label for=\"last_name\">Last Name (optional)</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"date\" className=\"form-control\" id=\"date_of_birth\" onChange={event => setDateOfBirth(event.target.value)} placeholder=\"DD/MM/YYYY\"/>\n                    <label for=\"date_of_birth\">Date of Birth</label>\n                </div>\n                <div className=\"form-floating\">\n                    <input type=\"text\" className=\"form-control\" id=\"contact_number\" onChange={event => setContactNumber(event.target.value)} placeholder=\"Contact Number\"/>\n                    <label for=\"contact_number\">Contact Number</label>\n                </div>\n            </section>\n            <div className=\"checkbox mb-3\">\n                <input type=\"checkbox\" value=\"remember-me\" onChange={handleChange}/> Remember me\n            </div>\n            <button className=\"w-100 btn-lg\" onClick={newCustomer}>Sign Up</button>\n            {loginLink()}\n        </section>\n    );\n}\nconst title = _ => {\n    return(\n        <section>\n            <h1>Sign Up</h1>\n            <h3>with</h3>\n            <h2>Le Bistrot d'Andre</h2>\n        </section>\n    );\n}\nconst loginLink = _ => {\n    return(\n        <a href=\"/login\">Already have an account</a>\n    );\n}","import React from \"react\";\nimport \"../style/FinancialFigure.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\nexport const LineChart = (result) => {\n    const data = {\n        labels: result.period,\n        datasets: [\n            {\n                label: \"Sales Revenue (exclude discount offers)\",\n                data: result.revenue,\n                fill: true,\n                borderColor: \"rgba(75,192,192,1)\"\n            },\n            {\n                label: \"Net Profit from Sales (Sales Revenue minus meals' costs and discount offers)\",\n                data: result.profit,\n                fill: true,\n                borderColor: \"#742774\"\n            }\n        ]\n    };\n\n    return (\n        <div>\n            <Line data={data} />\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {Title} from \"../../component/Title.js\";\nimport \"../style/FinancialFigure.css\";\nimport { LineChart } from \"./LineChart.js\";\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\n\nexport const FinancialFigure = _ => {\n    const [filter, setFilter] = useState({\n        timeInterval: \"Daily\",\n        location: \"All Locations\",\n        startPeriod: new Date().getFullYear() + \"-\" + (new Date().getMonth() < 10 ? \"0\" : \"\") + new Date().getMonth() + \"-\" + (new Date().getDate() < 10 ? \"0\" : \"\") + new Date().getDate(),\n        endPeriod: new Date().getFullYear() + \"-\" + ((new Date().getMonth()+1) < 10 ? \"0\" : \"\") + (new Date().getMonth()+1) + \"-\" + (new Date().getDate() < 10 ? \"0\" : \"\") + new Date().getDate()\n    });\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        try{\n            if(filter.startPeriod > filter.endPeriod){\n                return alert(\"The first date selection is the start date while the second date selection is the end date.\\r\\n\\r\\nThe start date cannot be larger than the end date.\");\n            }\n            const getData = async _ =>{\n                const res = await fetch(\"/api/getfinancialreport\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        timeInterval: filter.timeInterval,\n                        location: filter.location,\n                        startDate: filter.startPeriod,\n                        endDate: filter.endPeriod\n                    })\n                })\n                const data = await res.json();\n                if(data.status){\n                    const temp = {\n                        period: data.periods,\n                        revenue: data.revenue,\n                        profit: data.profit\n                    }\n                    setData(temp);\n                }else{\n                    const temp = {\n                        period: \"\",\n                        revenue: [0],\n                        profit: [0]\n                    }\n                    setData(temp);\n                }\n            }\n            getData();\n        }catch(error){\n            alert(error);\n        }\n    }, [filter])\n\n    return(\n        <section className=\"FinancialFigure\">\n            {Title(\"Financial Figures\")}\n            <div className=\"container\">\n                <div style={{marginBottom: 20}}>\n                    {filterDropdown(filter, setFilter)}\n                </div>\n                {LineChart(data)}\n            </div>\n        </section>\n    )\n}\n\nconst filterDropdown = (filter, setFilter) => {\n    const size = 3;\n    return(\n        <Row noGutters className=\"menu-dropdown filter-dropdown\">\n            {startPeriodFilter(filter, setFilter, size)}\n            {endPeriodFilter(filter, setFilter, size)}\n            {timeIntervalFilter(filter, setFilter, size)}\n            {locationFilter(filter, setFilter, size)}\n        </Row>\n    )\n}\n\nconst startPeriodFilter = (filter, setFilter, size) => {\n    return(\n        <Col xs=\"12\" sm={size}>\n            <input type=\"date\" required=\"required\" className=\"booking-dropdown\" defaultValue = {filter.startPeriod}\n                onChange={e => {\n                    let newSel = {\n                        ...filter,\n                        startPeriod: new Date(e.target.value)\n                    };\n                    setFilter(newSel);\n                }}\n            ></input>\n        </Col>\n    )\n}\n\nconst endPeriodFilter = (filter, setFilter, size) => {\n    return(\n        <Col xs=\"12\" sm={size}>\n            <input type=\"date\" required=\"required\" className=\"booking-dropdown\" defaultValue = {filter.endPeriod}\n                onChange={e => {\n                    let newSel = {\n                        ...filter,\n                        endPeriod: new Date(e.target.value)\n                    };\n                    setFilter(newSel);\n                }}\n            ></input>\n        </Col>\n    )\n}\n\nconst timeIntervalFilter = (filter, setFilter, size) => {\n    const timeIntervals = [\"Daily\", \"Weekly\", \"Monthly\", \"Yearly\"];\n    const getTimeInterval = _ => {\n        let newTimeIntervals = [];\n        timeIntervals.forEach(timeInterval => {\n            newTimeIntervals.push(\n                <DropdownItem key={timeInterval} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                timeInterval: timeInterval\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {timeInterval}\n                </DropdownItem>\n            );\n        });\n        return newTimeIntervals;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.timeInterval}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getTimeInterval()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n\nconst locationFilter = (filter, setFilter, size) => {\n    const locations = [\"All Locations\", \"2/1-25 Harbour St\", \"123 Victoria St, Potts Point\", \"241 Victoria St, Darlinghurst\"];\n    const getLocation = _ => {\n        let newLocation = [];\n        locations.forEach(location => {\n            newLocation.push(\n                <DropdownItem key={location} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                location: location\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {location}\n                </DropdownItem>\n            );\n        });\n        return newLocation;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.location}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getLocation()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}\n\n","import React from \"react\";\nimport '../../style/AccountList.css';\n\nexport const AccountTable = (users, username) => {\n    return(\n        <section>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" className=\"col-1 text-center\">Type</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Username</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Email</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">First Name</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Last Name</th>\n                        <th scope=\"col\" className=\"col-1 text-center\">Date of Birth</th>\n                        <th scope=\"col\" className=\"col-2 text-center\">Contact Number</th>\n                        <th scope=\"col\" className=\"col-1 text-center\"></th>\n                        <th scope=\"col\" className=\"col-1 text-center\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {list(users, username)}\n                </tbody>\n            </table>\n        </section>\n    )\n}\n\nconst list = (users, username) => {\n    const items = [];\n    for(let i=0; i<users.length; ++i){\n        const item = users[i];\n        items.push(tableItem(item, username));\n    }\n    return items;\n}\n\nconst tableItem = (user, username) => {\n    let dob = new Date(String(user.dateOfBirth));\n    dob = dob.getFullYear() + \"-\" + ((dob.getMonth()+1) < 10 ? \"0\" : \"\") + (dob.getMonth()+1) + \"-\" + (dob.getDate() < 10 ? \"0\" : \"\") + dob.getDate();\n    \n    const updateData = _ =>{\n        try{\n            const username = document.getElementById(`usernameInput${user._id}`).value;\n            const email = document.getElementById(`emailInput${user._id}`).value;\n            const firstName = document.getElementById(`firstNameInput${user._id}`).value;\n            const lastName = document.getElementById(`lastNameInput${user._id}`).value;\n            const dateOfBirth = document.getElementById(`dobInput${user._id}`).value;\n            const contactNumber = document.getElementById(`contactNumberInput${user._id}`).value;\n\n            if(!(username && email && firstName && dateOfBirth && contactNumber))\n                return alert(\"Please fill in all of the non-optional data!\");\n                \n            fetch(\"/api/updateuser\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    userID: user._id,\n                    username: username,\n                    password: user.password,\n                    validationPass: user.password,\n                    email: email,\n                    firstName: firstName,\n                    lastName: lastName,\n                    dateOfBirth: dateOfBirth,\n                    contactNumber: contactNumber\n                })\n            })\n                .then((res) => { return res.json(); } )\n                .then((data) => {\n                    alert(data.message);\n                    if(data.status){\n                        window.location.reload();\n                    }\n                });\n        }catch(error){\n            alert(error);\n        }\n    }\n    \n    const deleteAccount = _ =>{\n        try{\n            if(!window.confirm(`Are you sure to delete ${user.username}?`)){\n                return;\n            }\n            fetch(`/api/deleteuser?userID=${user._id}&password=${user.password}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n        }catch(error){\n            alert(error);\n        }\n    }\n\n    return (\n        <tr>\n            <td>{(String(user.userType).toUpperCase() === \"C\" ? \"Customer\" : (String(user.userType).toUpperCase() === \"M\" ? \"Manager\" : \"Employee\"))}</td>\n            <td><input id={`usernameInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.username}/></td>\n            <td><input id={`emailInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.email}/></td>\n            <td><input id={`firstNameInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.firstName}/></td>\n            <td><input id={`lastNameInput${user._id}`} className=\"form-control text-center\" type=\"text\" defaultValue={user.lastName}/></td>\n            <td><input id={`dobInput${user._id}`} className=\"form-control text-center\" type=\"date\" defaultValue={dob}/></td>\n            <td><input id={`contactNumberInput${user._id}`} lassName=\"form-control text-center\" type=\"text\" defaultValue={user.contactNumber}/></td>\n            {((String(user.userType).toUpperCase() !== \"M\" || String(username).toLowerCase() === \"admin\") &&  String(user.username).toLowerCase() !== \"admin\") ?  <td><button onClick={updateData} >Edit</button> </td> : <td></td> }\n            {((String(user.userType).toUpperCase() !== \"M\" || String(username).toLowerCase() === \"admin\") &&  String(user.username).toLowerCase() !== \"admin\") ?  <td><button className=\"btn btn-sm btn-danger\" onClick={deleteAccount} ><i className=\"fa fa-trash\"></i> </button> </td> : <td></td> }\n        </tr>\n    )\n}\n","import React, {useState} from \"react\";\n\nexport const CreateAccount = _ => {\n    const [username, setUsername] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [email, setEmail] = useState(null);\n    const [firstName, setFirstName] = useState(null);\n    const [lastName, setLastName] = useState(\"\");\n    const [dateOfBirth, setDateOfBirth] = useState(null);\n    const [contactNumber, setContactNumber] = useState(null);\n\n    const closeDiscountForm = _ => {\n        document.getElementById(\"createAccountForm\").style.display = \"none\";\n    }\n\n    const addAccount = _ => {\n        if(!(username && email && firstName && dateOfBirth && contactNumber))\n            return alert(\"Please fill in all of the non-optional data!\");\n        if(password.length < 8)\n            return alert(\"Password should be at least 8 characters!\");\n        \n        const accountType = document.getElementById(\"accountTypeSelection\").value;\n\n        fetch(`/api/signup?username=${username}&password=${password}&email=${email}&firstName=${firstName}&lastName=${lastName}&dateOfBirth=${dateOfBirth}&contactNumber=${contactNumber}&accountType=${accountType}`)\n            .then((res) => { return res.json(); } )\n            .then((data) => {\n                alert(data.message);\n                if(data.status){\n                    window.location.reload();\n                }\n            });\n    }\n\n    return(\n        <section id=\"createAccountForm\" className=\"form-popup center form-container\">\n            <h2>CREATE NEW ACCOUNT</h2>\n            <div className=\"form-floating\">\n                <select id=\"accountTypeSelection\" >\n                    <optgroup label=\"Account Types\">\n                        <option value=\"M\">Manager</option>\n                        <option value=\"E\">Employee</option>\n                        <option value=\"C\">Customer</option>\n                    </optgroup>\n                </select>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={event => setUsername(event.target.value)} />\n                <label >Username</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"email\" className=\"form-control\" placeholder=\"Email\" onChange={event => setEmail(event.target.value)} />\n                <label >Email</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={event => setPassword(event.target.value)} />\n                <label >Password</label>\n            </div>\n            <div className=\"form-floating left-field\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" onChange={event => setFirstName(event.target.value)} />\n                <label >First Name</label>\n            </div>\n            <div className=\"form-floating right-field\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Last Name (optional)\" onChange={event => setLastName(event.target.value)} />\n                <label >Last Name (optional)</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"date\" className=\"form-control\" onChange={event => setDateOfBirth(event.target.value)} />\n                <label >Date of Birth</label>\n            </div>\n            <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Contact Number\" onChange={event => setContactNumber(event.target.value)} />\n                <label >Contact Number</label>\n            </div>\n            <div className=\"center-side-button\">\n                <button type=\"button\" className=\"btn-lg\" onClick={addAccount}>Create</button>\n                <button type=\"button\" className=\"btn-lg\" onClick={closeDiscountForm} >Cancel</button>\n            </div>\n        </section>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Title } from \"../../../component/Title\";\nimport '../../style/AccountList.css';\nimport {\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n}from \"reactstrap\";\nimport { AccountTable } from \"./AccountTable\";\nimport { getUserID } from \"../../../App\";\nimport { CreateAccount } from \"./CreateAccount\";\n\nexport const AccountList = _ => {\n    const [username, setUsername] = useState(\"\");\n    const [filter, setFilter] = useState({\n        accountType: \"All Account Types\"\n    });\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        fetch(`/api/profile?userID=${getUserID()}`)\n            .then((res) => {return res.json()})\n            .then((data) => setUsername(data.username));\n    }, []);\n\n    useEffect(() => {\n        const getData = async _ => {\n            setUsers([]);\n            const res = await fetch(\"/api/getaccountlist\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    accountType: filter.accountType\n                })\n            });\n            const data = await res.json();\n            if(!data.status)\n                setUsers([]);\n            else\n                setUsers(data.users);\n        }\n        getData();\n    }, [filter])\n\n    const openCreateAccountForm = _ => {\n        document.getElementById(\"createAccountForm\").style.display = \"block\";\n    }\n\n    return(\n        <section className=\"account-list\">\n            {CreateAccount()}\n            {Title(\"Account List\")}\n            <div className=\"container\">\n                <div style={{marginBottom: 20}}>\n                    {filterDropdown(filter, setFilter)}\n                </div>\n                <div style={{overflow: \"auto\"}}>\n                    {AccountTable(users, username)}\n                </div>\n                <div style={{textAlign: \"right\"}}>\n                    <button className=\"btn-lg\" onClick={openCreateAccountForm}>Create New Account</button>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nconst filterDropdown = (filter, setFilter) => {\n    const size = 12;\n    return(\n        <Row noGutters className=\"menu-dropdown filter-dropdown\">\n            {accountTypeFilter(filter, setFilter, size)}\n        </Row>\n    )\n}\n\nconst accountTypeFilter = (filter, setFilter, size) => {\n    const accountTypes = [\"All Account Types\", \"Manager\", \"Employee\", \"Customer\"];\n    const getAccountType = _ => {\n        let newAccountType = [];\n        accountTypes.forEach(type => {\n            newAccountType.push(\n                <DropdownItem key={type} className=\"booking-dropdown-item\" \n                        onClick={_=> {\n                            let newSel = {\n                                ...filter,\n                                accountType: type\n                            };\n                            setFilter(newSel);\n                        }}\n                        >\n                    {type}\n                </DropdownItem>\n            );\n        });\n        return newAccountType;\n    }\n    return(\n        <Col xs=\"12\" sm={size}>\n            <UncontrolledDropdown>\n                <DropdownToggle color=\"none\" caret className=\"booking-dropdown\">{filter.accountType}</DropdownToggle>\n                <DropdownMenu className=\"booking-dropdown-menu\">{getAccountType()}</DropdownMenu>\n            </UncontrolledDropdown>\n        </Col>\n    )\n}","import React from \"react\";\nimport {Routes, Route} from \"react-router-dom\";\nimport {Navbar} from \"./Navbar/component/Navbar\";\nimport {Homepage} from \"./component/Homepage\";\nimport {Menu} from \"./menu/component/Menu\";\nimport {Book} from \"./reservation/component/Book\";\nimport {Discount} from \"./Discount/component/Discount\";\nimport {Profile} from \"./profile/component/Profile\";\nimport {Login} from \"./account/component/Login\";\nimport {Signup} from \"./account/component/SignUp\";\nimport { FinancialFigure } from \"./financial_figure/component/FinancialFigure\";\nimport { AccountList } from \"./account/component/staff_access/AccountList\";\n\nexport const getUserID = _ => {\n  const rememberMe = localStorage.getItem(\"rememberMe\");\n  if(rememberMe === \"true\")\n    return (localStorage.getItem(\"userID\"));\n  else\n    return (sessionStorage.getItem(\"userID\"));\n}\nexport const logOut = _ => {\n  const rememberMe = localStorage.getItem(\"rememberMe\");\n  if(rememberMe === \"true\")\n    localStorage.removeItem(\"userID\");\n  else\n    sessionStorage.removeItem(\"userID\");\n  window.location.href='/';\n}\n\nfunction App(){\n  return(\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Navbar page=\"homepage\"/>}>\n          <Route element={<Homepage/>}/>\n        </Route>\n        <Route path=\"/menu\" element={<Navbar page=\"menu\"/>}>\n          <Route element={<Menu/>}/>\n        </Route>\n        <Route path=\"/login\" element={<Navbar page=\"login\"/>}>\n          <Route element={<Login/>}/>\n        </Route>\n        <Route path=\"/signup\" element={<Navbar page=\"signup\"/>}>\n          <Route element={<Signup/>}/>\n        </Route>\n        <Route path=\"/reservation\" element={<Navbar page=\"reservation\"/>}>\n          <Route element={<Book/>}/>\n        </Route>\n        <Route path=\"/discount\" element={<Navbar page=\"discount\"/>}>\n          <Route element={<Discount/>}/>\n        </Route>\n        <Route path=\"/financialfigure\" element={<Navbar page=\"financialfigure\"/>}>\n          <Route element={<FinancialFigure/>}/>\n        </Route>\n        <Route path=\"/profile\" element={<Navbar page=\"profile\"/>}>\n          <Route element={<Profile/>}/>\n        </Route>\n        <Route path=\"/accountlist\" element={<Navbar page=\"accountlist\"/>}>\n          <Route element={<AccountList/>}/>\n        </Route>\n        <Route path=\"*\" element={<Navbar/>}/>\n      </Routes>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render( \n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}